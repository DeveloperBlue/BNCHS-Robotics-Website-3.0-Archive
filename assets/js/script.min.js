$(document).ready(function(){

(function(){

	if(!('requestAnimationFrame' in window)) return;
	if(/Mobile|Android/.test(navigator.userAgent)) return;

	var backgrounds = [];

	$('[data-bs-parallax-bg]').each(function(){
		var el = $(this);
		var bg = $('<div>');

		bg.css({
			backgroundImage: el.css('background-image'),
			backgroundSize: 'cover',
			backgroundPosition: 'center',
			position: 'absolute',
			height:'200%',
			width:'100%',
			top:0, left:0,
			zIndex: -100
		});

		bg.appendTo(el);
		backgrounds.push(bg[0]);

		el.css({
			position:'relative',
			background:'transparent',
			overflow: 'hidden',
		});
	});

	if(!backgrounds.length) return;

	var visible = [];
	var scheduled;

	$(window).on('scroll resize', scroll);

	scroll();

	function scroll(){

		visible.length = 0;

		for(var i = 0; i < backgrounds.length; i++){
			var rect = backgrounds[i].parentNode.getBoundingClientRect();

			if(rect.bottom > 0 && rect.top < window.innerHeight){
				visible.push({
					rect: rect,
					node: backgrounds[i]
				});
			}

		}

		cancelAnimationFrame(scheduled);

		if(visible.length){
			scheduled = requestAnimationFrame(update);
		}

	}

	function update(){

		for(var i = 0; i < visible.length; i++){
			var rect = visible[i].rect;
			var node = visible[i].node;

			var quot = Math.max(rect.bottom, 0) / (window.innerHeight + rect.height);

			node.style.transform = 'translate3d(0, '+(-50*quot)+'%, 0)';
		}

	}

})();
});
var FAVORITES = {};

var RESOURCE_DATA = {
	"Team Resources": {
		"COLUMN" : 1,
		"Branding": {
			"Logos and Branding": "https://www.dropbox.com/sh/q91dzadrlu3khkb/AACm7lRODWkCuwFAJLWXRxkoa?dl=0",
			"Transition Cards & Backgrounds": "https://www.dropbox.com/sh/q91dzadrlu3khkb/AACm7lRODWkCuwFAJLWXRxkoa?dl=0",
			"Branding Colors:": {
				"COLOR_OBJECT:rgb(30, 108, 147)": {
					"rgb": "rgb(30,108,147)",
					"hex": "#1E6C93"
				},
				"COLOR_OBJECT:rgb(255, 106, 0)": {
					"rgb": "rgb(255,106,0)",
					"hex": "#FF6A00"
				}
			}
		}
	},
	"General FRC Resources": {
		"COLUMN" : 1,
		"FIRST": {
			"FIRST Website": "http://www.firstinspires.org/",
			"FIRST Resource Library": "http://www.firstinspires.org/resource-library",
			"Game Resources": "http://www.firstinspires.org/resource-library/frc/competition-manual-qa-system",
			"FRC Penultimate Manual": "https://github.com/MC42/FRCPenultimateManual"
		},
		"Communities": {
			"FRC Discord": "https://github.com/MC42/FRCPenultimateManual",
			"FRC Subreddit r/FRC": "https://www.thecompassalliance.org/",
			"Cheif Delphi": "https://www.chiefdelphi.com/",
			"The Blue Alliance": "https://www.thebluealliance.com/",
			"The Compass Alliance": "https://www.thecompassalliance.org/",
			"Awesome FRC": "https://github.com/andrewda/awesome-frc/",
			"FIRST Map": "https://firstmap.github.io/"
		},
		"Branding Resources": {
			"FIRST Logo Colors": {
				"COLOR_OBJECT:rgb(237, 28, 36)": {
					"rgb": "rgb(237, 28, 36)",
					"hex": "#ed1c24"
				},
				"COLOR_OBJECT:rgb(0, 102, 179)": {
					"rgb": "rgb(0, 101, 179)",
					"hex": "#0066b3"
				},
				"COLOR_OBJECT:rgb(35, 31, 32)": {
					"rgb": "rgb(35, 31, 32)",
					"hex": "#231f20"
				},
				"COLOR_OBJECT:rgb(154, 152, 154)": {
					"rgb": "rgb(153, 153, 154)",
					"hex": "#9a989a"
				}
			},
			"FIRST Brand Files": "https://www.firstinspires.org/brand",
			"FIRST Brand & Logo Guidelines": "https://www.firstinspires.org/sites/default/files/uploads/resource_library/first-brand-guidelines-web-2015.pdf",
			"Logos": "https://firstinspiresst01.blob.core.windows.net/frc/dlc1-2018-logos.zip",
			"Wallpapers": "https://firstinspiresst01.blob.core.windows.net/frc/dlc1-2018-wallpapers.zip",
			"Social Media Covers": "https://firstinspiresst01.blob.core.windows.net/frc/dlc1-2018-social-media-covers.zip",
			"Ringtones and Notification Sounds": "https://firstinspiresst01.blob.core.windows.net/frc/dlc1-2018-ringtones-and-notifications.zip"
		},
		"Chairmans": {
			"Chairman's Discord Server": "https://discord.gg/3ACVymS",
			"FIRST's Official Chairman's Award Resources": "https://www.firstinspires.org/resource-library/frc/chairmans-award-resources"
		}
	},
	"Mechanical Engineering": {
		"COLUMN" : 2,
		"Manuals" : {

		},
		"Guides": {
			"SDP-SI Center Distance Designer & Calculator": "http://sdp-si.com/estore/centerdistancedesigner",
			"BIG Design Handbook": "https://drive.google.com/file/d/0B2EZULD2YbV-dGxkWmdRcnZoLWs/view?usp=sharing",
			"FIRST Mechanical Resource Library": "https://www.firstinspires.org/resource-library/frc/mechanical-resources",
			"Drive System Designs": "https://video.wpi.edu/Watch/Qs8n6JZa",
			"FRC Drive Systems": "https://video.wpi.edu/Watch/z7JPy2o3",
			"Chassis Design Considerations": "https://video.wpi.edu/Watch/x9Y5Cmt7",
			"Meccanum Omni Drive: How It Worked & Lessons Learned": "http://first.wpi.edu/Images/CMS/First/2006CON_Mecanum_Omniwheels_Hine.ppt",
			"Reliability and Troubleshooting Drive Systems": "http://first.wpi.edu/Images/CMS/First/2006CON_Reliability_and_Troubleshooting_TenBrink_Major.ppt",
			"Mechanisms 1: Collection Systems": "http://media.wpi.edu/News/Events/Robotics/First/2008/Videos/2008FRC_Mechanisms1_Collection_Ventimiglia.wmv",
			"Mechanisms 2: Arms & Lifters": "http://media.wpi.edu/News/Events/Robotics/First/2008/Videos/2008FRC_Mechanisms2_ArmsLifters_Ventimiglia.wmv",
			"Linear Motion Components": "http://media.wpi.edu/News/Events/Robotics/First/2008/Videos/2008FRC_Linear_Motion_Wisecarver.wmv",
			"Mechanisms & Manipulators": "http://first.wpi.edu/Images/CMS/First/2005CON_Mechanisms_and_Manipulators.ppt",
			"2017 Motor Performance Data": "https://firstfrc.blob.core.windows.net/frc2017/2017-motor-information.pdf",
			"Denso Window Motor Specification": "https://firstfrc.blob.core.windows.net/frc2016manuals/Denso-Window-Motor.pdf",
			"Van Door Motor Specification": "http://first.wpi.edu/Images/CMS/First/2008FRC_Van_Door_Motor_Spec.pdf",
			"Motor and Gearbox Selection": "https://www.youtube.com/watch?feature=player_embedded&v=WPX3z-qLSk0"
		},
	},
	"Electrical Engineering" : {
		"COLUMN" : 2,
		"Manuals" : {

		},
		"Guides": {
			"BIG Design Handbook": "#"
		},
	},
	"Pneumatics" : {
		"COLUMN" : 2,
		"Manuals" : {
			"2018 Pneumatics Manual": "https://firstfrc.blob.core.windows.net/frc2017/pneumatics-manual.pdf"
		},
		"Guides": {
			"Effectively Using Pneumatics by Ken Stafford (DEAD LINK)": "#",
			"Pneumatics Power Concepts - 2006 Conference": "http://first.wpi.edu/Images/CMS/First/2006CON_Olivera_Pneumatic_Power.ppt",
			"Pneumatics Power Concepts - 2007 Conference": "http://first.wpi.edu/Images/CMS/First/2007CON_Pneumatic_Power_Olivera.pdf"
		},
	},
	"Computer Aided Design (CAD)" : {
		"COLUMN" : 2,
		"Manuals" : {

		},
		"Guides": {
			"Practice": "https://drive.google.com/drive/folders/0B9Om0-zmjGhYakFocjJYWWhQODQ?usp=sharing",
			"BIG Design Handbook": "https://drive.google.com/file/d/0B2EZULD2YbV-dGxkWmdRcnZoLWs/view?usp=sharing"
		}
	},
	"Popular Suppliers": {
		"COLUMN" : 2,
		"Popular Suppliers": {
			"VEXpro": "http://www.vexrobotics.com/vexpro",
			"AndyMark": "http://www.andymark.com/",
			"McMaster-Carr": "https://www.mcmaster.com/",
			"CTR Electronics": "http://www.ctr-electronics.com/"
		}
	},
	"Programming": {
		"COLUMN" : 3,
		"Manuals" : {

		},
		"Guides": {
			"WPILibJ Documentation": "#",
			"NI roboRIO User Manual": "#",
			"WPILib Respository (Java & C++)": "#",
			"WPILib Java Tutorial": "#",
			"WPILib LabVIEW Tutorial": "#",
			"RobotPy": "#",
			"IntelliJ Getting Started for FRC": "#",
			"Vision Processing (GRIP + Java)": "#",
			"Vision Processing (OpenCV + Python)": "#"
		},
		"Utilities": {
			"SmartDashboard": "#",
			"QDriverStation": "#",
			"FRCDashboard": "#",
			"JavaFX Dashboard": "#"
		},
		"Software Archives": {
			"2018 - POWER UP - Quick Silver": "https://github.com/Team5599/Robot2018",
			"2017 - STEAMWORKS - HAL 5700": "https://github.com/Team5599/Robot2017",
			"2016 - STRONGHOLD - The Hound": "https://github.com/Team5599/Robot2016",
			"2015 - RECYCLE RUSH - Pied Piper": "https://github.com/Team5599/Robot2015",
			"Java Controller Wrappers": "https://github.com/Team5599/Java-Controller-Wrappers"
		}
	},
	"Marketing": {
		"COLUMN" : 3,
		"Guides": {
			"Making a Business Plan": "https://www.chiefdelphi.com/forums/showpost.php?p=327783&postcount=7",
			"FIRST Resource Library": "http://www.firstinspires.org/resource-library"
		},
		"Resources": {
			"One Page Game Description": "https://www.firstinspires.org/sites/default/files/uploads/resource_library/frc/game-and-season-info/competition-manual/2018/first-spectatorflyer18-frc-ltr-dec-form.pdf",
			"Recruitment Poster #1": "http://firstinspiresst01.blob.core.windows.net/frc/first-frc18-challenge-recruit-poster-11x17-print-e.pdf",
			"Recruitment Poster #2": "https://firstinspiresst01.blob.core.windows.net/frc/dlc1-2018-recruitment-poster.zip"
		},
		"Logistics": {
			"Safety Guide": "https://www.firstinspires.org/robotics/frc/safety",
			"Rules and Expectations": "https://www.firstinspires.org/resource-library/frc/event-experience",
			"Robot Transportation": "https://www.firstinspires.org/resource-library/frc/robot-transportation",
			"Team Contact Responsibilities & Resources": "https://www.firstinspires.org/resource-library/frc/team-contact-resources"
		}
	},
	"Media": {
		"COLUMN" : 3,
		"Guides": {},
		"Free Stock Images & Videos": {
			"Awesome Images": "https://github.com/heyalexej/awesome-images",
			"Unsplash": "https://unsplash.com/",
			"Pixabay": "https://pixabay.com/",
			"PEXELS": "https://www.pexels.com/",
			"Free Images": "https://www.freeimages.com/",
			"Stockio": "https://www.stockio.com/free-photo/desert-austin-thesing",
			"LibreStock": "https://librestock.com/",
			"Transparent Textures": "https://www.transparenttextures.com/",
			"Subtle Patterns": "https://www.toptal.com/designers/subtlepatterns/",
			"PEXELS Videos": "https://videos.pexels.com/",
			"Videvo": "https://www.videvo.net/",
		},
		"Free Fonts & Icons" : {
			"Dafont": "https://www.dafont.com/",
			"Google Fonts": "https://fonts.google.com/",
			"1001FreeFonts": "https://www.1001freefonts.com/",
			"FontSpace": "http://www.fontspace.com/popular/fonts",
			"FontBundles": "https://fontbundles.net/free-fonts",
			"Flat Icon": "https://www.flaticon.com/",
			"Icon Finder": "https://www.iconfinder.com/",
			"The Noun Project": "https://thenounproject.com/",
			"PlaceHolder": "https://placeholder.com/",
			"Library of Babel": "https://libraryofbabel.info/",
			"Loading.io": "https://loading.io/#"
		}
	},
	"Scouting": {
		"COLUMN" : 3,
		"Guides" : {

		},
		"Scouting Tools": {
			"FastField Mobile Forms": "https://www.fastfieldforms.com/",
			"VictiScout": "https://github.com/frc1418/VictiScout",
			"Scoutomic": "https://github.com/Scoutomic/Scoutomic-Client"
		}
	},
	"Opportunities": {
		"COLUMN" : 1,
		"Scholarships": {
			"FIRST Scholarships": "https://www.firstinspires.org/scholarships"
		},
		"Internships": {
			"FIRST Alumni Internships": "https://www.firstinspires.org/alumni",
			"Met Museum HS Internships": "https://www.metmuseum.org/about-the-met/internships/high-school/school-year-high-school-internships",
			"Eckerd Youth Programs": "https://eckerd.org/workforce-development/youth-programs/?gclid=CjwKCAjwmqHPBRBQEiwAOvbR850tycgB3Ziy5FFg6d9nO0roHRjqYko936mRkK_3XXSZKDodm5ENmBoCrckQAvD_BwE"
		}
	}
}

function handleResourcesPage(){

	const copyToClipboard = str => {
		const el = document.createElement('textarea');
		el.value = str;
		document.body.appendChild(el);
		el.select();
		document.execCommand('copy');
		document.body.removeChild(el);
	};

	function setCookie(name,value,days) {
		var expires = "";
		if (days) {
			var date = new Date();
			date.setTime(date.getTime() + (days*24*60*60*1000));
			expires = "; expires=" + date.toUTCString();
		}
		document.cookie = name + "=" + (value || "")  + expires + "; path=/";
	}
	function getCookie(name) {
		var nameEQ = name + "=";
		var ca = document.cookie.split(';');
		for(var i=0;i < ca.length;i++) {
			var c = ca[i];
			while (c.charAt(0)==' ') c = c.substring(1,c.length);
			if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
		}
		return null;
	}
	function eraseCookie(name) {   
		document.cookie = name+'=; Max-Age=-99999999;';  
	}

	FAVORITES = JSON.parse(getCookie("favorites"));

	console.log("FAVORITES", typeof FAVORITES, FAVORITES);

	if (typeof FAVORITES == "undefined" || FAVORITES == null){
		FAVORITES = {};
	}

	/*
		Build Resources
	*/

	$('.saved > .header > button[key="custom"]').hide();

	$('.saved > .header > button[key="manage"]').click(function(e){
		e.preventDefault();

		$('.saved > .header > button[key="manage"]').toggleClass("active");

		if ($('.saved > .header > button[key="manage"]').hasClass("active")){
			$(".resources-container-row#favorites").find(".favorite-btn").show();
			$('.saved > .header > button[key="custom"]').show(50);
		} else {
			$(".resources-container-row#favorites").find(".favorite-btn").hide();
			$('.saved > .header > button[key="custom"]').hide(50);
		}

		return false;
	})

	$('.saved > .header > button[key="custom"]').click(function(e){
		e.preventDefault();
		$(".custom-resource-modal").modal();
		$(".custom-resource-modal > .modal-dialog > .modal-content > .modal-body > input").val("");
		return false;

	})

	$(".custom-resource-modal > .modal-dialog > .modal-content > .modal-footer > .btn-success").click(function(e){

		var resource_title = $(".custom-resource-modal > .modal-dialog > .modal-content > .modal-body > input[type='text']").val();
		var resource_url = $(".custom-resource-modal > .modal-dialog > .modal-content > .modal-body > input[type='url']").val();

		if (resource_title.replace(/ /g, "") == ""){
			alert("You must provide a title for this resource.");
			return;
		}

		if (resource_url.replace(/ /g, "") == ""){
			alert("You must provide a url for this resource.");
			return;
		}

		if (typeof FAVORITES["CUSTOM"] == "undefined"){
			FAVORITES["CUSTOM"] = {
				"CUSTOM" : {}
			}
		}

		FAVORITES["CUSTOM"]["CUSTOM"][resource_title] = resource_url;

		$(".custom-resource-modal").modal("hide");

		buildResourcePanel(FAVORITES, $(".resources-container-row#favorites"), true);


	})

	$('.saved > .header > button[key="visibility"]').click(function(e){
		e.preventDefault();

		$('.saved > .header > button[key="visibility"]').toggleClass("active");

		$('.saved > span').remove();

		if ($('.saved > .header > button[key="visibility"]').hasClass("active")){
			$(".resources-container-row#favorites").hide();
			$('.saved').append($('<span style="margin:10px;text-align:center;display:block;"><em>You have hidden your saved resources. Press the <i class="fa fa-eye-slash"></i> to reveal.</em></span>'));
		} else {

			if (Object.keys(FAVORITES).length == 0){
				$('.saved').append($('<span style="margin:10px;text-align:center;display:block;"><em>You have no saved resources. Press the <i class="fa fa-bookmark-o"></i> or <i class="fa fa-star-o"></i> icons to bookmark a resource.</em></span>'));
			} else {
				$(".resources-container-row#favorites").show();
				$('.saved').append($('<span style="margin:10px;text-align:center;display:block;"><em>Your resources are saved on your browser. Clearing your cache will remove your saved resources.</em></span>'));
			}
		}

		return false;
	})

	$('button[key="collapse-lists"]').click(function(e){
		e.preventDefault();

		$(".resources-container-row > div > div > .resource-contents > div").each(function(){

			$(this).children(".resources-header").find(".collapse-btn").css("transform", "rotate(180deg)");
			$(this).children(".resource-contents").stop().animate({height: "hide", opacity: "hide"}, 150);

		})

		return false;
	});

	$('button[key="expand-lists"]').click(function(e){
		e.preventDefault();

		$(".resources-container-row > div > div, .resources-container-row > div > div > .resource-contents > div").each(function(){

			$(this).children(".resources-header").find(".collapse-btn").css("transform", "rotate(0deg)");
			$(this).children(".resource-contents").stop().animate({height: "show", opacity: "show"}, 150);

		})

		return false;
	});

	$('.advanced-search > div, .websearch').hide();

	$(".no-results").hide();

	$('.subdisplay').each(function(){

		var subdisplay = $(this);

		subdisplay.find("a.close").click(function(e){
			e.preventDefault();
			subdisplay.hide();
			return false;
		})
	})

	buildResourcePanel(RESOURCE_DATA, $(".resources-container-row#main"), false);
	buildResourcePanel(FAVORITES, $(".resources-container-row#favorites"), true);

	function buildResourcePanel(DATASET, row_src, isFavorite){

		console.log("Building Resources");

		if (isFavorite && Object.keys(FAVORITES).length == 0){
			row_src.hide();
			$('.saved > span').remove();
			$('.saved').append($('<span style="margin:10px;text-align:center;display:block;"><em>You have no saved resources. Press the <i class="fa fa-bookmark-o"></i> or <i class="fa fa-star-o"></i> icons to bookmark a resource.</em></span>'));
		} else {
			if (!($('.saved > .header > button[key="visibility"]').hasClass("active"))){
				row_src.show();
			}
			$('.saved > span').remove();
			if (Object.keys(FAVORITES).length !== 0){
				$('.saved').append($('<span style="margin:10px;text-align:center;display:block;"><em>Your resources are saved on your browser. Clearing your cache will remove your saved resources.</em></span>'));
			}
		}

		if (isFavorite){
			setCookie("favorites", JSON.stringify(FAVORITES));
		}

		row_src.children("div").empty();

		var fav_col_tracker = 1;

		for (var section_title in DATASET){

			var section_div = $('<div class="clearfix"></div>');
			var section_header = $('<div class="resources-header clearfix"></div>');

			section_header.append($('<h4></h4>').text(section_title));
			section_header.attr("section", section_title);

			section_header.append($('<a class="collapse-btn" href="#"><i class="fa fa-chevron-up"></i></a>'));

			var section_contents = $('<div class="resource-contents"></div>');

			for (var list_title in DATASET[section_title]){

				if (list_title !== "COLUMN"){

					var list_div = $('<div class="clearfix"></div>');
					var list_header = $('<div class="resources-header clearfix"></div>');

					list_header.attr("section", list_title);

					list_header_h = $('<h6></h6>').text(list_title);

					// <-- BEGIN FAVORITES -->

					var btn_favorite_list;

					if (isFavorite){
						btn_favorite_list = $('<a class="favorite-btn"><i class="fa fa-close"></i></a>')
					} else {
						btn_favorite_list = (typeof FAVORITES[section_title] == "undefined" || (typeof FAVORITES[section_title][list_title] == "undefined")) ? $('<a class="favorite-btn" href="#"><i class="fa fa-bookmark-o"></i></a>') : $('<a class="favorite-btn" href="#"><i class="fa fa-bookmark"></i></a>');
					}

					list_header_h.append(btn_favorite_list);

					btn_favorite_list.attr("section", section_title);
					btn_favorite_list.attr("list", list_title);

					if (isFavorite && !($('.saved > .header > button[key="manage"]').hasClass("active"))){
						btn_favorite_list.hide();
					}

					btn_favorite_list.click(function(e){
						e.preventDefault();

						var s_t = $(this).attr("section");
						var l_t = $(this).attr("list");

						console.log(s_t, l_t);

						if (typeof FAVORITES[s_t] == "undefined"){
							FAVORITES[s_t] = {};
						}

						if (typeof FAVORITES[s_t][l_t] == "undefined"){

							FAVORITES[s_t][l_t] = {};

							$(this).html('<i class="fa fa-bookmark"></i>');

							for (var bullet_item in DATASET[s_t][l_t]){
								if (typeof DATASET[s_t][l_t][bullet_item] == "object"){
									FAVORITES[s_t][l_t][bullet_item] = DATASET[s_t][l_t][bullet_item];
								} else {
									FAVORITES[s_t][l_t][bullet_item] = true;
								}
								
							}

							$(this).parent().parent().parent().children(".resource-contents").find(".favorite-btn").each(function(){
								$(this).html('<i class="fa fa-star"></i>');
							})

						} else {
							delete FAVORITES[s_t][l_t];

							if (Object.keys(FAVORITES[s_t]).length == 0){
								delete FAVORITES[s_t]
							}

							$(this).html('<i class="fa fa-bookmark-o"></i>');

							$(this).parent().parent().parent().children(".resource-contents").find(".favorite-btn").each(function(){
								$(this).html('<i class="fa fa-star-o"></i>');
								$(".resources-container-row#main").find('.favorite-btn[section="' + s_t + '"][list="' + l_t + '"][bullet="' + $(this).attr("bullet") + '"]').html('<i class="fa fa-star-o"></i>');
							})

							$(".resources-container-row#main").find('.favorite-btn[section="' + s_t + '"][list="' + l_t + '"]:not([bullet])').html('<i class="fa fa-bookmark-o"></i>');

						}

						buildResourcePanel(FAVORITES, $(".resources-container-row#favorites"), true);

						return false;
					})


					// <-- END FAVORITES -->

					list_header_h.append($('<a class="collapse-btn" href="#"><i class="fa fa-chevron-up"></i></a>'));

					list_header.append(list_header_h);

					var list_contents = $('<div class="resource-contents"></div>');

					var list = $('<ul class="no_bullet clearfix"></ul>');
					list_contents.append(list);
					list_contents.append($('<div class="content-bar"></div>'));

					if (Object.keys(DATASET[section_title][list_title]).length == 0){

						var list_item = $('<li class="red_square"></li>').html("<em>This section is empty</em>");
						list.append(list_item);

					} else {

						for (var bullet_item in DATASET[section_title][list_title]){

							var bullet_contents = DATASET[section_title][list_title][bullet_item];

							var list_item = $('<li class="red_square"></li>');

							// <-- BEGIN FAVORITES -->

							var btn_favorite_bullet;

							if (isFavorite){
								btn_favorite_bullet = $('<a class="favorite-btn"><i class="fa fa-close"></i></a>')
							} else {
								btn_favorite_bullet = (typeof FAVORITES[section_title] == "undefined" || (typeof FAVORITES[section_title][list_title] == "undefined") || (typeof FAVORITES[section_title][list_title][bullet_item] == "undefined")) ? $('<a class="favorite-btn" href="#"><i class="fa fa-star-o"></i></a>') : $('<a class="favorite-btn" href="#"><i class="fa fa-star"></i></a>');
							}

							btn_favorite_bullet.attr("section", section_title);
							btn_favorite_bullet.attr("list", list_title);
							btn_favorite_bullet.attr("bullet", bullet_item);

							if (isFavorite && !($('.saved > .header > button[key="manage"]').hasClass("active"))){
								btn_favorite_bullet.hide();
							}

							btn_favorite_bullet.click(function(e){
								e.preventDefault();

								var s_t = $(this).attr("section");
								var l_t = $(this).attr("list");
								var b_t = $(this).attr("bullet");

								if (typeof FAVORITES[s_t] == "undefined"){
									FAVORITES[s_t] = {};
								}

								if (typeof FAVORITES[s_t][l_t] == "undefined"){
									FAVORITES[s_t][l_t] = {};
								}

								if (typeof FAVORITES[s_t][l_t][b_t] == "undefined"){
									if ($(this).attr("colorObject") == "true"){
										FAVORITES[s_t][l_t][b_t] = RESOURCE_DATA[s_t][l_t][b_t];
									} else {
										FAVORITES[s_t][l_t][b_t] = true;
									}
									
									$(this).html('<i class="fa fa-star"></i>');

									if (Object.keys(FAVORITES[s_t][l_t]).length == Object.keys(RESOURCE_DATA[s_t][l_t]).length){
										$(this).parent().parent().parent().parent().children(".resources-header").find(".favorite-btn").html('<i class="fa fa-bookmark"></i>');
									}

								} else {
									delete FAVORITES[s_t][l_t][b_t];

									/*
									if (Object.keys(FAVORITES[s_t][l_t]).length != Object.keys(RESOURCE_DATA[s_t][l_t]).length){
										$(this).parent().parent().parent().parent().children(".resources-header").find(".favorite-btn").html('<i class="fa fa-bookmark-o"></i>');
									}
									*/


									if (Object.keys(FAVORITES[s_t][l_t]).length == 0){
										delete FAVORITES[s_t][l_t];

										$(this).parent().parent().parent().parent().children(".resources-header").find(".favorite-btn").html('<i class="fa fa-bookmark-o"></i>');
										$(".resources-container-row#main").find('.favorite-btn[section="' + s_t + '"][list="' + l_t + '"]:not([bullet])').html('<i class="fa fa-bookmark-o"></i>');
									
									}

									if (Object.keys(FAVORITES[s_t]).length == 0){
										delete FAVORITES[s_t];
									}

									$(this).html('<i class="fa fa-star-o"></i>');
									$(".resources-container-row#main").find('.favorite-btn[section="' + s_t + '"][list="' + l_t + '"][bullet="' + b_t + '"]').html('<i class="fa fa-star-o"></i>');
								}

								buildResourcePanel(FAVORITES, $(".resources-container-row#favorites"), true);

								return false;
							})

							// <-- END FAVORITES -->


							if (typeof bullet_contents == "object"){

								btn_favorite_bullet.attr("colorObject", true);

								list_item.text(bullet_item);
								list_item.addClass("color-display");

								list_item.append(btn_favorite_bullet);

								for (var color_tag in bullet_contents){

									var color_div = $('<div class="clearfix"></div>');

									var color_block = $('<div></div>').css("background-color", bullet_contents[color_tag].rgb);
									color_div.append(color_block);

									for (var color_type in bullet_contents[color_tag]){

										var color_btn = $('<button class="btn btn-outline-dark" type="button"></button>').text(bullet_contents[color_tag][color_type]);
										color_btn.append($('<i class="fa fa-copy"></i>'));

										color_btn.click(function(e){
											e.preventDefault();

											$('.clipboard-success').remove();

											copyToClipboard($(this).text());
											var clipboard_alert = $('<span class="clipboard-success bg-success">Copied to clipboard <i class="fa fa-check-circle"></i></span>');
											clipboard_alert.appendTo($(this));
											setTimeout(function(){
												if (clipboard_alert){
													clipboard_alert.fadeOut({
														duration: 100,
														complete: function(){
															clipboard_alert.remove();
														}
													});
												}
											}, 1200)

										})

										color_div.append(color_btn);

									}

									color_div.appendTo(list_item);
								}

							} else {

								list_item.append(btn_favorite_bullet);

								var bullet_contents_free = (bullet_contents == true) ? RESOURCE_DATA[section_title][list_title][bullet_item] : bullet_contents;
								list_item.append($('<a target="_blank"></a>').text(bullet_item).attr("href", bullet_contents_free));

							}

							list.append(list_item);
						}

					}

					list_div.append(list_header).append(list_contents);

					section_contents.append(list_div);
				
				}

			}

			section_div.append(section_header).append(section_contents);

			var col_lookup;

			if (isFavorite){

				col_lookup = fav_col_tracker;
				fav_col_tracker = fav_col_tracker + 1;
				if (fav_col_tracker > 3){
					fav_col_tracker = 1;
				}

			} else {

				col_lookup = (typeof RESOURCE_DATA[section_title] !== "undefined") ? RESOURCE_DATA[section_title]["COLUMN"] : 3;

			}

			row_src.children('div:nth-child(' + col_lookup + ')').append(section_div);


			// <APPEND TO COLUMNS> Length/3?
		}

		row_src.children("div").children("div").each(function(){

			addCollapseTriggers($(this));

			$(this).children(".resource-contents").children("div").each(function(){
				addCollapseTriggers($(this));
			})
		})

	}


	/*
	
		Add Collapsability Animations

	*/

	function addCollapseTriggers(contentMain){

		var btn_collapse = contentMain.children(".resources-header").find(".collapse-btn");
		var collapse_content = contentMain.children(".resource-contents");

		btn_collapse.click(function(e){

			e.preventDefault();

			var isVisible = collapse_content.is(":visible")

			if (isVisible){
				btn_collapse.css("transform", "rotate(180deg)");
				collapse_content.stop().animate({height: "hide", opacity: "hide"}, 150);
			} else {
				btn_collapse.css("transform", "rotate(0deg)");
				collapse_content.stop().animate({height: "show", opacity: "show"}, 150);
			}
			

			return false;
		})

	}


	/*
		Search Functionality
	*/

	console.log("Initiating Search Control");

	$(".advanced-toggle").click(function(e){
		e.preventDefault();

		var isVisible = $(".advanced-search > div").is(":visible")

		if (isVisible){
			$(".advanced-toggle > i").css("transform", "rotate(180deg)");
			$(".advanced-search > div").stop().animate({height: "hide", opacity: "hide"}, 150);
		} else {
			$(".advanced-toggle > i").css("transform", "rotate(0deg)");
			$(".advanced-search > div").stop().animate({height: "show", opacity: "show"}, 150);
		}

		return false;
	})


	$(".resources-container > .control > .search-box > input").on("keypress", function(e){
		if (e.keyCode === 13){
			searchAdvancedWeb();
		}
	});

	$(".resources-container > .control > .search-box > input").on("input", function(e){
		searchResources();
	});

	function clearSearch(){
		$(".websearch").hide();
		$(".no-results").hide();
		$(".resources-container > .control > .search-box > input").val("");
		searchResources();
	}

	$(".resources-container > .control > .search-box > a.clear").click(function(e){
		e.preventDefault();
		clearSearch();
		return false;
	});

	$(".no-results > a").click(function(e){
		e.preventDefault();
		clearSearch();
		return false;
	})

	$(".resources-container > .control > .search-box > button.search").click(function(e){
		e.preventDefault();
		searchAdvancedWeb();
		return false;
	});


	$(".control").find("input[type='checkbox']").change(function(e){
		e.preventDefault();
		searchResources();
		return false;
	})

	function searchResources(){

		var search_options = {
			resources : $("#formCheck-1").is(":checked"),
			saved : $("#formCheck-2").is(":checked"),

			sections : $("#formCheck-5").is(":checked"),
			lists : $("#formCheck-6").is(":checked"),
			bullets : $("#formCheck-8").is(":checked"),

			hrefs : $("#formCheck-4").is(":checked"),
		}

		var results = {};

		var search_query = $(".resources-container > .control > .search-box > input").val().toLowerCase();

		var src;

		if (search_options.resources && search_options.saved){
			src = $(".resources-container-row > div > div");
		} else if (search_options.resources){
			src = $(".resources-container-row#main > div > div");
		} else if (search_options.saved){
			src = $(".resources-container-row#favorites > div > div");
		}

		if (typeof src == "undefined"){
			console.log("Trying to do a search but looking nowhere?");
			return;
		}

		var queryPacket = search_query.split(",");

		function subsearch(input){

			input = input.trim().toLowerCase();

			var valid = false;

			for (var q_index = 0; q_index < queryPacket.length; q_index++){

				var phrase = queryPacket[q_index].trim().toLowerCase();

				if (phrase.replace(/ /g, "") !== ""){

					if (phrase.startsWith("-\"") && phrase.endsWith("\"")){

						var word = phrase.substring(2, phrase.length - 1);


						var foundWord = new RegExp("\\b" + word + "\\b").test(input);
						if (foundWord){
							valid = false;
							return false;
						}

					} else if (phrase.startsWith("-")){

						var word = phrase.substring(1, phrase.length);

						if (input.includes(word)){
							valid = false;
							return false;
						}

					} else if (phrase.startsWith("\"") && phrase.endsWith("\"")){

						var word = phrase.substring(1, phrase.length - 1);

						var foundWord = new RegExp("\\b" + word + "\\b").test(input);
						if (foundWord){
							valid = true;
						}

					} else {

						if (input.includes(phrase)){
							valid = true;
						}
					}

				}

			}

			return valid;

			// QueryPacket : [test, rekt, -negate, "full", -"negate", "test, and then"];

		}

		if (typeof src !== "undefined"){

			if (search_query.replace(/ /g, "") !== ""){

				// For every section . . .
				src.each(function(){

					var section_header = $(this).children(".resources-header");
					var section_ref = section_header.attr("section");

					var stop_search_s = false;

					if (search_options.sections){
						if (subsearch(section_header.find("h4").text())){
							results[section_ref] = {};
							stop_search_s = true;
						}
					}

					// For every list . . .
					if (stop_search_s == false){
						$(this).children(".resource-contents").children("div").each(function(){
							
							var list_header = $(this).children(".resources-header");
							var list_ref = list_header.attr("section");

							console.log(section_ref, ">", list_ref);

							var stop_search_l = false;

							if (search_options.lists){
								if (subsearch(list_header.find("h6").text())){

									if (typeof results[section_ref] == "undefined"){
										results[section_ref] = {};
									}

									results[section_ref][list_ref] = {};
									stop_search_l = true;
								}
							}


							// For every bullet on the list . . .
							if (stop_search_l == false){
								$(this).children(".resource-contents").find("ul > li").each(function(){

									var bullet_text = ($(this).children("a").not(".favorite-btn").length == 0) ? $(this).text().replace("\n/g","") : $(this).children("a").not(".favorite-btn").text();
									var bullet_href = ($(this).children("a").length == 0) ? bullet_text : $(this).children("a").attr("href");

									if ((search_options.bullets && subsearch(bullet_text)) || (search_options.hrefs && (subsearch(bullet_href)))){

										if (typeof results[section_ref] == "undefined"){
											results[section_ref] = {};
										}

										if (typeof results[section_ref][list_ref] == "undefined"){
											results[section_ref][list_ref] = {};
										}

										results[section_ref][list_ref][bullet_text] = bullet_href;

									}

								})
							}


						})

					}

				})

				console.log("RESULTS", results);

				src.each(function(){

					var section_header = $(this).children(".resources-header");
					var section_ref = section_header.attr("section");

					if (typeof results[section_ref] == "undefined"){

						// No matches for section

						$(this).hide();

					} else if (Object.keys(results[section_ref]).length == 0){
						// All section matched, unhide everything.

						$(this).show();

						$(this).children(".resource-contents").children("div, div > .resource-contents > ul > li").each(function(){
						
							$(this).show();

							/*
							$(this).children(".resource-contents").children("ul > li").each(function(){
								$(this).show();
							})
							*/

						})

					} else {
						// Certain subsections matched, check them.

						$(this).show();

						$(this).children(".resource-contents").children("div, div > .resource-contents > ul > li").each(function(){

							var list_header = $(this).children(".resources-header");
							var list_ref = list_header.attr("section");

							if (typeof results[section_ref][list_ref] == "undefined"){

								// No matches for list

								$(this).hide();

							} else if (Object.keys(results[section_ref][list_ref]).length == 0){

								// Entire list was matched, unhide everything

								$(this).show();

								$(this).children(".resource-contents").children("ul > li").each(function(){
									$(this).show();
								})
							} else {

								// Certain bullets matched, check them

								$(this).show();

								$(this).children(".resource-contents").find("ul > li").each(function(){

									var bullet_text = ($(this).children("a").not(".favorite-btn").length == 0) ? $(this).text().replace("\n/g","") : $(this).children("a").not(".favorite-btn").text();
							
									if (typeof results[section_ref][list_ref][bullet_text] == "undefined"){
										$(this).hide();
									} else {
										$(this).show();
									}

								})
							}

						})
					}
				})

				if (Object.keys(results).length == 0){
					$(".no-results").show();
				} else {
					$(".no-results").hide();
				}

			} else {

				src.each(function(){

					var section_header = $(this).children(".resources-header");
					var section_ref = section_header.attr("section");

					$(this).show();

					$(this).children(".resource-contents").children("div, div > .resource-contents > ul > li").each(function(){
					
						$(this).show();

					})

				})
			}

		}

	}

	function searchAdvancedWeb(){

		var search_query = $(".resources-container > .control > .search-box > input").val().toLowerCase();	

		if (search_query.replace(/ /g, "") !== ""){

			$(".websearch > .content-container").empty();

			var search_sites = {
				"Google" : {
					url : "https://www.google.com/search?q=",
					image : "https://image.flaticon.com/teams/slug/google.jpg"
				},
				"Chief Delphi" : {
					url : "https://www.chiefdelphi.com/search?q=",
					image : "https://www.chiefdelphi.com/uploads/default/original/3X/7/a/7aa55d5e380bbd7faf941d3f87157a21a438dda1.png"
				},
				"Reddit" : {
					url : "https://www.reddit.com/r/FRC/search?q=",
					image : "https://steamuserimages-a.akamaihd.net/ugc/928186106000880588/002E414E48823C388D2CCD094C9A8CB6D9F05FD1/"
				},
				"FIRSTInpsires" : {
					url : "https://www.firstinspires.org/search/site/",
					image : "https://pbs.twimg.com/profile_images/1613874763/First_Logo_400x400.jpg"
				},
				"The Blue Alliance" : {
					url : "https://www.thebluealliance.com/search?q=",
					image : "http://www.thebluealliance.com/images/logo_square_512.png"
				},
				"Bing" : {
					url : "https://www.bing.com/search?q=",
					image : "https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/Bing_favicon.svg/1024px-Bing_favicon.svg.png"
				}
			}

			for (var name in search_sites){

				var card = $("<div></div>");

				card.append($('<img />').attr("src", search_sites[name].image));

				var search_url = search_sites[name].url + encodeURIComponent(search_query);

				var internal_link = $('<a class="stretched-link internal" target="_blank"></a>');
				internal_link.text(name).attr("href", search_url);
				internal_link.appendTo(card);

				var span = $('<span class="text-muted"></span>');
				span.html("<em>" + search_url + "</em>");
				span.appendTo(card);

				$(".websearch > .content-container").append(card);

			}

			$(".websearch").show();

		} else {

			$(".websearch").hide();

		}

	}

}
$(function(){

    // Initializing the swiper plugin for the slider.
    // Read more here: http://idangero.us/swiper/api/
    
    var mySwiper = new Swiper ('.swiper-container', {
        loop: true,
        pagination: '.swiper-pagination',
        paginationClickable: true,
        nextButton: '.swiper-button-next',
        prevButton: '.swiper-button-prev'
    });
    
});
/*! Sortable 1.7.0 - MIT | git://github.com/rubaxa/Sortable.git */

!function(t){"use strict";"function"==typeof define&&define.amd?define(t):"undefined"!=typeof module&&void 0!==module.exports?module.exports=t():window.Sortable=t()}(function(){"use strict";if("undefined"==typeof window||!window.document)return function(){throw new Error("Sortable.js requires a window with a document")};var t,e,n,o,i,r,a,l,s,c,d,h,u,f,p,g,v,m,_,b,D,y={},w=/\s+/g,T=/left|right|inline/,S="Sortable"+(new Date).getTime(),C=window,E=C.document,x=C.parseInt,k=C.setTimeout,N=C.jQuery||C.Zepto,B=C.Polymer,P=!1,Y="draggable"in E.createElement("div"),X=!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\.|msie)/i)&&((D=E.createElement("x")).style.cssText="pointer-events:auto","auto"===D.style.pointerEvents),O=!1,I=Math.abs,M=Math.min,A=[],R=[],L=function(){return!1},F=ot(function(t,e,n){if(n&&e.scroll){var o,i,r,a,d,h,u=n[S],f=e.scrollSensitivity,p=e.scrollSpeed,g=t.clientX,v=t.clientY,m=window.innerWidth,b=window.innerHeight;if(s!==n&&(l=e.scroll,s=n,c=e.scrollFn,!0===l)){l=n;do{if(l.offsetWidth<l.scrollWidth||l.offsetHeight<l.scrollHeight)break}while(l=l.parentNode)}l&&(o=l,i=l.getBoundingClientRect(),r=(I(i.right-g)<=f)-(I(i.left-g)<=f),a=(I(i.bottom-v)<=f)-(I(i.top-v)<=f)),r||a||(a=(b-v<=f)-(v<=f),((r=(m-g<=f)-(g<=f))||a)&&(o=C)),y.vx===r&&y.vy===a&&y.el===o||(y.el=o,y.vx=r,y.vy=a,clearInterval(y.pid),o&&(y.pid=setInterval(function(){h=a?a*p:0,d=r?r*p:0,"function"==typeof c&&"continue"!==c.call(u,d,h,t,_,o)||(o===C?C.scrollTo(C.pageXOffset+d,C.pageYOffset+h):(o.scrollTop+=h,o.scrollLeft+=d))},24)))}},30),H=function(t){function e(t,e){return null!=t&&!0!==t||null!=(t=n.name)?"function"==typeof t?t:function(n,o){var i=o.options.group.name;return e?t:t&&(t.join?t.indexOf(i)>-1:i==t)}:L}var n={},o=t.group;o&&"object"==typeof o||(o={name:o}),n.name=o.name,n.checkPull=e(o.pull,!0),n.checkPut=e(o.put),n.revertClone=o.revertClone,t.group=n};try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:function(){P={capture:!1,passive:!1}}}))}catch(t){}function W(t,e){if(!t||!t.nodeType||1!==t.nodeType)throw"Sortable: `el` must be HTMLElement, and not "+{}.toString.call(t);this.el=t,this.options=e=it({},e),t[S]=this;var n={group:null,sort:!0,disabled:!1,store:null,handle:null,scroll:!0,scrollSensitivity:30,scrollSpeed:10,draggable:/[uo]l/i.test(t.nodeName)?"li":">*",ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",dragClass:"sortable-drag",ignore:"a, img",filter:null,preventOnFilter:!0,animation:0,setData:function(t,e){t.setData("Text",e.textContent)},dropBubble:!1,dragoverBubble:!1,dataIdAttr:"data-id",delay:0,forceFallback:!1,fallbackClass:"sortable-fallback",fallbackOnBody:!1,fallbackTolerance:0,fallbackOffset:{x:0,y:0},supportPointer:!1!==W.supportPointer};for(var o in n)!(o in e)&&(e[o]=n[o]);H(e);for(var i in this)"_"===i.charAt(0)&&"function"==typeof this[i]&&(this[i]=this[i].bind(this));this.nativeDraggable=!e.forceFallback&&Y,V(t,"mousedown",this._onTapStart),V(t,"touchstart",this._onTapStart),e.supportPointer&&V(t,"pointerdown",this._onTapStart),this.nativeDraggable&&(V(t,"dragover",this),V(t,"dragenter",this)),R.push(this._onDragOver),e.store&&this.sort(e.store.get(this))}function j(e,n){"clone"!==e.lastPullMode&&(n=!0),o&&o.state!==n&&(G(o,"display",n?"none":""),n||o.state&&(e.options.group.revertClone?(i.insertBefore(o,r),e._animate(t,o)):i.insertBefore(o,t)),o.state=n)}function U(t,e,n){if(t){n=n||E;do{if(">*"===e&&t.parentNode===n||nt(t,e))return t}while(void 0,t=(i=(o=t).host)&&i.nodeType?i:o.parentNode)}var o,i;return null}function V(t,e,n){t.addEventListener(e,n,P)}function q(t,e,n){t.removeEventListener(e,n,P)}function z(t,e,n){if(t)if(t.classList)t.classList[n?"add":"remove"](e);else{var o=(" "+t.className+" ").replace(w," ").replace(" "+e+" "," ");t.className=(o+(n?" "+e:"")).replace(w," ")}}function G(t,e,n){var o=t&&t.style;if(o){if(void 0===n)return E.defaultView&&E.defaultView.getComputedStyle?n=E.defaultView.getComputedStyle(t,""):t.currentStyle&&(n=t.currentStyle),void 0===e?n:n[e];e in o||(e="-webkit-"+e),o[e]=n+("string"==typeof n?"":"px")}}function Q(t,e,n){if(t){var o=t.getElementsByTagName(e),i=0,r=o.length;if(n)for(;i<r;i++)n(o[i],i);return o}return[]}function Z(t,e,n,i,r,a,l,s,c){t=t||e[S];var d=E.createEvent("Event"),h=t.options,u="on"+n.charAt(0).toUpperCase()+n.substr(1);d.initEvent(n,!0,!0),d.to=r||e,d.from=a||e,d.item=i||e,d.clone=o,d.oldIndex=l,d.newIndex=s,d.originalEvent=c,e.dispatchEvent(d),h[u]&&h[u].call(t,d)}function J(t,e,n,o,i,r,a,l){var s,c,d=t[S],h=d.options.onMove;return(s=E.createEvent("Event")).initEvent("move",!0,!0),s.to=e,s.from=t,s.dragged=n,s.draggedRect=o,s.related=i||e,s.relatedRect=r||e.getBoundingClientRect(),s.willInsertAfter=l,s.originalEvent=a,t.dispatchEvent(s),h&&(c=h.call(d,s,a)),c}function K(t){t.draggable=!1}function $(){O=!1}function tt(t){for(var e=t.tagName+t.className+t.src+t.href+t.textContent,n=e.length,o=0;n--;)o+=e.charCodeAt(n);return o.toString(36)}function et(t,e){var n=0;if(!t||!t.parentNode)return-1;for(;t&&(t=t.previousElementSibling);)"TEMPLATE"===t.nodeName.toUpperCase()||">*"!==e&&!nt(t,e)||n++;return n}function nt(t,e){if(t){if(t.matches)return t.matches(e);if(t.msMatchesSelector)return t.msMatchesSelector(e)}return!1}function ot(t,e){var n,o;return function(){void 0===n&&(n=arguments,o=this,k(function(){1===n.length?t.call(o,n[0]):t.apply(o,n),n=void 0},e))}}function it(t,e){if(t&&e)for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}function rt(t){return B&&B.dom?B.dom(t).cloneNode(!0):N?N(t).clone(!0)[0]:t.cloneNode(!0)}function at(t){return k(t,0)}function lt(t){return clearTimeout(t)}return W.prototype={constructor:W,_onTapStart:function(e){var n,o=this,i=this.el,r=this.options,l=r.preventOnFilter,s=e.type,c=e.touches&&e.touches[0],d=(c||e).target,h=e.target.shadowRoot&&e.path&&e.path[0]||d,u=r.filter;if(function(t){A.length=0;var e=t.getElementsByTagName("input"),n=e.length;for(;n--;){var o=e[n];o.checked&&A.push(o)}}(i),!t&&!(/mousedown|pointerdown/.test(s)&&0!==e.button||r.disabled)&&!h.isContentEditable&&(d=U(d,r.draggable,i))&&a!==d){if(n=et(d,r.draggable),"function"==typeof u){if(u.call(this,e,d,this))return Z(o,h,"filter",d,i,i,n),void(l&&e.preventDefault())}else if(u&&(u=u.split(",").some(function(t){if(t=U(h,t.trim(),i))return Z(o,t,"filter",d,i,i,n),!0})))return void(l&&e.preventDefault());r.handle&&!U(h,r.handle,i)||this._prepareDragStart(e,c,d,n)}},_prepareDragStart:function(n,o,l,s){var c,d=this,h=d.el,u=d.options,p=h.ownerDocument;l&&!t&&l.parentNode===h&&(m=n,i=h,e=(t=l).parentNode,r=t.nextSibling,a=l,g=u.group,f=s,this._lastX=(o||n).clientX,this._lastY=(o||n).clientY,t.style["will-change"]="all",c=function(){d._disableDelayedDrag(),t.draggable=d.nativeDraggable,z(t,u.chosenClass,!0),d._triggerDragStart(n,o),Z(d,i,"choose",t,i,i,f)},u.ignore.split(",").forEach(function(e){Q(t,e.trim(),K)}),V(p,"mouseup",d._onDrop),V(p,"touchend",d._onDrop),V(p,"touchcancel",d._onDrop),V(p,"selectstart",d),u.supportPointer&&V(p,"pointercancel",d._onDrop),u.delay?(V(p,"mouseup",d._disableDelayedDrag),V(p,"touchend",d._disableDelayedDrag),V(p,"touchcancel",d._disableDelayedDrag),V(p,"mousemove",d._disableDelayedDrag),V(p,"touchmove",d._disableDelayedDrag),u.supportPointer&&V(p,"pointermove",d._disableDelayedDrag),d._dragStartTimer=k(c,u.delay)):c())},_disableDelayedDrag:function(){var t=this.el.ownerDocument;clearTimeout(this._dragStartTimer),q(t,"mouseup",this._disableDelayedDrag),q(t,"touchend",this._disableDelayedDrag),q(t,"touchcancel",this._disableDelayedDrag),q(t,"mousemove",this._disableDelayedDrag),q(t,"touchmove",this._disableDelayedDrag),q(t,"pointermove",this._disableDelayedDrag)},_triggerDragStart:function(e,n){(n=n||("touch"==e.pointerType?e:null))?(m={target:t,clientX:n.clientX,clientY:n.clientY},this._onDragStart(m,"touch")):this.nativeDraggable?(V(t,"dragend",this),V(i,"dragstart",this._onDragStart)):this._onDragStart(m,!0);try{E.selection?at(function(){E.selection.empty()}):window.getSelection().removeAllRanges()}catch(t){}},_dragStarted:function(){if(i&&t){var e=this.options;z(t,e.ghostClass,!0),z(t,e.dragClass,!1),W.active=this,Z(this,i,"start",t,i,i,f)}else this._nulling()},_emulateDragOver:function(){if(_){if(this._lastX===_.clientX&&this._lastY===_.clientY)return;this._lastX=_.clientX,this._lastY=_.clientY,X||G(n,"display","none");var t=E.elementFromPoint(_.clientX,_.clientY),e=t,o=R.length;if(t&&t.shadowRoot&&(e=t=t.shadowRoot.elementFromPoint(_.clientX,_.clientY)),e)do{if(e[S]){for(;o--;)R[o]({clientX:_.clientX,clientY:_.clientY,target:t,rootEl:e});break}t=e}while(e=e.parentNode);X||G(n,"display","")}},_onTouchMove:function(t){if(m){var e=this.options,o=e.fallbackTolerance,i=e.fallbackOffset,r=t.touches?t.touches[0]:t,a=r.clientX-m.clientX+i.x,l=r.clientY-m.clientY+i.y,s=t.touches?"translate3d("+a+"px,"+l+"px,0)":"translate("+a+"px,"+l+"px)";if(!W.active){if(o&&M(I(r.clientX-this._lastX),I(r.clientY-this._lastY))<o)return;this._dragStarted()}this._appendGhost(),b=!0,_=r,G(n,"webkitTransform",s),G(n,"mozTransform",s),G(n,"msTransform",s),G(n,"transform",s),t.preventDefault()}},_appendGhost:function(){if(!n){var e,o=t.getBoundingClientRect(),r=G(t),a=this.options;z(n=t.cloneNode(!0),a.ghostClass,!1),z(n,a.fallbackClass,!0),z(n,a.dragClass,!0),G(n,"top",o.top-x(r.marginTop,10)),G(n,"left",o.left-x(r.marginLeft,10)),G(n,"width",o.width),G(n,"height",o.height),G(n,"opacity","0.8"),G(n,"position","fixed"),G(n,"zIndex","100000"),G(n,"pointerEvents","none"),a.fallbackOnBody&&E.body.appendChild(n)||i.appendChild(n),e=n.getBoundingClientRect(),G(n,"width",2*o.width-e.width),G(n,"height",2*o.height-e.height)}},_onDragStart:function(e,n){var r=this,a=e.dataTransfer,l=r.options;r._offUpEvents(),g.checkPull(r,r,t,e)&&((o=rt(t)).draggable=!1,o.style["will-change"]="",G(o,"display","none"),z(o,r.options.chosenClass,!1),r._cloneId=at(function(){i.insertBefore(o,t),Z(r,i,"clone",t)})),z(t,l.dragClass,!0),n?("touch"===n?(V(E,"touchmove",r._onTouchMove),V(E,"touchend",r._onDrop),V(E,"touchcancel",r._onDrop),l.supportPointer&&(V(E,"pointermove",r._onTouchMove),V(E,"pointerup",r._onDrop))):(V(E,"mousemove",r._onTouchMove),V(E,"mouseup",r._onDrop)),r._loopId=setInterval(r._emulateDragOver,50)):(a&&(a.effectAllowed="move",l.setData&&l.setData.call(r,a,t)),V(E,"drop",r),r._dragStartId=at(r._dragStarted))},_onDragOver:function(a){var l,s,c,f,p,m,_=this.el,D=this.options,y=D.group,w=W.active,C=g===y,E=!1,x=D.sort;if((void 0!==a.preventDefault&&(a.preventDefault(),!D.dragoverBubble&&a.stopPropagation()),!t.animated)&&(b=!0,w&&!D.disabled&&(C?x||(f=!i.contains(t)):v===this||(w.lastPullMode=g.checkPull(this,w,t,a))&&y.checkPut(this,w,t,a))&&(void 0===a.rootEl||a.rootEl===this.el))){if(F(a,D,this.el),O)return;if(l=U(a.target,D.draggable,_),s=t.getBoundingClientRect(),v!==this&&(v=this,E=!0),f)return j(w,!0),e=i,void(o||r?i.insertBefore(t,o||r):x||i.appendChild(t));if(0===_.children.length||_.children[0]===n||_===a.target&&(p=a,m=_.lastElementChild.getBoundingClientRect(),p.clientY-(m.top+m.height)>5||p.clientX-(m.left+m.width)>5)){if(0!==_.children.length&&_.children[0]!==n&&_===a.target&&(l=_.lastElementChild),l){if(l.animated)return;c=l.getBoundingClientRect()}j(w,C),!1!==J(i,_,t,s,l,c,a)&&(t.contains(_)||(_.appendChild(t),e=_),this._animate(s,t),l&&this._animate(c,l))}else if(l&&!l.animated&&l!==t&&void 0!==l.parentNode[S]){d!==l&&(d=l,h=G(l),u=G(l.parentNode));var N=(c=l.getBoundingClientRect()).right-c.left,B=c.bottom-c.top,P=T.test(h.cssFloat+h.display)||"flex"==u.display&&0===u["flex-direction"].indexOf("row"),Y=l.offsetWidth>t.offsetWidth,X=l.offsetHeight>t.offsetHeight,I=(P?(a.clientX-c.left)/N:(a.clientY-c.top)/B)>.5,M=l.nextElementSibling,A=!1;if(P){var R=t.offsetTop,L=l.offsetTop;A=R===L?l.previousElementSibling===t&&!Y||I&&Y:l.previousElementSibling===t||t.previousElementSibling===l?(a.clientY-c.top)/B>.5:L>R}else E||(A=M!==t&&!X||I&&X);var H=J(i,_,t,s,l,c,a,A);!1!==H&&(1!==H&&-1!==H||(A=1===H),O=!0,k($,30),j(w,C),t.contains(_)||(A&&!M?_.appendChild(t):l.parentNode.insertBefore(t,A?M:l)),e=t.parentNode,this._animate(s,t),this._animate(c,l))}}},_animate:function(t,e){var n=this.options.animation;if(n){var o=e.getBoundingClientRect();1===t.nodeType&&(t=t.getBoundingClientRect()),G(e,"transition","none"),G(e,"transform","translate3d("+(t.left-o.left)+"px,"+(t.top-o.top)+"px,0)"),e.offsetWidth,G(e,"transition","all "+n+"ms"),G(e,"transform","translate3d(0,0,0)"),clearTimeout(e.animated),e.animated=k(function(){G(e,"transition",""),G(e,"transform",""),e.animated=!1},n)}},_offUpEvents:function(){var t=this.el.ownerDocument;q(E,"touchmove",this._onTouchMove),q(E,"pointermove",this._onTouchMove),q(t,"mouseup",this._onDrop),q(t,"touchend",this._onDrop),q(t,"pointerup",this._onDrop),q(t,"touchcancel",this._onDrop),q(t,"pointercancel",this._onDrop),q(t,"selectstart",this)},_onDrop:function(a){var l=this.el,s=this.options;clearInterval(this._loopId),clearInterval(y.pid),clearTimeout(this._dragStartTimer),lt(this._cloneId),lt(this._dragStartId),q(E,"mouseover",this),q(E,"mousemove",this._onTouchMove),this.nativeDraggable&&(q(E,"drop",this),q(l,"dragstart",this._onDragStart)),this._offUpEvents(),a&&(b&&(a.preventDefault(),!s.dropBubble&&a.stopPropagation()),n&&n.parentNode&&n.parentNode.removeChild(n),i!==e&&"clone"===W.active.lastPullMode||o&&o.parentNode&&o.parentNode.removeChild(o),t&&(this.nativeDraggable&&q(t,"dragend",this),K(t),t.style["will-change"]="",z(t,this.options.ghostClass,!1),z(t,this.options.chosenClass,!1),Z(this,i,"unchoose",t,e,i,f,null,a),i!==e?(p=et(t,s.draggable))>=0&&(Z(null,e,"add",t,e,i,f,p,a),Z(this,i,"remove",t,e,i,f,p,a),Z(null,e,"sort",t,e,i,f,p,a),Z(this,i,"sort",t,e,i,f,p,a)):t.nextSibling!==r&&(p=et(t,s.draggable))>=0&&(Z(this,i,"update",t,e,i,f,p,a),Z(this,i,"sort",t,e,i,f,p,a)),W.active&&(null!=p&&-1!==p||(p=f),Z(this,i,"end",t,e,i,f,p,a),this.save()))),this._nulling()},_nulling:function(){i=t=e=n=r=o=a=l=s=m=_=b=p=d=h=v=g=W.active=null,A.forEach(function(t){t.checked=!0}),A.length=0},handleEvent:function(e){switch(e.type){case"drop":case"dragend":this._onDrop(e);break;case"dragover":case"dragenter":t&&(this._onDragOver(e),function(t){t.dataTransfer&&(t.dataTransfer.dropEffect="move");t.preventDefault()}(e));break;case"mouseover":this._onDrop(e);break;case"selectstart":e.preventDefault()}},toArray:function(){for(var t,e=[],n=this.el.children,o=0,i=n.length,r=this.options;o<i;o++)U(t=n[o],r.draggable,this.el)&&e.push(t.getAttribute(r.dataIdAttr)||tt(t));return e},sort:function(t){var e={},n=this.el;this.toArray().forEach(function(t,o){var i=n.children[o];U(i,this.options.draggable,n)&&(e[t]=i)},this),t.forEach(function(t){e[t]&&(n.removeChild(e[t]),n.appendChild(e[t]))})},save:function(){var t=this.options.store;t&&t.set(this)},closest:function(t,e){return U(t,e||this.options.draggable,this.el)},option:function(t,e){var n=this.options;if(void 0===e)return n[t];n[t]=e,"group"===t&&H(n)},destroy:function(){var t=this.el;t[S]=null,q(t,"mousedown",this._onTapStart),q(t,"touchstart",this._onTapStart),q(t,"pointerdown",this._onTapStart),this.nativeDraggable&&(q(t,"dragover",this),q(t,"dragenter",this)),Array.prototype.forEach.call(t.querySelectorAll("[draggable]"),function(t){t.removeAttribute("draggable")}),R.splice(R.indexOf(this._onDragOver),1),this._onDrop(),this.el=t=null}},V(E,"touchmove",function(t){W.active&&t.preventDefault()}),W.utils={on:V,off:q,css:G,find:Q,is:function(t,e){return!!U(t,e,t)},extend:it,throttle:ot,closest:U,toggleClass:z,clone:rt,index:et,nextTick:at,cancelNextTick:lt},W.create=function(t,e){return new W(t,e)},W.version="1.7.0",W});

$(document).ready(function(){
	
	var sidebar = $(".newsletter-create-sidebar")[0];
	var mail_container = $(".newsletter-create-page")[0];

	Sortable.create(sidebar, {
		group: {
			name : "webmail",
			pull : "clone",
			put : false
		},
		draggable : ".webmail-sidebar-element",
		sort: false
	});

	var webmail_element_container = $('<div class="webmail-row-element"><div class="webmail-row-panel clearfix"><button class="btn btn-primary webmail-row-panel-btn draggable grabbable" type="button"><i class="typcn typcn-arrow-unsorted"></i></button><button class="btn btn-info webmail-row-panel-btn copy" type="button"><i class="fa fa-copy"></i></button><button class="btn btn-warning webmail-row-panel-btn edit" type="button"><i class="fa fa-pencil"></i></button><button class="btn btn-danger webmail-row-panel-btn destroy float-right" type="button"><i class="fa fa-trash-o"></i></button></div><p class="text-center">One</p></div>');
	
	var webmail_element_map = {

		"wm_splash_img" : '<tr>\
					<td style="background-color: #ffffff;">\
						<img src="https://www.team5599.com/assets/img/SplashHeaders/Default.png" width="680" height="" alt="alt_text" border="0" style="width: 100%; max-width: 680px; height: auto; background: #dddddd; font-family: sans-serif; font-size: 15px; line-height: 15px; color: #555555; margin: auto;" class="fluid g-img">\
					</td>\
				</tr>',

		"wm_main_text" : ' <tr>\
					<td style="background-color: #ffffff;">\
						<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
							<tr>\
								<td style="padding: 20px; font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555;">\
									<div class="editable">\
									<h1 style="margin: 0 0 10px; font-size: 25px; line-height: 30px; color: #333333; font-weight: normal;">Praesent laoreet malesuada&nbsp;cursus.</h1>\
									<p style="margin: 0 0 10px;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Praesent laoreet malesuada cursus. Maecenas scelerisque congue eros eu posuere. Praesent in felis ut velit pretium lobortis rhoncus ut&nbsp;erat.</p>\
									<ul style="padding: 0; margin: 0; list-style-type: disc;">\
										<li style="margin:0 0 10px 30px;" class="list-item-first">A list item.</li>\
										<li style="margin:0 0 10px 30px;">Another list item here.</li>\
										<li style="margin: 0 0 0 30px;" class="list-item-last">Everyone gets a list item, list items for everyone!</li>\
									</ul>\
									</div>\
								</td>\
							</tr>\
							<tr>\
								<td style="padding: 0 20px 20px;">\
									<table align="center" role="presentation" cellspacing="0" cellpadding="0" border="0" style="margin: auto;">\
										<tr>\
											<td class="button-td button-td-primary" style="border-radius: 4px; background: #222222;">\
												 <a class="button-a button-a-primary" href="https://google.com/" style="background: #222222; border: 1px solid #000000; font-family: sans-serif; font-size: 15px; line-height: 15px; text-decoration: none; padding: 13px 17px; color: #ffffff; display: block; border-radius: 4px;">Centered Primary Button</a>\
											</td>\
										</tr>\
									</table>\
								</td>\
							</tr>\
						</table>\
					</td>\
				</tr>',

		"wm_one_col" : '<tr>\
					<td style="background-color: #ffffff;">\
						<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
							<tr> \
								<td style="padding: 20px; font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555;">\
									<div class="editable">\
									<p style="margin: 0 0 10px 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Praesent laoreet malesuada cursus. Maecenas scelerisque congue eros eu posuere. Praesent in felis ut velit pretium lobortis rhoncus ut&nbsp;erat.</p>\
									</div>\
								</td>\
							</tr>\
						</table>\
					</td>\
				</tr>',

		"wm_two_col" : '<tr>\
					<td height="100%" valign="top" width="680px" style="background-color: #ffffff;">\
						<!--[if mso]>\
						<table align="center" role="presentation" border="0" cellspacing="0" cellpadding="0" width="680">\
						<tr>\
						<td valign="top" width="680">\
						<![endif]-->\
						<table align="center" role="presentation" border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width:680px;">\
							<tr>\
								<td align="center" valign="top" style="font-size:0; padding: 10px 0;">\
									<!--[if mso]>\
									<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="680">\
									<tr>\
									<td valign="top" width="340">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; width:100%; min-width:200px; max-width:340px; vertical-align:top;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td style="padding: 10px 10px;">\
													<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align: left;">\
														<tr>\
															<td>\
																<img src="https://via.placeholder.com/310" width="310" height="" border="0" alt="alt_text" class="center-on-narrow" style="width: 100%; max-width: 310px; height: auto; background: #dddddd; font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555;">\
															</td>\
														</tr>\
														<tr>\
															<td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; padding-top: 10px;" class="stack-column-center">\
																<div class="editable">\
																<p style="margin: 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\
																</div>\
															</td>\
														</tr>\
													</table>\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									<td valign="top" width="340">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; width:100%; min-width:200px; max-width:340px; vertical-align:top;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td style="padding: 10px 10px;">\
													<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align: left;">\
														<tr>\
															<td>\
																<img src="https://via.placeholder.com/310" width="310" height="" border="0" alt="alt_text" class="center-on-narrow" style="width: 100%; max-width: 310px; height: auto; background: #dddddd; font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555;">\
															</td>\
														</tr>\
														<tr>\
															<td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; padding-top: 10px;" class="stack-column-center">\
																<div class="editable">\
																<p style="margin: 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\
																</div>\
															</td>\
														</tr>\
													</table>\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									</tr>\
									</table>\
									<![endif]-->\
								</td>\
							</tr>\
						</table>\
						<!--[if mso]>\
						</td>\
						</tr>\
						</table>\
						<![endif]-->\
					</td>\
				</tr>',

		"wm_three_col" : '<tr>\
					<td height="100%" valign="top" width="680px" style="padding: 10px 0; background-color: #ffffff;">\
						<!--[if mso]>\
						<table align="center" role="presentation" border="0" cellspacing="0" cellpadding="0" width="680">\
						<tr>\
						<td valign="top" width="680">\
						<![endif]-->\
						<table align="center" role="presentation" border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width:680px;">\
							<tr>\
								<td align="center" valign="top" style="font-size:0;">\
									<!--[if mso]>\
									<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="680">\
									<tr>\
									<td valign="top" width="220">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; max-width:33.33%; min-width:220px; vertical-align:top; width:100%;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td style="padding: 10px 10px;">\
													<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align: left;">\
														<tr>\
															<td>\
																<img src="https://via.placeholder.com/200" width="200" height="" border="0" alt="alt_text" class="center-on-narrow" style="width: 100%; max-width: 200px; height: auto; background: #dddddd; font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555;">\
															</td>\
														</tr>\
														<tr>\
															<td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; padding-top: 10px;" class="stack-column-center">\
																<div class="editable">\
																<p style="margin: 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\
																</div>\
															</td>\
														</tr>\
													</table>\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									<td valign="top" width="220">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; max-width:33.33%; min-width:220px; vertical-align:top; width:100%;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td style="padding: 10px 10px;">\
													<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align: left;">\
														<tr>\
															<td>\
																<img src="https://via.placeholder.com/200" width="200" height="" border="0" alt="alt_text" class="center-on-narrow" style="width: 100%; max-width: 200px; height: auto; background: #dddddd; font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555;">\
															</td>\
														</tr>\
														<tr>\
															<td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; padding-top: 10px;" class="stack-column-center">\
																<div class="editable">\
																<p style="margin: 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\
																</div>\
															</td>\
														</tr>\
													</table>\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									<td valign="top" width="220">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; max-width:33.33%; min-width:220px; vertical-align:top; width:100%;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td style="padding: 10px 10px;">\
													<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%" style="font-size: 14px;text-align: left;">\
														<tr>\
															<td>\
																<img src="https://via.placeholder.com/200" width="200" height="" border="0" alt="alt_text" class="center-on-narrow" style="width: 100%; max-width: 200px; height: auto; background: #dddddd; font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555;">\
															</td>\
														</tr>\
														<tr>\
															<td style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; padding-top: 10px;" class="stack-column-center">\
																<div class="editable">\
																<p style="margin: 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\
																</div>\
															</td>\
														</tr>\
													</table>\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									</tr>\
									</table>\
									<![endif]-->\
								</td>\
							</tr>\
						</table>\
						<!--[if mso]>\
						</td>\
						</tr>\
						</table>\
						<![endif]-->\
					</td>\
				</tr>',

		"wm_left_text_card" : '<tr>\
					<!-- dir=ltr is where the magic happens. This can be changed to dir=rtl to swap the alignment on wide while maintaining stack order on narrow. -->\
					<td dir="ltr" height="100%" valign="top" width="680px" style="padding: 10px 0; background-color: #ffffff;">\
						<!--[if mso]>\
						<table align="center" role="presentation" border="0" cellspacing="0" cellpadding="0" width="680" style="width: 680px;">\
						<tr>\
						<td valign="top" width="680" style="width: 680px;">\
						<![endif]-->\
						<table align="center" role="presentation" border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width:680px;">\
							<tr>\
								<td align="center" valign="top" style="font-size:0; padding: 10px 0;">\
									<!--[if mso]>\
									<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="680" style="width: 680px;">\
									<tr>\
									<td valign="top" width="220" style="width: 220px;">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; max-width: 200px; min-width:160px; vertical-align:top; width:100%;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td dir="ltr" style="padding: 0 10px 10px 10px;">\
													<img src="https://via.placeholder.com/200" width="200" height="" border="0" alt="alt_text" class="center-on-narrow" style="width: 100%; max-width: 200px; height: auto; background: #dddddd; font-family: sans-serif; font-size: 15px; line-height: 15px; color: #555555;">\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									<td valign="top" width="440" style="width: 440px;">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; max-width:66.66%; min-width:320px; vertical-align:top;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td dir="ltr" style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; padding: 10px 10px 0; text-align: left;" class="center-on-narrow">\
													<div class="editable">\
													<h2 style="margin: 0 0 10px 0; font-family: sans-serif; font-size: 18px; line-height: 22px; color: #333333; font-weight: bold;">Class aptent taciti sociosqu</h2>\
													<p style="margin: 0 0 10px 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\
													</div>\
													<!-- Button : BEGIN -->\
													<table role="presentation" cellspacing="0" cellpadding="0" border="0" class="center-on-narrow" style="float:left;">\
														<tr>\
															<td class="button-td button-td-primary" style="border-radius: 4px; background: #222222;">\
																<a class="button-a button-a-primary" href="https://google.com/" style="background: #222222; border: 1px solid #000000; font-family: sans-serif; font-size: 15px; line-height: 15px; text-decoration: none; padding: 13px 17px; color: #ffffff; display: block; border-radius: 4px;">Primary Button</a>\
															</td>\
														</tr>\
													</table>\
													<!-- Button : END -->\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									</tr>\
									</table>\
									<![endif]-->\
								</td>\
							</tr>\
						</table>\
						<!--[if mso]>\
						</td>\
						</tr>\
						</table>\
						<![endif]-->\
					</td>\
				</tr>',

		"wm_right_text_card" : '<tr>\
					<!-- dir=rtl is where the magic happens. This can be changed to dir=ltr to swap the alignment on wide while maintaining stack order on narrow. -->\
					<td dir="rtl" height="100%" valign="top" width="680px" style="padding: 10px 0; background-color: #ffffff;">\
						<!--[if mso]>\
						<table align="center" role="presentation" border="0" cellspacing="0" cellpadding="0" width="680" style="width: 680px;">\
						<tr>\
						<td valign="top" width="680">\
						<![endif]-->\
						<table align="center" role="presentation" border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width:680px;">\
							<tr>\
								<td align="center" valign="top" style="font-size:0; padding: 10px 0;">\
									<!--[if mso]>\
									<table role="presentation" border="0" cellspacing="0" cellpadding="0" width="680" style="width: 680px;">\
									<tr>\
									<td valign="top" width="220" style="width: 220px;">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; max-width: 200px; min-width:160px; vertical-align:top; width:100%;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td dir="ltr" style="padding: 0 10px 10px 10px;">\
													<img src="https://via.placeholder.com/200" width="200" height="" border="0" alt="alt_text" class="center-on-narrow" style="width: 100%; max-width: 200px; height: auto; background: #dddddd; font-family: sans-serif; font-size: 15px; line-height: 15px; color: #555555;">\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									<td valign="top" width="440" style="width: 440px;">\
									<![endif]-->\
									<div style="display:inline-block; margin: 0 -2px; max-width:66.66%; min-width:320px; vertical-align:top;" class="stack-column">\
										<table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">\
											<tr>\
												<td dir="ltr" style="font-family: sans-serif; font-size: 15px; line-height: 20px; color: #555555; padding: 10px 10px 0; text-align: left;" class="center-on-narrow">\
													<div class="editable">\
													<h2 style="margin: 0 0 10px 0; font-family: sans-serif; font-size: 18px; line-height: 22px; color: #333333; font-weight: bold;">Class aptent taciti sociosqu</h2>\
													<p style="margin: 0 0 10px 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\
													</div>\
													<!-- Button : BEGIN -->\
													<table role="presentation" cellspacing="0" cellpadding="0" border="0" class="center-on-narrow" style="float:left;">\
														<tr>\
															<td class="button-td button-td-primary" style="border-radius: 4px; background: #222222;">\
																<a class="button-a button-a-primary" href="https://google.com/" style="background: #222222; border: 1px solid #000000; font-family: sans-serif; font-size: 15px; line-height: 15px; text-decoration: none; padding: 13px 17px; color: #ffffff; display: block; border-radius: 4px;">Primary Button</a>\
															</td>\
														</tr>\
													</table>\
													<!-- Button : END -->\
												</td>\
											</tr>\
										</table>\
									</div>\
									<!--[if mso]>\
									</td>\
									</tr>\
									</table>\
									<![endif]-->\
								</td>\
							</tr>\
						</table>\
						<!--[if mso]>\
						</td>\
						</tr>\
						</table>\
						<![endif]-->\
					</td>\
				</tr>',

		"wm_bg_with_text" : '<tr>\
					<!-- Bulletproof Background Images c/o https://backgrounds.cm -->\
					<td valign="middle" style="text-align: center; background-image: url(\'https://via.placeholder.com/680x180/222222/666666\'); background-color: #222222; background-position: center center !important; background-size: cover !important;">\
						<!--[if gte mso 9]>\
						<v:image xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" style="border: 0; display: inline-block; width: 680px; height: 180px;" src="https://via.placeholder.com/680x180/222222/666666" />\
						<v:rect xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" style="border: 0; display: inline-block; position: absolute; width: 680px; height: 180px;">\
						<v:fill opacity="0%" color="#222222" />\
						<![endif]-->\
						<div>\
							<!--[if mso]>\
							<table align="center" role="presentation" border="0" cellspacing="0" cellpadding="0" width="500">\
							<tr>\
							<td valign="top" width="500">\
							<![endif]-->\
							<table role="presentation" border="0" cellpadding="0" cellspacing="0" width="100%" style="max-width:680px; margin: auto;">\
								<tr>\
									<td valign="middle" style="text-align: center; padding: 40px 20px; font-family: sans-serif; font-size: 15px; line-height: 20px; color: #ffffff;">\
										<div class="editable">\
										<p style="margin: 0;">Maecenas sed ante pellentesque, posuere leo id, eleifend dolor. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Praesent laoreet malesuada cursus. Maecenas scelerisque congue eros eu posuere. Praesent in felis ut velit pretium lobortis rhoncus ut&nbsp;erat.</p>\
										</div>\
									</td>\
								</tr>\
							</table>\
							<!--[if mso]>\
							</td>\
							</tr>\
							</table>\
							<![endif]-->\
						</div>\
						<!--[if gte mso 9]>\
						</v:fill>\
						</v:rect>\
						</v:image>\
						<![endif]-->\
					</td>\
				</tr>',

		"wm_spacer" : '<tr>\
					<td aria-hidden="true" height="40" style="font-size: 0px; line-height: 0px;">\
						&nbsp;\
					</td>\
				</tr>'
	}

	Sortable.create(mail_container, {
		group : {
			name : "webmail",
			pull : false,
			put : true
		},
		handle : ".webmail-row-panel-btn.draggable",
		draggable : ".webmail-row-element",
		animation: 300,

		onAdd : function(event){
			setupWebmailElement(event.item);
		}

	})

	function setupWebmailElement(item){

		// var item = event.item;
		var item_id = item.id;

		var new_element = $(webmail_element_container).clone().attr("id", item_id);

		new_element.prepend($('<div class="webmail-section-divider"></div>'));

		new_element.find("p").replaceWith(webmail_element_map[item_id]);

		new_element.find(".webmail-row-panel-btn.destroy").click(function(){
			new_element.remove();
		})

		new_element.find(".webmail-row-panel-btn.edit").click(function(){
			console.log("Editting " + item_id);
		})

		new_element.find(".webmail-row-panel-btn.copy").click(function(){
			var cloned_element = new_element.clone();
			cloned_element.insertAfter(new_element);
			setupWebmailElement(cloned_element[0]);
		})

		$(item).replaceWith(new_element);

		tinymce.init({
			selector: '.editable',
			inline: true,
			resize: false,
			plugins: "autoresize lists preview spellchecker searchreplace code help fullscreen insertdatetime link visualblocks",
			toolbar : [
						"formatselect fontselect fontsizeselect | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | bullist numlist", "undo redo | spellchecker visualblocks searchreplace | link unlink insertdatetime | preview fullcreen help"
					],
			theme: "modern",
			menubar: false,
			branding: false,
			// fixed_toolbar_container: ".webmail-toolbar-container"
		});

		console.log("Found Editable:", new_element.find(".editable").length);

		new_element.find(".editable").each(function(index, editable){
			console.log("editable", editable);
			$(editable).css("width", function(){
				return $(editable).css("width");
			})
		})

	}

})
// websiteManager.js

// Configuration
// ========================================================================================================= //

var osis;
var token;

$(document).ready(function(){

	var currentPage = getPage();

	osis = getCookie("osis");
	token = getCookie("token");	

	switch(currentPage){

		case "websitemanager":

			console.log("Loading Website Manager");

			// <TODO>
			// Don't allow editting until all data has been pulled from the databse

			// <TODO>
			// Verify permissions before unlocking

			handleWebsiteManager_Team();
			handleWebsiteManager_Robots();
			handleWebsiteManager_Sponsors();
			handleWebsiteManager_Contacts();
			handleWebsiteManager_ScrollbarHotfix();

			$("#account-loading").hide();
			$("#account-main-container").show();

			break;
		case "database":

			console.log("Loading Database Manager");

			handleDatabaseManager();
			break;

		default:
			return;
	}

})

function handleWebsiteManager_ScrollbarHotfix(){
	$(".manager-list").scroll(function(){

		let btn_scroll_pos = $(this).scrollTop();

		$(this).children(".manager-list-add").css({
			right : "5px",
			bottom : `${-btn_scroll_pos + 5}px`
		});
	})

}

// ------// Database Manager
// ------//------------------------------------------------------------- //


function handleDatabaseManager(){

	var selected_view_fn = displayBasicView;

	$("#database-view-group > .btn").click(function(){

		var selected_btn = $(this)[0];

		$("#database-view-group > .btn").each(function(index, item){
			if (selected_btn == $(item)[0]){
				$(item).addClass("active");
			} else {
				$(item).removeClass("active");
			}
		})

		switch(selected_btn){
			case $("#database-view-group-basic-btn")[0]:
				selected_view_fn = displayBasicView;
				break;
			case $("#database-view-group-permissions-btn")[0]:
				selected_view_fn = displayPermissionsView;
				break;
			case $("#database-view-group-holds-btn")[0]:
				selected_view_fn = displayHoldsView;
				break;
		}

		selected_view_fn();

	})

	$("#database-reload-btn").click(function(){

		// <TODO>
		// Clear Searchbar
		// Select Basic View

	})

	var total_columns = $("#database-table-header-row th").length;
	console.log("Total Columns: ", total_columns);

	function displayBasicView(){

		console.log("Basic View");

		displayColumns([1, 2, 3, 4, 5, 6]);

		$("#master-holds-give").attr("disabled", false);
		$("#master-holds-remove").attr("disabled", false);

	}

	function displayPermissionsView(){

		console.log("Permissions View");

		displayColumns([2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]);

		$("#master-holds-give").attr("disabled", true);
		$("#master-holds-remove").attr("disabled", true);

	}

	function displayHoldsView(){

		console.log("Holds View");

		displayColumns([1, 2, 3, 7]);

		$("#master-holds-give").attr("disabled", false);
		$("#master-holds-remove").attr("disabled", false);

	}

	// ------------------------

	function displayColumns(allowed_columns){

		for (let col_index = 1; col_index <= total_columns; col_index++){
			if (allowed_columns.indexOf(col_index) !== -1){
				$("#database-table-header-row th:nth-child(" + col_index + "), #database-table-body tr td:nth-child(" + col_index + ")").show();
			} else {
				$("#database-table-header-row th:nth-child(" + col_index + "), #database-table-body tr td:nth-child(" + col_index + ")").hide();
			}
		}

	}

	$("#checkbox-select-all").change(function(){
		$("#database-table-body tr td:nth-child(1) :checkbox").off("change");
		$("#database-table-body tr td:nth-child(1) :checkbox").prop("checked", this.checked);
		bindChangeListener();

		setSelectedUsers();

	})

	function bindChangeListener(){

		$("#database-table-body tr td:nth-child(1) :checkbox").on("change", function(){

			setSelectedUsers();

			if ($(this).prop("checked") == false){
				$("#checkbox-select-all").prop("checked", false);
			}

			setSelectedUsers();
		});
	}

	function setSelectedUsers(){

		var num_selected_users = $("#database-table-body tr td:nth-child(1) input:checked").length;

		var selected_users_table = [];

		num_selected_users

		$("#table-selected-display").html("<em>" + num_selected_users + " User(s) Selected</em>");

		if (num_selected_users == 0){
			$("#master-holds-give").attr("disabled", true);
			$("#master-holds-remove").attr("disabled", true);
		} else {
			$("#master-holds-give").attr("disabled", false);
			$("#master-holds-remove").attr("disabled", false);
		}

		return num_selected_users;
	}


	bindChangeListener();

	// HOLDS MODAL

	$(".modal-holds-dropdown").change(function(){
		if ($(".modal-holds-dropdown").val() == "Custom"){
			$("#modal-holds-custom-div > .modal-input-bar").val("");
			$("#modal-holds-custom-div").show();
		} else {
			$("#modal-holds-custom-div").hide();
		}
	})

	var global_holds_list = ["Goggles and Gloves", "Academic Probation", ];
	for (let index = 0; index < global_holds_list.length; index++){
		$(".modal-holds-dropdown").append($('<option value="' + index + '">' + global_holds_list[index] + '</option>'));
	}
	$(".modal-holds-dropdown").append($('<option value="Custom">Custom Hold</option>'));


	$("#modal-holds-list-add-btn").click(function(){

		var hold_name = ($(".modal-holds-dropdown").val() == "Custom") ? $("#modal-holds-custom-div > .modal-input-bar").val() : $(".modal-holds-dropdown option:selected").text();

		console.log("Ading hold ", hold_name);

		if (hold_name.replace(/ /g, "") == ""){
			alert("Cannot add a blank hold.");
			return;
		}

		var already_has_hold;
		$("#modal-holds-div > .database-hold-span").each(function(index, item){
			if ($(item).text() == hold_name){
				alert("Hold already added to list.");
				already_has_hold = true;
				return;
			}
		})

		if (already_has_hold){
			return;
		}

		var hold_item = $('<span class="database-hold-span">' + hold_name + '<button class="btn btn-danger database-hold-span-remove-button" type="button"><i class="fa fa-close"></i></button></span>');

		hold_item.find("button").click(function(){
			hold_item.remove();
		})

		$("#modal-holds-div").append(hold_item);
	})

	// HOLDS MODAL TRIGGERS

	$("#master-holds-give, #master-holds-remove").click(function(){

		var isAdding = this == $("#master-holds-give")[0];

		var selected_users_num = $("#database-table-body tr td:nth-child(1) input:checked").length;

		$("#modal-holds-title").text(isAdding ? "Add Hold(s)" : "Remove Hold(s)");
		$("#modal-holds-info").html("You have selected <strong>" + selected_users_num + "</strong> User(s).");

		$("#modal-holds-div").empty();

		$("#modal-holds-proceed").html((isAdding ? 'Add' : 'Remove') + ' Selected Hold(s) ' + (isAdding ? 'to' : 'from') +' User(s)');

		$("#Holds-Modal").modal();

	})

	// DATABASE MAIN

	$("#table-sort-swap-names").click(function(){

		$("#table-sort-swap-names").toggleClass("active");

		$("#database-table-body tr td:nth-child(3)").each(function(index, item){
			if ($("#table-sort-swap-names").hasClass("active")){
				$(item).find("#namedivider").text(", ").remove().appendTo($(item));
				$(item).find("#firstname").remove().appendTo($(item));
			} else {
				$(item).find("#namedivider").text(" ").remove().appendTo($(item));
				$(item).find("#lastname").remove().appendTo($(item));
			}
		})
		
	})

	function sortTable(table, order, nth_child) {
		var asc   = order === 'asc',
			tbody = table.find('tbody');

		tbody.find('tr').sort(function(a, b) {
			if (asc) {
				return $('td:nth-child(' + nth_child + ')', a).text().localeCompare($('td:nth-child(' + nth_child + ')', b).text());
			} else {
				return $('td:nth-child(' + nth_child + ')', b).text().localeCompare($('td:nth-child(' + nth_child + ')', a).text());
			}
		}).appendTo(tbody);
	}

	var last_sort;
	$("#table-sort-names").click(function(){
		last_sort = (last_sort == "asc") ? "desc" : "asc";
		sortTable($(".permissions-table"), last_sort, 3);
	})

	$("#database-search-btn").click(function(){

		$("#database-search-btn").prop("disabled", true);

		$("#database-table-body").empty();

		function addDatabaseItem(information){
			var database_row = $(

			'<tr>\
			    <td class="text-center"><input type="checkbox" /></td>\
			    <td id="cell-osis">Cell 1</td>\
			    <td id="cell-name">Cell 2</td>\
			    <td id="cell-email">Cell 4</td>\
			    <td id="cell-holds-count">0</td>\
			    <td id="cell-permissions-blocks">\
			        <div class="permissions-color-block brown"><span class="permissions-color-block-span">NULL</span></div>\
			        <div class="permissions-color-block brown"><span class="permissions-color-block-span">NULL</span></div>\
			        <div class="permissions-color-block brown"><span class="permissions-color-block-span">NULL</span></div>\
			    </td>\
			    <td id="cell-holds-blocks" class="text-center">\
			    	<span class="database-hold-span">Goggle and Gloves<button class="btn btn-danger database-hold-span-remove-button" type="button"><i class="fa fa-close"></i></button></span><span class="database-hold-span">Text<button class="btn btn-danger database-hold-span-remove-button" type="button"><i class="fa fa-close"></i></button></span>\
			    </td>\
			    <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
		        <td class="text-center"><input type="checkbox" /></td>\
			</tr>');

			database_row.find("#cell-osis").text(information._id);

			if ($("#table-sort-swap-names").hasClass("active")){
				database_row.find("#cell-name").html('<span id="lastname">' + information.last_name + '</span><span id="namedivider">, </span><span id="firstname">' + information.first_name +'</span>');
			} else {
				database_row.find("#cell-name").html('<span id="firstname">' + information.first_name + '</span><span id="namedivider"> </span><span id="lastname">' + information.last_name +'</span>');
			}
			
			database_row.find("#cell-email").text(information.email);
			database_row.find("#cell-holds").text(information.holds.length);

			// <TODO>
			// Map permissions IDs to color & name
			database_row.find("#cell-permissions-blocks").empty();

			database_row.find("#cell-holds-blocks").empty();
			for (let i = 0; i < information.holds.length; i++){
				database_row.find("#cell-holds-blocks").append($('<span class="database-hold-span">' + information.holds[i] + '<button class="btn btn-danger database-hold-span-remove-button" type="button"><i class="fa fa-close"></i></button></span>'))
			}

			// <TODO>
			// Attach handlers for holds blocks after all items are loaded
			
			// <TODO>
			// Add a defined order for populating the PERMISSIONS columns that works in conjunction with the Permission ID ==> color & name Map

			$("#database-table-body").append(database_row);

		}

		var database_list = [
			{
				_id : "123456789",
				first_name : "Kelin",
				last_name : "Qu",
				email : "KQu@gmail.com",
				holds : [
					"Goggles and Gloves",
					"Awesome"
				],
				permissions : ["a", "z"]
			},
			{
				_id : "987654321",
				first_name : "Michael",
				last_name : "Rooplall",
				email : "MichaelRooplall@gmail.com",
				holds : [],
				permissions : ["z"]
			},
			{
				_id : "202020202",
				first_name : "Sofia",
				last_name : "Jun",
				email : "SeyoWasTaken@gmail.com",
				holds : [],
				permissions : []
			},
		]

		for (let i = 0; i < database_list.length; i++){
			addDatabaseItem(database_list[i]);
		}

		selected_view_fn();

		$("#database-search-btn").prop("disabled", false);
	
	})



}



// ------// Website Manager Initials
// ------//------------------------------------------------------------- //

var save_states = {};

function setSaveState(type, value){

	save_states[type] = value;

	if (value){
		$("#nosave-alert-" + type).hide();
	} else {
		$("#nosave-alert-" + type).show();
	}

	var doHideAlert = true;
	for (var state_key in save_states){
		if (save_states[state_key] == false){
			doHideAlert = false;
		}
	}

	if (doHideAlert){
		$(".unsaved-changes-alert").hide();
	} else {
		$(".unsaved-changes-alert").show();
	}
}

window.onbeforeunload = function() {

	var unsavedChanges = false;

	for (var state_key in save_states){
		if (save_states[state_key] == false){
			unsavedChanges = true;
			break;
		}
	}

	if (unsavedChanges){
		console.log("PREVENTED LEAVING WITH UNHANDLED SAVES");
		return "Are you sure you want to leave? You have unsaved changes.";
	}
}

// Account Page Managers
// ========================================================================================================= //


// ------// Handle Team Persons, Season Collections
// ------//------------------------------------------------------------- //

function handleWebsiteManager_Team(){

	// Content Array Map
	var contentData_initial;
	var contentData;

	var content_reload_btn = $("#leadership-item-list-reload");
	var content_save_btn = $("#leadership-item-list-save");

	var save_state_key = "team";

	content_save_btn.click(saveTeamData);


	content_reload_btn.click(function(){
		if ((save_states[save_state_key] != false) || ((save_states[save_state_key] == false) && (confirm("You have unsaved changes. Are you should you would like to reload this content and throw away your changes?")))){
			loadTeamData();
		}
	})

	// <TODO>
	// Add exception for when a User's end year is "PRESENT"
	// Add option for end year to allow for "PRESENT"
	// PRESENT --> new Date().getFullYear() ??

	// <TODO>
	// Should user roles be sortable? (ie should there be a defined order?)
	// Are there any compelling arguments for this?

	//

	var modal_return_type = 0;
	// 0 - Hide modal
	// 1 - Hide modal & show list modal
		
	var SAMPLE_DATA = {

		".metadata" : {
			"SEASON" : {

				roster : {

					sheets_url : null,

					col_id : "A",
					col_name : "B",
					col_d0 : "C",
					row_di : 2

				},

				order_leadership : {
					"INDEX" : "PERSON_ID",
					"INDEX" : "PERSON_ID",
					"INDEX" : "PERSON_ID"
				},

				order_mentors : {
					"INDEX" : "PERSON_ID",
					"INDEX" : "PERSON_ID",
					"INDEX" : "PERSON_ID"
				},

				media : {
					"id" : "url"
				}

			}
		},

		// <TODO>
		// Does season 2015 imply the 2015-2016 season or the 2014-2015 season?

		"id12345" : {

			_id: "id12345",

			name: "Seth McFarlane",

			season_first : 2015,
			season_graduated : 2018,

			image : null,

			biography : "Hello World!",

			roles : {
				"id321" : {
					_id : "id321",
					title : "Lead Mentor",
					season_first : 2016,
					season_last : 2018,
					program : "FRC"
				}
			}
		},

		"id54321" : {

			_id: "id54321",

			name: "Jon Stewart",

			season_first : 2016,
			season_graduated : 2019,

			image : null,

			biography : "Night of too many stars",

			roles : {
				"id123" : {
					_id : "id123",
					title : "Leader of Mechanics",
					season_first : 2014,
					season_last : 2020,
					program : "SeaPerch"
				}
			}
		},

	}


	// INIT

	$("#leadership-modal-btn, #robot-modal-back-btn").click(function(){
		$("#leadership-list-modal").modal("show");
		$("#leadership-item-modal").modal("hide");
	})

	$(".manager-leadership-order, #leadership-item-season-dropdown-start, #leadership-item-season-dropdown-end, #role-item-season-dropdown-start, #role-item-season-dropdown-end").empty();
	let d001 = new Date();
	let start_year = d001.getMonth() > 8 ? d001.getFullYear() + 1 : d001.getFullYear();
	for (var year = start_year; year >= 2015; year--){
		$(".manager-leadership-order, #leadership-item-season-dropdown-start, #leadership-item-season-dropdown-end, #role-item-season-dropdown-start, #role-item-season-dropdown-end").append($("<option></option>").attr("value", year).text((year - 1) + " - " + year + " Season"));
	}

	$("#display-team-list > .manager-item").remove();

	$("#display-order-list-leadership").empty();
	$("#display-order-list-mentors").empty();

	new Sortable( $("#display-order-list-leadership")[0] , {
		handle : ".fa-sort",
		draggable: ".manager-item",
		animation: 150,
		onUpdate : saveMetadataSorting
	})

	new Sortable( $("#display-order-list-mentors")[0] , {
		handle : ".fa-sort",
		draggable: ".manager-item",
		animation: 150,
		onUpdate : saveMetadataSorting
	})

	function checkForMetaData(season){

		if (".metadata" in contentData == false){
			contentData[".metadata"] = {_id : ".metadata"};
		}

		if (season + "" in contentData[".metadata"] == false){
			contentData[".metadata"][season + ""] = {
				roster : {
					sheets_url : null
				},

				order_leadership : {},
				order_mentors : {},
				media : {
					url : "",
					caption : ""
				}
			}
		}

	}

	function saveMetadataSorting(){

		var season = $(".manager-leadership-order option:selected").val();

		checkForMetaData(season);

		contentData[".metadata"][season + ""].order_leadership = {};
		$("#display-order-list-leadership > .manager-item").each(function(index){
			contentData[".metadata"][season + ""].order_leadership[index] = $(this).attr("hash_id");
		})

		contentData[".metadata"][season + ""].order_mentors = {};
		$("#display-order-list-mentors > .manager-item").each(function(index){
			contentData[".metadata"][season + ""].order_mentors[index] = $(this).attr("hash_id");
		})

		setSaveState(save_state_key, false);

		console.log("Metadata", contentData[".metadata"]);

	}


	function loadTeamData(){

		content_reload_btn.prop("disabled", true);
		content_save_btn.prop("disabled", true);

		// <TODO>
		// Clear any relevant lists before loading content

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/Team",
			type: "GET",
			crossDomain: true,

			success: function (data, state, response) {

				console.log("Retrieved TEAM data");

				var contentDataArray = data.payload;
				contentData = {};

				for (var i = 0; i < contentDataArray.length; i++){
					contentData[contentDataArray[i]._id] = contentDataArray[i];
				}

				contentData_initial = JSON.parse(JSON.stringify(contentData));

				setSaveState(save_state_key, true);

			},

			error: function (data, state, response) {

				console.log("Failed to load TEAM data", data, state, response);
				contentData = SAMPLE_DATA;

			},


			complete: function(){

				content_reload_btn.prop("disabled", false);
				content_save_btn.prop("disabled", false);

				loadTeamData_Complete();

			}

		})

	}

	function loadTeamData_Complete(){

		console.log("Handling Team Leadership Data");

		// Load all people in the first modal
		$("#display-team-list > .manager-item").remove();

		for (var index in contentData){

			if (index !== ".metadata"){

				var person_item = contentData[index];

				var person_btn = $('<button class="btn btn-primary manager-item" type="button" hash_id="' + index + '">' + person_item.name + '<span class="manager-item-id">' + index + '</span></button>');
				$("#display-team-list").append(person_btn);

				person_btn.click(function(){
					modal_return_type = 1;
					modal_leadershipDisplay($(this).attr("hash_id"));
				})

			}

		}

		// Hide older/not wanted person buttons

		var this_date = new Date();

		var current_year = this_date.getFullYear();
		if (this_date.getMonth() > 8){
			current_year = parseInt(current_year + 1);
		}

		$("#display-team-list-search-exclude").change(toggle_display_list_items);
		$("#display-team-list-search-input").keyup(toggle_display_list_items);
		toggle_display_list_items();

		

		function toggle_display_list_items(){

			console.log("Searching");

			var search = $("#display-team-list-search-input").val().toLowerCase();
			var emptySearch = (search.replace(/ /g, "") == "");

			$("#display-team-list > .manager-item").each(function(index){

				let child = $(this);
				let should_show = false;

				if ((emptySearch) || (child.text().toLowerCase().indexOf(search)) !== -1){

					if ($("#display-team-list-search-exclude").prop("checked") == true){
						let member_data = contentData[child.attr("hash_id")];
						if (member_data.season_graduated < current_year - 2){
							should_show = false;
						} else {
							should_show = true;
						}
					} else {
						should_show = true;
					}
					
				} else {
					should_show = false;
				}

				if (should_show){
					child.show();
				} else {
					child.hide();
				}
			})

		}


		// Managing the main display 

		$(".manager-leadership-order").change(function(){

			var season = $(".manager-leadership-order option:selected").val();
			loadTeamOrders(parseInt(season));
			loadTeamMedia(parseInt(season));

		})

		loadTeamOrders(current_year);
		loadTeamMedia(current_year);

		function loadTeamMedia(season){

			console.log("Loading team Media for " + season);

			$("#group-photo-img-url").val("");
			$("#group-photo-caption").val("");

			checkForMetaData(season);

			var season_metadata = (".metadata" in contentData) ? ((season + "") in contentData[".metadata"] ? contentData[".metadata"][season + ""] : null) : null;

			if (season_metadata){
				$("#group-photo-img-url").val(season_metadata.media.url);
				$("#group-photo-caption").val(season_metadata.media.caption);
			}

		}

		$("#group-photo-img-url, #group-photo-caption").focusout(function(){

			var season = $(".manager-leadership-order option:selected").val();
			checkForMetaData(season);

			contentData[".metadata"][season + ""].media.url = $("#group-photo-img-url").val();
			contentData[".metadata"][season + ""].media.caption = $("#group-photo-caption").val();
			
			setSaveState(save_state_key, false);
		})



		function loadTeamOrders(season){

			console.log("Loading Team Orders for " + season);

			$("#display-order-list-leadership").empty();
			$("#display-order-list-mentors").empty();

			// Preload mentors and leaders into an array

			var data_arrays = {
				leadership : [],
				mentors : []
			}

			for (var personIndex in contentData){

				var personObject = contentData[personIndex];

				if (personIndex !== ".metadata"){

					for (var roleIndex in personObject.roles){

						var roleItem = personObject.roles[roleIndex];

						if ((roleItem.season_first <= season) && (roleItem.season_last >= season) && (roleItem["ignore"] !== "true" && roleItem["ignore"] !== true)){

							var roleTitle = roleItem.title.toLowerCase();

							if ((roleTitle.indexOf("mentor") !== -1) || (roleTitle.indexOf("coach") !== -1)){
								data_arrays.mentors.push(personObject._id);
								break;
							} else {
								data_arrays.leadership.push(personObject._id);
								break;
							}
						}
					}

				}

			}

			// Sort the array if a defined sort order exists

			// <TODO>
			// Does 'season' need to be converete into a string?
			// Hint: yes. You're just too tired to look up int -> string in JS (It was probably annoying to implement anyway)
			var season_metadata = (".metadata" in contentData) ? ((season + "") in contentData[".metadata"] ? contentData[".metadata"][season + ""] : null) : null;

			console.log("SEASON META", season_metadata);
			if (season_metadata){

				if ("order_leadership" in season_metadata){

					let o_l_arr = Object.values(season_metadata.order_leadership);

					data_arrays.leadership.sort(function(a, b){
						return o_l_arr.indexOf(a) - o_l_arr.indexOf(b);
					})
				}

				if ("order_mentors" in season_metadata){

					let o_m_arr = Object.values(season_metadata.order_mentors);

					data_arrays.mentors.sort(function(a, b){
						return o_m_arr.indexOf(a) - o_m_arr.indexOf(b);
					})
				}

			}

			// Display the DOM

			// <TODO>
			// Pressing any of the person buttons should display their edit modals


			for (var person_index in data_arrays.leadership){
				var person_item = contentData[data_arrays.leadership[person_index]];
				var sort_btn = $('<button class="btn btn-primary manager-item" type="button">' + person_item.name + '<i class="fa fa-sort" style="position:absolute;left:10px;top:14px"></i></button>');
				sort_btn.attr("hash_id", person_item._id);
				$("#display-order-list-leadership").append(sort_btn);
				sort_btn.click(function(){
					modal_return_type = 0;
					modal_leadershipDisplay($(this).attr("hash_id"));
				})
			}

			for (var person_index in data_arrays.mentors){
				var person_item = contentData[data_arrays.mentors[person_index]];
				var sort_btn = $('<button class="btn btn-primary manager-item" type="button">' + person_item.name + '<i class="fa fa-sort" style="position:absolute;left:10px;top:14px"></i></button>');
				sort_btn.attr("hash_id", person_item._id);
				$("#display-order-list-mentors").append(sort_btn);
				sort_btn.click(function(){
					modal_return_type = 0;
					modal_leadershipDisplay($(this).attr("hash_id"));
				})
			}

		}

		// HANDLE MODAL

		var cached_modal_content; // Person
		var cached_modal_content_b; // Roles
		var cached_modal_content_c = contentData[".metadata"]; // Roster

		var new_roles_for_person_not_pushed = {};

		$(".leadership-item-modal-headshot").click(function(){
			$("#leadership-modal-img-url").val(($(this).attr("gender") == "male") ? "https://i.imgur.com/zB7xpfV.png" : "https://i.imgur.com/oxlku78.png");
		})


		function modal_leadershipDisplay(hash_id){

			$("#leadership-list-modal").modal("hide");

			console.log("Passed hash_id of " + hash_id);
			console.log("ContentData", contentData);

			$("#leadership-item-modal-title").text((hash_id ? "Manage" : "Add") + " Person Item");
			$("#leadership-item-modal-title-hash").text(hash_id ? hash_id : "New Item");

			$("#leadership-item-roles-list").empty();

			new_roles_for_person_not_pushed = {}

			if (hash_id){

				// Load selected item

				var personItem = contentData[hash_id];
				console.log("Hash:", hash_id, "PersonItem", personItem, "Found:", hash_id in contentData);

				$("#leadership-item-name").val(personItem.name);
				$("#leadership-modal-img-url").val(personItem.image);

				$("#leadership-item-season-dropdown-start").val(personItem.season_first);
				$("#leadership-item-season-dropdown-end").val(personItem.season_graduated);

				$("#leadership-modal-biography").val(personItem.biography);

				for (var roleItem_key in personItem.roles){
					addPersonItemRoleListItem(roleItem_key, personItem.roles[roleItem_key]);
				}

				$("#leadership-modal-proceed-btn").html('Confirm Edit<i class="fa fa-pencil" style="margin-left:6px;"></i>');
				$("#leadership-modal-delete-btn").show();

			} else {

				// Default all values

				$("#leadership-item-name").val("");
				$("#leadership-modal-img-url").val("");

				var this_year = new Date().getFullYear();
				$("#leadership-item-season-dropdown-start").val(parseInt(this_year) - 1);
				$("#leadership-item-season-dropdown-end").val(this_year);

				$("#leadership-modal-biography").val("");

				$("#leadership-modal-proceed-btn").html('Add Person<i class="fa fa-plus" style="margin-left:6px;"></i>');
				$("#leadership-modal-delete-btn").hide();

			}

			cached_modal_content = getCacheRecord($("#leadership-item-modal"));
			
			$("#leadership-item-modal").modal();

		}

		function modal_leadershipRoleDisplay(leadership_hash_id, hash_id){

			$("#leadership-item-modal").modal("hide");

			console.log("Passed hash_id of " + hash_id + " for " + leadership_hash_id);

			$("#role-item-modal-title").text((hash_id ? "Manage" : "Add") + " Role Item");
			$("#role-item-modal-title-hash").text(hash_id ? hash_id : "New Item");


			$("#role-item-modal-display").text("Modifying Role for " + $("#leadership-item-name").val());

			if (hash_id){

				// Load selected item

				var roleItem;

				if (leadership_hash_id in contentData){
					roleItem = contentData[leadership_hash_id].roles[hash_id];
				} else {
					roleItem = new_roles_for_person_not_pushed[hash_id];
				}

				console.log("Role Item", roleItem);

				$("#role-item-name").val(roleItem.title);

				$("#role-item-season-dropdown-start").val(roleItem.season_first);
				$("#role-item-season-dropdown-end").val(roleItem.season_last);

				$("#role-item-program-dropdown").val(roleItem.program);

				$('#role-item-ignore').prop('checked', (roleItem["ignore"] == "true" || roleItem["ignore"] == true) ? true : false);

				$("#role-modal-proceed-btn").html('Confirm Edit<i class="fa fa-pencil" style="margin-left:6px;"></i>');
				$("#role-modal-delete-btn").show();

			} else {

				// Default all values

				$("#role-item-name").val("");

				var this_year = new Date().getFullYear();

				$("#role-item-season-dropdown-start").val(parseInt(this_year) - 1);
				$("#role-item-season-dropdown-end").val(this_year);

				$("#role-item-program-dropdown").val("FRC");

				$('#role-item-ignore').prop('checked', false);

				$("#role-modal-proceed-btn").html('Confirm Edit<i class="fa fa-pencil" style="margin-left:6px;"></i>');
				$("#role-modal-delete-btn").show();

				//

				$("#role-modal-proceed-btn").html('Add Role<i class="fa fa-plus" style="margin-left:6px;"></i>');
				$("#role-modal-delete-btn").hide();

			}

			cached_modal_content_b = getCacheRecord($("#leadership-item-role-item-modal"));
			
			$("#leadership-item-role-item-modal").modal();

		}

		// Modal Setup

		$("#display-team-list-add-btn").click(function(){
			modal_return_type = 1
			modal_leadershipDisplay(null);
			$("#leadership-item-modal").modal("show");
			$("#leadership-list-modal").modal("hide");
		})

		$("#leadership-modal-back-btn").click(closeLeadershipItemModal);

		function closeLeadershipItemModal(){

			if (modal_return_type == 0){
				$("#leadership-item-modal").modal("hide");
			} else {
				$("#leadership-item-modal").modal("hide");
				$("#leadership-list-modal").modal("show");
			}
			
			var season = $(".manager-leadership-order option:selected").val();
			loadTeamOrders(parseInt(season));
		}

		function addPersonItemRoleListItem(id, value){

			var value_display = value.title + "\n<br>(" + ((value.season_first == value.season_last) ? (value.season_first + " - " + value.season_last) : ((parseInt(value.season_first) - 1) + "-" + value.season_first + " Season to " + (parseInt(value.season_last) - 1) + "-" + value.season_last) + " Season)");
			var role_list_item = $('<div class="modal-list-item"><p class="modal-list-item-url third d-inline-block">' + value_display + '</p><button class="btn btn-danger modal-list-item-delete-btn" type="button"><i class="fa fa-close"></i></button><button class="btn btn-info modal-list-item-edit-btn" type="button"><i class="fa fa-pencil"></i></button></div>');
			
			role_list_item.attr("hash_id", id ? id : generateRandomString(8) );

			role_list_item.attr("title", value.title);
			role_list_item.attr("season_first", value.season_first);
			role_list_item.attr("season_last", value.season_last);
			role_list_item.attr("program", value.program);
			role_list_item.attr("ignore", value.ignore == "true" ? true : false);
			
			role_list_item.find(".modal-list-item-delete-btn").click(function(){

				var person_hash = $("#leadership-item-modal-title-hash").text();

				/*
				if (person_hash in contentData){
					var personItem = contentData[person_hash];
					delete personItem.roles[id];
				} else {
					delete new_roles_for_person_not_pushed[id]
				}
				*/
				
				role_list_item.remove();
			});

			role_list_item.find(".modal-list-item-edit-btn").click(function(){
				modal_leadershipRoleDisplay($("#leadership-item-modal-title-hash").text(), id);
			});

			$("#leadership-item-roles-list").append(role_list_item);

		}

		$("#leadership-item-roles-list-add-btn").click(function(){
			modal_leadershipRoleDisplay($("#leadership-item-modal-title-hash").text(), null);
			$("#leadership-item-modal").modal("hide");
			$("#leadership-item-role-item-modal").modal("show");
		});


		// <TODO>
		// Modal setup for roles, etc.

		$("#role-item-program-dropdown").empty();

		$("#role-item-program-dropdown").append($("<option></option>").attr("value", "FRC").text("FRC"));
		$("#role-item-program-dropdown").append($("<option></option>").attr("value", "SeaPerch").text("SeaPerch"));
		$("#role-item-program-dropdown").append($("<option></option>").attr("value", "Other").text("Other"));

		$("#role-item-program-dropdown").val("FRC");

		//

		$("#leadership-modal-proceed-btn").click(function(){

			var comparison = compareObjects(getCacheRecord($("#leadership-item-modal")), cached_modal_content);

			if (comparison == false){

				// Verify important data
				
				if ($("#leadership-item-name").val().replace(/ /g, "") == ""){
					alert("Cannot leave Name field blank.");
					$("#leadership-item-name").focus();
					return;
				}

				if ($("#leadership-item-season-dropdown-start").val() > $("#leadership-item-season-dropdown-end").val()){
					alert("A person cannot have graduated the team BEFORE they joined the team.");
					return;
				}

				if ($("#leadership-item-roles-list > .modal-list-item").length == 0){
					alert("There must be at least one role associated with this person.");
					return;
				}

				if ($("#leadership-modal-img-url").val().replace(/ /g, "") == ""){
					alert("Please use a place-holder male or female headshot.");
					return;
				}

				/*
					Record change done to object
				*/

				var hash_id = $("#leadership-item-modal-title-hash").text();

				var isNewItem = (hash_id == "New Item") ? true : false;

				if (isNewItem){
					hash_id = generateRandomString(8);
					contentData[hash_id] = { _id: hash_id };
				}

				contentData[hash_id].name = $("#leadership-item-name").val();
				contentData[hash_id].image = $("#leadership-modal-img-url").val();
				
				contentData[hash_id].season_first = $("#leadership-item-season-dropdown-start").val();
				contentData[hash_id].season_graduated = $("#leadership-item-season-dropdown-end").val();
				
				contentData[hash_id].biography = $("#leadership-item-biography").val();

				contentData[hash_id].roles = {};
				$("#leadership-item-roles-list").find(".modal-list-item").each(function(){

					contentData[hash_id].roles[$(this).attr("hash_id")] = {

						title : $(this).attr("title"),

						season_first : $(this).attr("season_first"),
						season_last : $(this).attr("season_last"),
						
						program : $(this).attr("program"),
						ignore : $(this).attr("ignore")

					}
					
				})

				if (!isNewItem){

					var existing_btn = $("#display-team-list > .manager-item[hash_id='" + hash_id + "']");
					existing_btn.text(contentData[hash_id].name);
					existing_btn.append($('<span class="manager-item-id">' + hash_id + '</span>'));
					
					//existing_btn.html(contentData[hash_id].name + '<span class="manager-item-id">' + contentData[hash_id]._id  + '</span><span class="bg-' + item_color + ' robot-item-btn-competition-label">' + contentData[hash_id].type + ' ' + contentData[hash_id].season + '</span>');

				} else {

					var new_button = $('<button hash_id="' + contentData[hash_id]._id + '" class="btn btn-primary manager-item" type="button">' + contentData[hash_id].name + '<span class="manager-item-id">' + contentData[hash_id]._id  + '</span></button>')
					
					$("#display-team-list").append(new_button);

					new_button.click(function(){
						modal_leadershipDisplay($(this).attr("hash_id"));
					})
				}

				setSaveState(save_state_key, false);
			}

			closeLeadershipItemModal();
		})

		$("#leadership-modal-delete-btn").click(function(){

			if (confirm("Are you sure you want to delete this item?")){

				closeLeadershipItemModal();

				var hash_id = $("#leadership-item-modal-title-hash").text();
				delete contentData[hash_id];

				setSaveState(save_state_key, false);

				$("#display-team-list > .manager-item[hash_id='" + hash_id + "']").remove();

			}

		})

		//

		$("#role-modal-proceed-btn").click(function(){

			// Verify important data
			
			if ($("#role-item-name").val().replace(/ /g, "") == ""){
				alert("Cannot leave Role Title field blank.");
				$("#role-item-name").focus();
				return;
			}

			if ($("#role-item-season-dropdown-start").val() > $("#role-item-season-dropdown-end").val()){
				alert("A role cannot have a starting season that begins AFTER it's end season.");
				return;
			}

			var person_hash = $("#leadership-item-modal-title-hash").text();

			var personRoleReference;

			if (person_hash in contentData){

				personRoleReference = contentData[person_hash].roles;

			} else {
				personRoleReference = new_roles_for_person_not_pushed;
			}

			/*
				Record change done to object
			*/

			var hash_id = $("#role-item-modal-title-hash").text();

			var isNewItem = (hash_id == "New Item") ? true : false;

			if (isNewItem){
				hash_id = generateRandomString(8);
				personRoleReference[hash_id] = { _id: hash_id };
			}

			personRoleReference[hash_id].title = $("#role-item-name").val();

			personRoleReference[hash_id].season_first = $("#role-item-season-dropdown-start").val();
			personRoleReference[hash_id].season_last = $("#role-item-season-dropdown-end").val();
			
			personRoleReference[hash_id].program = $("#role-item-program-dropdown").val();

			personRoleReference[hash_id].ignore = $('#role-item-ignore').prop('checked');

			console.log("Role Reference", hash_id, personRoleReference[hash_id]);

			if (!isNewItem){

				var value_display = personRoleReference[hash_id].title + "\n<br>(" + ( (personRoleReference[hash_id].season_first == personRoleReference[hash_id].season_last) ? (personRoleReference[hash_id].season_first + " - " + personRoleReference[hash_id].season_last) : ( (parseInt(personRoleReference[hash_id].season_first) - 1) + "-" + personRoleReference[hash_id].season_first + " Season to " + (parseInt(personRoleReference[hash_id].season_last) - 1) + "-" + personRoleReference[hash_id].season_last + " Season)"));
				var existing_btn = $("#leadership-item-roles-list > .modal-list-item[hash_id='" + hash_id + "'] > .modal-list-item-url");
				existing_btn.html(value_display);
				
				//existing_btn.html(contentData[hash_id].name + '<span class="manager-item-id">' + contentData[hash_id]._id  + '</span><span class="bg-' + item_color + ' robot-item-btn-competition-label">' + contentData[hash_id].type + ' ' + contentData[hash_id].season + '</span>');

			} else {

				addPersonItemRoleListItem(hash_id, personRoleReference[hash_id]);

			}

			setSaveState(save_state_key, false);


			$("#leadership-item-modal").modal("show");
			$("#leadership-item-role-item-modal").modal("hide");
		})


		$("#role-modal-back-btn").click(function(){
			$("#leadership-item-modal").modal("show");
			$("#leadership-item-role-item-modal").modal("hide");
		})

		$("#role-modal-delete-btn").click(function(){

			if (confirm("Are you sure you want to delete this item?")){

				var person_hash = $("#leadership-item-modal-title-hash").text();

				$("#leadership-item-modal").modal("show");
				$("#leadership-item-role-item-modal").modal("hide");

				var hash_id = $("#role-item-modal-title-hash").text();

				/*
				if (person_hash in contentData){
					var personItem = contentData[person_hash];
					delete personItem.roles[hash_id];
				} else {
					delete new_roles_for_person_not_pushed[hash_id];
				}
				*/

				
				setSaveState(save_state_key, false);

				$("#leadership-item-roles-list > .modal-list-item[hash_id='" + hash_id + "']").remove();

			}

		})

	}

	// SAVE

	function saveTeamData(){

		$("#saving-modal").modal({backdrop: 'static', keyboard: false});

		var item_collector = {
			added : {},
			modified : {},
			removed : [],
			stable : [],
		}

		var content_Keys = getUniqueArray(Object.keys(contentData).concat(Object.keys(contentData_initial)));

		for (var key_index in content_Keys){

			let key = content_Keys[key_index];

			if (contentData[key] && contentData_initial[key] == null){

				item_collector.added[key] = contentData[key];

			} else if (contentData_initial[key] && contentData[key] == null){

				item_collector.removed.push(key);

			} else if (compareObjects(contentData[key], contentData_initial[key]) == false){

				item_collector.modified[key] = contentData[key];

			} else {

				item_collector.stable.push(key);

			}
		}

		console.log(item_collector);

		/*
			The best practice is to sent one request with the new, modified, and deleted content.
		*/

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/team",
			type: "POST",
			crossDomain: true,

			data: {
				osis : osis,
				token: token,
				_added 		: item_collector.added,
				_modified 	: item_collector.modified,
				_deleted 	: item_collector.removed
			},

			success: function (data, state, response) {

				console.log("Successfully updated TEAM data!");

			},

			error: function (data, state, response) {

				console.log("Failed to update TEAM data", data, state, response);
				alert("An error occurred when saving the Team data. Try again?");

			},


			complete: function(){

				setSaveState(save_state_key, true);

				setTimeout(function() {
					$("#saving-modal").modal("hide");
				}, 1000);

			}

		})

		// MEDIA DATA

		// ROSTER DATA

		$("#roster-modal-btn").click(function(){

			
			var selected_season_item = $(".manager-leadership-order option:selected");

			$("#roster-item-modal-title-hash").text(selected_season_item.text());
			$("#roster-item-modal-url-season-text").text(selected_season_item.text());
			
			$("#roster-item-modal").modal();

			/*

			".metadata" : {
				"SEASON" : {

					roster : {

						sheets_url : null,

						col_id : 1,
						col_name : 2,
						col_d0 : 3,
						row_di : 2
						
					},

					order_leadership : {
						"INDEX" : "PERSON_ID",
						"INDEX" : "PERSON_ID",
						"INDEX" : "PERSON_ID"
					},

					order_mentors : {
						"INDEX" : "PERSON_ID",
						"INDEX" : "PERSON_ID",
						"INDEX" : "PERSON_ID"
					},

					media : {
						"id" : "url"
					}

				}
			},
			*/

			var season_metadata = contentData[".metadata"][selected_season_item.val()];
			var roster_data = season_metadata ? season_metadata.roster : null;

			$("#roster-item-modal-url").text(roster_data ? roster_data.sheets_url : "");

			$("#roster-item-modal-id-col").text(	roster_data ? roster_data.col_id 	: "");
			$("#roster-item-modal-name-col").text(	roster_data ? roster_data.col_name 	: "");
			$("#roster-item-modal-date-col").text(	roster_data ? roster_data.col_d0 	: "");
			$("#roster-item-moda-date-row").text(	roster_data ? roster_data.row_di 	: "");

		})

		$("#roster-item-modal-test-btn").click(function(){

		})

		$("#roster-modal-proceed-btn").click(function(){

			var selected_season = $(".manager-leadership-order option:selected").val();

			if (compareObjects(contentData[".metadata"][selected_season], contentData_initial[".metadata"][selected_season]) == false){
				setSaveState(save_state_key, false);
			}
		})
	}

	loadTeamData();

}

// ------// Handle Robots
// ------//------------------------------------------------------------- //

function handleWebsiteManager_Robots(){

	// Constants

	var content_reload_btn = $("#robot-item-list-reload");
	var content_save_btn = $("#robot-item-list-save");

	var content_list_div_selector = "#manage_robots_list";
	var content_list_add_btn = $("#robot-item-list-add-btn");

	var content_modal_proceed_btn = $("#robot-modal-proceed-btn");

	var save_state_key = "robots";


	// Content Array Map
	var contentData_initial;
	var contentData;

	// Handler Init

	content_save_btn.click(saveRobotData);

	content_reload_btn.click(function(){
		if ((save_states[save_state_key] != false) || ((save_states[save_state_key] == false) && (confirm("You have unsaved changes. Are you should you would like to reload this content and throw away your changes?")))){
			loadRobotData();
		}
	})

	content_list_add_btn.click(function(){
		modal_robotDisplay(null);
	})

	function loadRobotData(){

		content_reload_btn.prop("disabled", true);
		content_save_btn.prop("disabled", true);
		content_list_add_btn.prop("disabled", true);

		$(content_list_div_selector + " > .manager-item").remove();

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/robots",
			type: "GET",
			crossDomain: true,

			success: function (data, state, response) {

				var contentDataArray = data.payload;

				contentDataArray.sort(function(a, b){
					return parseInt(b.season) - parseInt(a.season);
				})

				contentData = {};

				for (var i = 0; i < contentDataArray.length; i++){

					var item_color = getRobotItemColor(contentDataArray[i]["type"]);

					$(content_list_div_selector).append($('<button hash_id="' + contentDataArray[i]._id + '" class="btn btn-' + item_color + ' manager-item" type="button">' + contentDataArray[i].name + '<span class="manager-item-id">' + contentDataArray[i]._id  + '</span><span class="bg-' + item_color + ' robot-item-btn-competition-label">' + contentDataArray[i].type + ' ' + contentDataArray[i].season + '</span></button>'));

					contentData[contentDataArray[i]._id] = contentDataArray[i];
				}

				contentData_initial = JSON.parse(JSON.stringify(contentData));

				$(content_list_div_selector + " > .manager-item").click(function(){
					modal_robotDisplay($(this).attr("hash_id"));
				})

				setSaveState(save_state_key, true);

			},

			error: function (data, state, response) {

				console.log("Failed to fetch Robots Data", data, state, response);

			},


			complete: function(){

				content_reload_btn.prop("disabled", false);
				content_save_btn.prop("disabled", false);
				content_list_add_btn.prop("disabled", false);

			}

		})

	}


	// HANDLING MODAL

	var cached_modal_content;

	function modal_robotDisplay(hash_id){

		$("#robot-item-modal-title").text((hash_id ? "Manage" : "Add") + " Robot Item");
		$("#robot-item-modal-title-hash").text(hash_id ? hash_id : "New Item");

		$("#robot-item-media-list").empty();
		$("#robot-item-competition-list").empty();

		if (hash_id){

			// Load selected item

			var robotItem = contentData[hash_id];

			$("#robot-item-name").val(robotItem.name);
			$("#robot-item-season-dropdown").val(robotItem.season);
			$("#robot-item-type-dropdown").val(robotItem.type);

			$("#robot-item-biography").val(robotItem.biography);

			for (var mediaItem_key in robotItem.media){
				addRobotItemMediaListItem(mediaItem_key, robotItem.media[mediaItem_key]);
			}

			for (var competitionItem_key in robotItem.competitions){
				addRobotItemCompetitionListItem(competitionItem_key, robotItem.competitions[competitionItem_key].name, robotItem.competitions[competitionItem_key].url);
			}

			content_modal_proceed_btn.html('Confirm Edit<i class="fa fa-pencil" style="margin-left:6px;"></i>');
			$("#robot-modal-delete-btn").show();

		} else {

			// Default all values

			$("#robot-item-name").val("");
			$("#robot-item-season-dropdown").val(new Date().getFullYear());
			$("#robot-item-type-dropdown").val("FRC");

			$("#robot-item-biography").val("");


			content_modal_proceed_btn.html('Add Robot<i class="fa fa-plus" style="margin-left:6px;"></i>');
			$("#robot-modal-delete-btn").hide();

		}

		cached_modal_content = getCacheRecord($("#robot-item-modal"));
		
		$("#robot-item-modal").modal();

	}

	// Modal Setup

	$("#robot-item-season-dropdown").empty();
	for (var year = new Date().getFullYear(); year >= 2014; year--){
		$("#robot-item-season-dropdown").append($("<option></option>").attr("value", year).text((year - 1) + " - " + year + " Season"));
	}

	new Sortable( $("#robot-item-media-list")[0] , {
		handle : ".modal-list-item-handle",
		draggable: ".modal-list-item",
		animation: 150
	})

	function addRobotItemMediaListItem(id, value){

		var media_list_item = $('<div hash_id="' + (id ? id : generateRandomString(8)) + '" class="modal-list-item"><div class="modal-list-item-handle"><i class="material-icons sortable-drag-handle draggable text-black-50">menu</i></div><input type="url"' + (value ? ('value="' + value + '"') : '') + '" placeholder="https://www.youtube.com/watch?v=abc1234" class="modal-list-item-url" /><button class="btn btn-danger modal-list-item-delete-btn" type="button"><i class="fa fa-close"></i></button></div>')
		media_list_item.find(".modal-list-item-delete-btn").click(function(){
			media_list_item.remove();
		});

		$("#robot-item-media-list").append(media_list_item);

	}

	$("#robot-item-media-list-add-btn").click(function(){
		addRobotItemMediaListItem(null, null);
	});

	new Sortable( $("#robot-item-competition-list")[0] , {
		handle : ".modal-list-item-handle",
		draggable: ".modal-list-item",
		animation: 150
	})

	function addRobotItemCompetitionListItem(id, title, url){

		var competition_list_item = $('<div hash_id="' + (id ? id : generateRandomString(8)) + '" class="modal-list-item"><div class="modal-list-item-handle grabbable"><i class="material-icons">menu</i></div><div><input type="text"' + (title ? ('value="' + title + '"') : '') + ' placeholder="Competition Name" class="modal-list-item-title" /><input type="url"' + (url ? (' value="' + url + '"') : '') + ' placeholder="Optional Match Playlist URL" class="modal-list-item-url second" /></div><button class="btn btn-danger modal-list-item-delete-btn second" type="button"><i class="fa fa-close"></i></button></div>');
		competition_list_item.find(".modal-list-item-delete-btn").click(function(){
			competition_list_item.remove();
		});

		$("#robot-item-competition-list").append(competition_list_item);

	}

	$("#robot-item-competition-list-add-btn").click(function(){
		addRobotItemCompetitionListItem(null, null, null);
	});

	// Modal controls

	content_modal_proceed_btn.click(function(){

		var comparison = compareObjects(getCacheRecord($("#robot-item-modal")), cached_modal_content);

		if (comparison == false){

			// Verify important data
			
			if ($("#robot-item-name").val().replace(/ /g, "") == ""){
				alert("Cannot leave Name field blank.");
				$("#robot-item-name").focus();
				return;
			}

			/*
				Record change done to object
			*/

			var hash_id = $("#robot-item-modal-title-hash").text();

			var isNewItem = (hash_id == "New Item") ? true : false;

			if (isNewItem){
				hash_id = generateRandomString(8);
				contentData[hash_id] = { _id: hash_id };
			}

			contentData[hash_id].name = $("#robot-item-name").val();
			contentData[hash_id].season = $("#robot-item-season-dropdown").val();
			contentData[hash_id].type = $("#robot-item-type-dropdown").val();
			contentData[hash_id].biography = $("#robot-item-biography").val();

			// Edit robotItem.media
			contentData[hash_id].media = {};
			$("#robot-item-media-list").find(".modal-list-item").each(function(){

				var input_value = $(this).find("input[type=url]").val();

				if (input_value != null && input_value.replace(/ /g, "") !== ""){
					contentData[hash_id].media[$(this).attr("hash_id")] = input_value;
				}
				
			})

			// Edit robotItem.competitions
			contentData[hash_id].competitions = {};
			$("#robot-item-competition-list").find(".modal-list-item").each(function(){

				var input_value = $(this).find("input[type=text]").val();

				if (input_value !== null && input_value.replace(/ /g, "") !== ""){
					contentData[hash_id].competitions[$(this).attr("hash_id")] = {
						name : input_value,
						url : $(this).find("input[type=url]").val()
					}
				}

			})

			var item_color = getRobotItemColor(contentData[hash_id]["type"]);

			if (!isNewItem){

				var existing_btn = $(content_list_div_selector + " > .manager-item[hash_id='" + hash_id + "']");

				existing_btn.html(contentData[hash_id].name + '<span class="manager-item-id">' + contentData[hash_id]._id  + '</span><span class="bg-' + item_color + ' robot-item-btn-competition-label">' + contentData[hash_id].type + ' ' + contentData[hash_id].season + '</span>');
				existing_btn.removeClass("btn-primary"); existing_btn.removeClass("btn-info"); existing_btn.removeClass("btn-secondary");
				existing_btn.addClass("btn-" + item_color);

			} else {
				var new_button = $('<button hash_id="' + contentData[hash_id]._id + '" class="btn btn-' + item_color + ' manager-item" type="button">' + contentData[hash_id].name + '<span class="manager-item-id">' + contentData[hash_id]._id  + '</span><span class="bg-' + item_color + ' robot-item-btn-competition-label">' + contentData[hash_id].type + ' ' + contentData[hash_id].season + '</span></button>');
				$(content_list_div_selector).append(new_button);
				new_button.click(function(){
					modal_robotDisplay($(this).attr("hash_id"));
				})
			}

			setSaveState(save_state_key, false);
		}

		$("#robot-item-modal").modal("hide");

	})

	$("#robot-modal-delete-btn").click(function(){

		if (confirm("Are you sure you want to delete this item?")){

			$("#robot-item-modal").modal("hide");

			var hash_id = $("#robot-item-modal-title-hash").text();
			delete contentData[hash_id];

			setSaveState(save_state_key, false);

			$(content_list_div_selector + " > .manager-item[hash_id='" + hash_id + "']").remove();

		}

	})

	function getRobotItemColor(type){
		switch(type.toLowerCase()){
			case "frc":
				return "primary";
			case "seaperch":
				return "info";
			default:
				return "secondary";
		}
	}

	// SAVE

	function saveRobotData(){

		$("#saving-modal").modal({backdrop: 'static', keyboard: false});

		var item_collector = {
			added : {},
			modified : {},
			removed : [],
			stable : [],
		}

		var content_Keys = getUniqueArray(Object.keys(contentData).concat(Object.keys(contentData_initial)));

		for (var key_index in content_Keys){

			let key = content_Keys[key_index];

			if (contentData[key] && contentData_initial[key] == null){

				item_collector.added[key] = contentData[key];

			} else if (contentData_initial[key] && contentData[key] == null){

				item_collector.removed.push(key);

			} else if (compareObjects(contentData[key], contentData_initial[key]) == false){

				item_collector.modified[key] = contentData[key];

			} else {

				item_collector.stable.push(key);

			}
		}

		console.log(item_collector);

		/*
			The best practice is to sent one request with the new, modified, and deleted content.
		*/

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/robots",
			type: "POST",
			crossDomain: true,

			data: {
				osis : osis,
				token: token,
				_added 		: item_collector.added,
				_modified 	: item_collector.modified,
				_deleted 	: item_collector.removed
			},

			success: function (data, state, response) {

				console.log("Successfully updated ROBOTS data!");

			},

			error: function (data, state, response) {

				console.log("Failed to update ROBOTS data", data, state, response);
				alert("An error occurred when saving the Robots data. Try again?");

			},


			complete: function(){

				setSaveState(save_state_key, true);

				setTimeout(function() {
					$("#saving-modal").modal("hide");
				}, 1000);

			}

		})

	}

	loadRobotData();

}

// ------// Handle Contacts
// ------//------------------------------------------------------------- //

function handleWebsiteManager_Contacts(){

	// Constants

	var content_reload_btn = $("#contact-item-list-reload");
	var content_save_btn = $("#contact-item-list-save");

	var content_list_div_selector = "#manage-contacts-list";
	var content_list_add_btn = $("#contact-item-list-add-btn");

	var content_modal_proceed_btn = $("#contact-modal-proceed-btn");

	var save_state_key = "contacts";


	// Content Array Map
	var contentData_initial;
	var contentData;

	// Handler Init

	content_save_btn.click(saveContactData);

	content_reload_btn.click(function(){
		if ((save_states[save_state_key] != false) || ((save_states[save_state_key] == false) && (confirm("You have unsaved changes. Are you should you would like to reload this content and throw away your changes?")))){
			loadContactData();
		}
	})

	content_list_add_btn.click(function(){
		modal_contactDisplay(null);
	})

	new Sortable( $("#manage-contacts-list")[0] , {

		// handle : ".icon-menu",
		draggable: ".manager-item",
		animation: 150,

		onUpdate: function(){
			// Order was changed
			setSaveState(save_state_key, false);
			$.each( $("#manage-contacts-list").find(".manager-item"), function(index, item){
				contentData[$(item).attr("hash_id")].order = index;
			});
		}
	})

	function loadContactData(){

		content_reload_btn.prop("disabled", true);
		content_save_btn.prop("disabled", true);
		content_list_add_btn.prop("disabled", true);

		console.log("Loading contact data");

		$(content_list_div_selector + " > .manager-item").remove();

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/contacts",
			type: "GET",
			crossDomain: true,

			success: function (data, state, response) {

				var contentDataArray = data.payload;

				if (contentDataArray == null){
					contentDataArray = [
						{
							_id: "1",
							name : "Steven",
							contact : "Yellow@blue.com",
							order: 0
						}, {
							_id: "2",
							name : "Alex",
							contact : "alex@red.com",
							order: 1
						}, {
							_id: "3",
							name : "Valerie",
							contact : "vals@val.com",
							order: 2
						},
					];
				}

				contentDataArray.sort(function(a, b){
					return parseInt(b.order) - parseInt(a.order);
				})

				contentData = {};

				for (var i = 0; i < contentDataArray.length; i++){

					$(content_list_div_selector).append($('<button hash_id="' + contentDataArray[i]._id + '" class="btn btn-primary manager-item" type="button">' + contentDataArray[i].name + '<i class="fa fa-sort" style="position:absolute;left:10px;top:14px"></i></button>'));

					contentData[contentDataArray[i]._id] = contentDataArray[i];
				}

				contentData_initial = JSON.parse(JSON.stringify(contentData));

				$(content_list_div_selector + " > .manager-item").click(function(){
					modal_contactDisplay($(this).attr("hash_id"));
				})

				setSaveState(save_state_key, true);

			},

			error: function (data, state, response) {

				console.log("Failed to fetch Contacts Data", data, state, response);

			},


			complete: function(){

				content_reload_btn.prop("disabled", false);
				content_save_btn.prop("disabled", false);
				content_list_add_btn.prop("disabled", false);

			}

		})

	}


	// HANDLING MODAL

	var cached_modal_content;

	function modal_contactDisplay(hash_id){

		$("#contact-item-modal-title").text((hash_id ? "Manage" : "Add") + " Contact Item");
		$("#contact-item-modal-title-hash").text(hash_id ? hash_id : "New Item");

		if (hash_id){

			// Load selected item

			var contactItem = contentData[hash_id];

			$("#contact-item-name").val(contactItem.name);
			$("#contact-item-contact").val(contactItem.contact);


			content_modal_proceed_btn.html('Confirm Edit<i class="fa fa-pencil" style="margin-left:6px;"></i>');
			$("#contact-modal-delete-btn").show();

		} else {

			// Default all values

			$("#contact-item-name").val("");
			$("#contact-item-contact").val("");


			content_modal_proceed_btn.html('Add Contact<i class="fa fa-plus" style="margin-left:6px;"></i>');
			$("#contact-modal-delete-btn").hide();

		}

		cached_modal_content = getCacheRecord($("#contact-item-modal"));
		
		$("#contact-item-modal").modal();

	}

	// Modal controls

	content_modal_proceed_btn.click(function(){

		var comparison = compareObjects(getCacheRecord($("#contact-item-modal")), cached_modal_content);

		if (comparison == false){

			// Verify important data
			
			if ($("#contact-item-name").val().replace(/ /g, "") == ""){
				alert("Cannot leave Name field blank.");
				$("#contact-item-name").focus();
				return;
			}

			if ($("#contact-item-contact").val().replace(/ /g, "") == ""){
				alert("Cannot leave Contact field blank.");
				$("#contact-item-contact").focus();
				return;
			}

			/*
				Record change done to object
			*/

			var hash_id = $("#contact-item-modal-title-hash").text();

			var isNewItem = (hash_id == "New Item") ? true : false;

			if (isNewItem){
				hash_id = generateRandomString(8);
				contentData[hash_id] = { _id: hash_id };
			}

			contentData[hash_id].name = $("#contact-item-name").val();
			contentData[hash_id].contact = $("#contact-item-contact").val();

			if (!isNewItem){

				var existing_btn = $(content_list_div_selector + " > .manager-item[hash_id='" + hash_id + "']");

				existing_btn.html(contentData[hash_id].name + '<i class="icon-menu" style="position:absolute;left:10px;top:14px"></i>');

			} else {
				var new_button = $('<button hash_id="' + hash_id + '" class="btn btn-primary manager-item" type="button">' + contentData[hash_id].name + '<i class="icon-menu" style="position:absolute;left:10px;top:14px"></i></button>');
				
				$(content_list_div_selector).append(new_button);
				new_button.click(function(){
					modal_contactDisplay($(this).attr("hash_id"));
				})
			}

			setSaveState(save_state_key, false);
		}

		$("#contact-item-modal").modal("hide");

	})

	$("#contact-modal-delete-btn").click(function(){

		if (confirm("Are you sure you want to delete this item?")){

			$("#contact-item-modal").modal("hide");

			var hash_id = $("#contact-item-modal-title-hash").text();
			delete contentData[hash_id];

			setSaveState(save_state_key, false);

			$(content_list_div_selector + " > .manager-item[hash_id='" + hash_id + "']").remove();

		}

	})

	// SAVE

	function saveContactData(){

		$("#saving-modal").modal({backdrop: 'static', keyboard: false});

		var item_collector = {
			added : {},
			modified : {},
			removed : [],
			stable : [],
		}

		var content_Keys = getUniqueArray(Object.keys(contentData).concat(Object.keys(contentData_initial)));

		for (var key_index in content_Keys){

			let key = content_Keys[key_index];

			if (contentData[key] && contentData_initial[key] == null){

				item_collector.added[key] = contentData[key];

			} else if (contentData_initial[key] && contentData[key] == null){

				item_collector.removed.push(key);

			} else if (compareObjects(contentData[key], contentData_initial[key]) == false){

				item_collector.modified[key] = contentData[key];

			} else {

				item_collector.stable.push(key);

			}
		}

		console.log(item_collector);

		/*
			The best practice is to sent one request with the new, modified, and deleted content.
		*/

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/contacts",
			type: "POST",
			crossDomain: true,

			data: {
				osis : osis,
				token: token,
				_added 		: item_collector.added,
				_modified 	: item_collector.modified,
				_deleted 	: item_collector.removed
			},

			success: function (data, state, response) {

				console.log("Successfully updated CONTACTS data!");

			},

			error: function (data, state, response) {

				console.log("Failed to update CONTACTS data", data, state, response);
				alert("An error occurred when saving the Contacts data. Try again?");

			},


			complete: function(){

				setSaveState(save_state_key, true);

				setTimeout(function() {
					$("#saving-modal").modal("hide");
				}, 1000);

			}

		})

	}

	loadContactData();

}


// ------// Handle Sponsors
// ------//------------------------------------------------------------- //

function handleWebsiteManager_Sponsors(){

	// Constants

	var content_reload_btn = $("#sponsor-item-list-reload");
	var content_save_btn = $("#sponsor-item-list-save");

	var content_list_div_selector = "#manage-sponsors-list";
	var content_list_add_btn = $("#sponsor-item-list-add-btn");

	var content_modal_proceed_btn = $("#sponsor-modal-proceed-btn");

	var save_state_key = "sponsors";


	// Content Array Map
	var contentData_initial;
	var contentData;

	// Handler Init

	content_save_btn.click(saveSponsorData);

	content_reload_btn.click(function(){
		if ((save_states[save_state_key] != false) || ((save_states[save_state_key] == false) && (confirm("You have unsaved changes. Are you should you would like to reload this content and throw away your changes?")))){
			loadSponsorData();
		}
	})

	content_list_add_btn.click(function(){
		modal_SponsorDisplay(null);
	})

	/*
	new Sortable( $("#manage-sponsors-list")[0] , {

		handle : ".icon-menu",
		draggable: ".manager-item",
		animation: 150,

		onUpdate: function(){
			// Order was changed
			setSaveState(save_state_key, false);
			$.each( $("#manage-sponsors-list").find(".manager-item"), function(index, item){
				contentData[$(item).attr("hash_id")].order = index;
			});
		}
	})
	*/

	function loadSponsorData(){

		content_reload_btn.prop("disabled", true);
		content_save_btn.prop("disabled", true);
		content_list_add_btn.prop("disabled", true);

		console.log("Loading sponsor data");

		$(content_list_div_selector + " > .manager-item").remove();

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/sponsors",
			type: "GET",
			crossDomain: true,

			success: function (data, state, response) {

				var contentDataArray = data.payload;

				console.log("Arrived content", contentDataArray);

				fallbackAJAX(contentDataArray);

			},

			error: function (data, state, response) {

				console.log("Failed to fetch Sponsors Data", data, state, response);

				fallbackAJAX();

			},


			complete: function(){

				content_reload_btn.prop("disabled", false);
				content_save_btn.prop("disabled", false);
				content_list_add_btn.prop("disabled", false);

			}

		})

		function fallbackAJAX(contentDataArray){

			if (contentDataArray == null){
				contentDataArray = [
					{
						_id: "1",
						name : "AMSCO",
						biography : "I would walk one thousand miles",
						image : "yeet.jpg",
						destination : "www.notyeet.com",
						seasons : []
					}, {
						_id: "2",
						name : "LEVEL",
						biography : "a biography",
						image : "beetsqueet.jpg",
						destination : "www.maybeyeet.com",
						seasons : ["2017 - 2018 Season"]
					}, {
						_id: "3",
						name : "LEGO",
						biography : "And I would walk one thousand more",
						image : "beetyeet.jpg",
						destination : "www.yesyeet.com",
						seasons : []
					},
				];
			}

			contentData = {};

			for (let i = 0; i < contentDataArray.length; i++){

				$(content_list_div_selector).append($('<button hash_id="' + contentDataArray[i]._id + '" class="btn btn-primary manager-item" type="button">' + contentDataArray[i].name + '<span class="manager-item-id">' + contentDataArray[i]._id + '</span></button>'));

				contentData[contentDataArray[i]._id] = contentDataArray[i];
			}

			contentData_initial = JSON.parse(JSON.stringify(contentData));

			$(content_list_div_selector + " > .manager-item").click(function(){
				modal_SponsorDisplay($(this).attr("hash_id"));
			})

			setSaveState(save_state_key, true);

		}

	}


	// HANDLING MODAL

	var cached_modal_content;

	function modal_SponsorDisplay(hash_id){

		$("#sponsor-item-modal-title").text((hash_id ? "Manage" : "Add") + " Sponsor Item");
		$("#sponsor-item-modal-title-hash").text(hash_id ? hash_id : "New Item");

		$("#sponsor-modal-seasons-list-div").empty();

		if (hash_id){

			// Load selected item

			var sponsorItem = contentData[hash_id];

			$("#sponsor-modal-name").val(sponsorItem.name);
			$("#sponsor-modal-img-url").val(sponsorItem.image);
			$("#sponsor-modal-destination-url").val(sponsorItem.destination);
			$("#sponsor-modal-biography").val(sponsorItem.biography);

			console.log("SEASONS", sponsorItem.seasons);

			for (let season_index = 0; season_index < sponsorItem.seasons.length; season_index++){

				var season_year = sponsorItem.seasons[season_index];
				var season_text = (season_year - 1) + " - " + season_year;

				var new_season_item = $('<span style="display:block;background-color:#ccc;padding:5px;margin-bottom:5px;border:1px solid #bbb" class="cache-check" season="' + season_year + '">' + season_text + ' Season<button class="btn btn-danger float-right" type="button" style="padding:2px 6px;margin:0px;font-size:12px;border-radius:0px;"><i class="fa fa-close"></i></button></span>');
			
				$("#sponsor-modal-seasons-list-div").append(new_season_item);
				
				new_season_item.find("button").click(function(){
					new_season_item.remove();
				})

			}

			content_modal_proceed_btn.html('Confirm Edit<i class="fa fa-pencil" style="margin-left:6px;"></i>');
			$("#sponsor-modal-delete-btn").show();

		} else {

			// Default all values

			$("#sponsor-modal-name").val("");
			$("#sponsor-modal-img-url").val("");
			$("#sponsor-modal-destination-url").val("");
			$("#sponsor-modal-biography").val("");
			$("#sponsor-modal-seasons-list-div").empty();

			content_modal_proceed_btn.html('Add Sponsor<i class="fa fa-plus" style="margin-left:6px;"></i>');
			$("#sponsor-modal-delete-btn").hide();

		}

		cached_modal_content = getCacheRecord($("#sponsor-item-modal"));
		
		$("#sponsor-item-modal").modal();

	}

	// Modal controls

	$("#sponsor-modal-season-select").empty();
	for (var year = new Date().getFullYear(); year >= 2015; year--){
		$("#sponsor-modal-season-select").append($("<option></option>").attr("value", year).text((year - 1) + " - " + year + " Season"));
	}

	$("#sponsor-modal-season-add-btn").click(function(){

		var season_text = $("#sponsor-modal-season-select option:selected").text();
		var season_year = $("#sponsor-modal-season-select option:selected").val();

		if ($("#sponsor-modal-seasons-list-div span:contains('" +season_text + "')").length != 0){
			alert("Season Item already added to list");
			return;
		}
		
		let new_season_item = $('<span style="display:block;background-color:#ccc;padding:5px;margin-bottom:5px;border:1px solid #bbb" class="cache-check" season="' + season_year + '">' + season_text + '<button class="btn btn-danger float-right" type="button" style="padding:2px 6px;margin:0px;font-size:12px;border-radius:0px;"><i class="fa fa-close"></i></button></span>');
		
		$("#sponsor-modal-seasons-list-div").append(new_season_item);
		
		new_season_item.find("button").click(function(){
			new_season_item.remove();
		})
	})

	content_modal_proceed_btn.click(function(){

		var comparison = compareObjects(getCacheRecord($("#sponsor-item-modal")), cached_modal_content);

		if (comparison == false){

			// Verify important data
			
			if ($("#sponsor-modal-name").val().replace(/ /g, "") == ""){
				alert("Cannot leave Name field blank.");
				$("#sponsor-modal-name").focus();
				return;
			}

			if ($("#sponsor-modal-seasons-list-div").children().length == 0){
				alert("You must associate this sponsor with at least one season.");
				return;
			}

			/*
				Record change done to object
			*/

			var hash_id = $("#sponsor-item-modal-title-hash").text();

			var isNewItem = (hash_id == "New Item") ? true : false;

			if (isNewItem){
				hash_id = generateRandomString(8);
				contentData[hash_id] = { _id: hash_id };
			}

			contentData[hash_id].name = $("#sponsor-modal-name").val();
			contentData[hash_id].image = $("#sponsor-modal-img-url").val();
			contentData[hash_id].destination = $("#sponsor-modal-destination-url").val();
			contentData[hash_id].biography = $("#sponsor-modal-biography").val();
			contentData[hash_id].seasons = [];

			// var new_season_item = $('<span style="display:block;background-color:#ccc;padding:5px;margin-bottom:5px;border:1px solid #bbb">' + season_text + '<button class="btn btn-danger float-right" type="button" style="padding:2px 6px;margin:0px;font-size:12px;border-radius:0px;"><i class="fa fa-close"></i></button></span>');
		
			$("#sponsor-modal-seasons-list-div").children().each(function(){
				contentData[hash_id].seasons.push($(this).attr("season"));
			})


			if (!isNewItem){

				var existing_btn = $(content_list_div_selector + " > .manager-item[hash_id='" + hash_id + "']");

				existing_btn.html(contentData[hash_id].name + '<i class="icon-menu" style="position:absolute;left:10px;top:14px"></i>');

			} else {
				var new_button = $('<button hash_id="' + hash_id + '" class="btn btn-primary manager-item" type="button">' + contentData[hash_id].name + '<i class="icon-menu" style="position:absolute;left:10px;top:14px"></i></button>');
				
				$(content_list_div_selector).append(new_button);
				new_button.click(function(){
					modal_SponsorDisplay($(this).attr("hash_id"));
				})
			}

			setSaveState(save_state_key, false);
		}

		$("#sponsor-item-modal").modal("hide");

	})

	$("#sponsor-modal-delete-btn").click(function(){

		if (confirm("Are you sure you want to delete this item?")){

			$("#sponsor-item-modal").modal("hide");

			var hash_id = $("#sponsor-item-modal-title-hash").text();
			delete contentData[hash_id];

			setSaveState(save_state_key, false);

			$(content_list_div_selector + " > .manager-item[hash_id='" + hash_id + "']").remove();

		}

	})

	// SAVE

	function saveSponsorData(){

		$("#saving-modal").modal({backdrop: 'static', keyboard: false});

		var item_collector = {
			added : {},
			modified : {},
			removed : [],
			stable : [],
		}

		var content_Keys = getUniqueArray(Object.keys(contentData).concat(Object.keys(contentData_initial)));

		for (var key_index in content_Keys){

			let key = content_Keys[key_index];

			if (contentData[key] && contentData_initial[key] == null){

				item_collector.added[key] = contentData[key];

			} else if (contentData_initial[key] && contentData[key] == null){

				item_collector.removed.push(key);

			} else if (compareObjects(contentData[key], contentData_initial[key]) == false){

				item_collector.modified[key] = contentData[key];

			} else {

				item_collector.stable.push(key);

			}
		}

		console.log(item_collector);

		/*
			The best practice is to sent one request with the new, modified, and deleted content.
		*/

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/sponsors",
			type: "POST",
			crossDomain: true,

			data: {
				osis : osis,
				token: token,
				_added 		: item_collector.added,
				_modified 	: item_collector.modified,
				_deleted 	: item_collector.removed
			},

			success: function (data, state, response) {

				console.log("Successfully updated SPONSORS data!");

			},

			error: function (data, state, response) {

				console.log("Failed to update SPONSORS data", data, state, response);
				alert("An error occurred when saving the Sponsors data. Try again?");

			},


			complete: function(){

				setSaveState(save_state_key, true);

				setTimeout(function() {
					$("#saving-modal").modal("hide");
				}, 1000);

			}

		})

	}

	loadSponsorData();

}


// ------// Handle Resources
// ------//------------------------------------------------------------- //

function handleWebsiteManager_Resources(){

	// Constants

	var content_reload_btn = $("#resource-item-list-reload");
	var content_save_btn = $("#resource-item-list-save");

	var content_list_div_selector = "#manage-resources-list";
	var content_list_add_btn = $("#resource-item-list-add-btn");

	var content_modal_proceed_btn = $("#resource-modal-proceed-btn");

	var save_state_key = "resources";


	// Content Array Map
	var contentData_initial;
	var contentData;

	// Handler Init

	content_save_btn.click(saveResourceData);

	content_reload_btn.click(function(){
		if ((save_states[save_state_key] != false) || ((save_states[save_state_key] == false) && (confirm("You have unsaved changes. Are you should you would like to reload this content and throw away your changes?")))){
			loadResourceData();
		}
	})

	content_list_add_btn.click(function(){
		modal_ResourceDisplay(null);
	})

	/*
	new Sortable( $("#manage-resources-list")[0] , {

		handle : ".icon-menu",
		draggable: ".manager-item",
		animation: 150,

		onUpdate: function(){
			// Order was changed
			setSaveState(save_state_key, false);
			$.each( $("#manage-resources-list").find(".manager-item"), function(index, item){
				contentData[$(item).attr("hash_id")].order = index;
			});
		}
	})
	*/

	function loadResourceData(){

		content_reload_btn.prop("disabled", true);
		content_save_btn.prop("disabled", true);
		content_list_add_btn.prop("disabled", true);

		console.log("Loading resource data");

		$(content_list_div_selector + " > .manager-item").remove();

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/resources",
			type: "GET",
			crossDomain: true,

			success: function (data, state, response) {

				var contentDataArray = data.payload;

				console.log("Arrived content", contentDataArray);

				fallbackAJAX(contentDataArray);

			},

			error: function (data, state, response) {

				console.log("Failed to fetch Resources Data", data, state, response);

				fallbackAJAX();

			},


			complete: function(){

				content_reload_btn.prop("disabled", false);
				content_save_btn.prop("disabled", false);
				content_list_add_btn.prop("disabled", false);

			}

		})

		function fallbackAJAX(contentDataArray){

			if (contentDataArray == null){
				contentDataArray = [
					{
						_id: "1",
						name : "AMSCO",
						biography : "I would walk one thousand miles",
						image : "yeet.jpg",
						destination : "www.notyeet.com",
						seasons : []
					}, {
						_id: "2",
						name : "LEVEL",
						biography : "a biography",
						image : "beetsqueet.jpg",
						destination : "www.maybeyeet.com",
						seasons : ["2017 - 2018 Season"]
					}, {
						_id: "3",
						name : "LEGO",
						biography : "And I would walk one thousand more",
						image : "beetyeet.jpg",
						destination : "www.yesyeet.com",
						seasons : []
					},
				];
			}

			contentData = {};

			for (let i = 0; i < contentDataArray.length; i++){

				$(content_list_div_selector).append($('<button hash_id="' + contentDataArray[i]._id + '" class="btn btn-primary manager-item" type="button">' + contentDataArray[i].name + '<span class="manager-item-id">' + contentDataArray[i]._id + '</span></button>'));

				contentData[contentDataArray[i]._id] = contentDataArray[i];
			}

			contentData_initial = JSON.parse(JSON.stringify(contentData));

			$(content_list_div_selector + " > .manager-item").click(function(){
				modal_ResourceDisplay($(this).attr("hash_id"));
			})

			setSaveState(save_state_key, true);

		}

	}


	// HANDLING MODAL

	var cached_modal_content;

	function modal_ResourceDisplay(hash_id){

		$("#resource-item-modal-title").text((hash_id ? "Manage" : "Add") + " Resource Item");
		$("#resource-item-modal-title-hash").text(hash_id ? hash_id : "New Item");

		$("#resource-modal-seasons-list-div").empty();

		if (hash_id){

			// Load selected item

			var resourceItem = contentData[hash_id];

			$("#resource-modal-name").val(resourceItem.name);
			$("#resource-modal-img-url").val(resourceItem.image);
			$("#resource-modal-destination-url").val(resourceItem.destination);
			$("#resource-modal-biography").val(resourceItem.biography);

			console.log("SEASONS", resourceItem.seasons);

			for (let season_index = 0; season_index < resourceItem.seasons.length; season_index++){

				var season_text = resourceItem.seasons[season_index];

				var new_season_item = $('<span style="display:block;background-color:#ccc;padding:5px;margin-bottom:5px;border:1px solid #bbb" class="cache-check" >' + season_text + '<button class="btn btn-danger float-right" type="button" style="padding:2px 6px;margin:0px;font-size:12px;border-radius:0px;"><i class="fa fa-close"></i></button></span>');
			
				$("#resource-modal-seasons-list-div").append(new_season_item);
				
				new_season_item.find("button").click(function(){
					new_season_item.remove();
				})

			}

			content_modal_proceed_btn.html('Confirm Edit<i class="fa fa-pencil" style="margin-left:6px;"></i>');
			$("#resource-modal-delete-btn").show();

		} else {

			// Default all values

			$("#resource-modal-name").val("");
			$("#resource-modal-img-url").val("");
			$("#resource-modal-destination-url").val("");
			$("#resource-modal-biography").val("");

			content_modal_proceed_btn.html('Add Resource<i class="fa fa-plus" style="margin-left:6px;"></i>');
			$("#resource-modal-delete-btn").hide();

		}

		cached_modal_content = getCacheRecord($("#resource-item-modal"));
		
		$("#resource-item-modal").modal();

	}

	// Modal controls

	$("#resource-modal-season-select").empty();
	for (var year = new Date().getFullYear(); year >= 2014; year--){
		$("#resource-modal-season-select").append($("<option></option>").attr("value", year).text((year - 1) + " - " + year + " Season"));
	}

	$("#resource-modal-season-add-btn").click(function(){

		var season_text = $("#resource-modal-season-select option:selected").text();

		if ($("#resource-modal-seasons-list-div span:contains('" +season_text + "')").length != 0){
			alert("Season Item already added to list");
			return;
		}
		
		var new_season_item = $('<span style="display:block;background-color:#ccc;padding:5px;margin-bottom:5px;border:1px solid #bbb" class="cache-check">' + season_text + '<button class="btn btn-danger float-right" type="button" style="padding:2px 6px;margin:0px;font-size:12px;border-radius:0px;"><i class="fa fa-close"></i></button></span>');
		
		$("#resource-modal-seasons-list-div").append(new_season_item);
		
		new_season_item.find("button").click(function(){
			new_season_item.remove();
		})
	})

	content_modal_proceed_btn.click(function(){

		var comparison = compareObjects(getCacheRecord($("#resource-item-modal")), cached_modal_content);

		if (comparison == false){

			// Verify important data
			
			if ($("#resource-modal-name").val().replace(/ /g, "") == ""){
				alert("Cannot leave Name field blank.");
				$("#resource-modal-name").focus();
				return;
			}

			// <TODO>
			// Must be at least one SEASON associated with this resource

			/*
				Record change done to object
			*/

			var hash_id = $("#resource-item-modal-title-hash").text();

			var isNewItem = (hash_id == "New Item") ? true : false;

			if (isNewItem){
				hash_id = generateRandomString(8);
				contentData[hash_id] = { _id: hash_id };
			}

			contentData[hash_id].name = $("#resource-modal-name").val();
			contentData[hash_id].image = $("#resource-modal-img-url").val();
			contentData[hash_id].destination = $("#resource-modal-destination-url").val();
			contentData[hash_id].biography = $("#resource-modal-biography").val();

			if (!isNewItem){

				var existing_btn = $(content_list_div_selector + " > .manager-item[hash_id='" + hash_id + "']");

				existing_btn.html(contentData[hash_id].name + '<i class="icon-menu" style="position:absolute;left:10px;top:14px"></i>');

			} else {
				var new_button = $('<button hash_id="' + hash_id + '" class="btn btn-primary manager-item" type="button">' + contentData[hash_id].name + '<i class="icon-menu" style="position:absolute;left:10px;top:14px"></i></button>');
				
				$(content_list_div_selector).append(new_button);
				new_button.click(function(){
					modal_ResourceDisplay($(this).attr("hash_id"));
				})
			}

			setSaveState(save_state_key, false);
		}

		$("#resource-item-modal").modal("hide");

	})

	$("#resource-modal-delete-btn").click(function(){

		if (confirm("Are you sure you want to delete this item?")){

			$("#resource-item-modal").modal("hide");

			var hash_id = $("#resource-item-modal-title-hash").text();
			delete contentData[hash_id];

			setSaveState(save_state_key, false);

			$(content_list_div_selector + " > .manager-item[hash_id='" + hash_id + "']").remove();

		}

	})

	// SAVE

	function saveResourceData(){

		$("#saving-modal").modal({backdrop: 'static', keyboard: false});

		var item_collector = {
			added : {},
			modified : {},
			removed : [],
			stable : [],
		}

		var content_Keys = getUniqueArray(Object.keys(contentData).concat(Object.keys(contentData_initial)));

		for (var key_index in content_Keys){

			let key = content_Keys[key_index];

			if (contentData[key] && contentData_initial[key] == null){

				item_collector.added[key] = contentData[key];

			} else if (contentData_initial[key] && contentData[key] == null){

				item_collector.removed.push(key);

			} else if (compareObjects(contentData[key], contentData_initial[key]) == false){

				item_collector.modified[key] = contentData[key];

			} else {

				item_collector.stable.push(key);

			}
		}

		console.log(item_collector);

		/*
			The best practice is to sent one request with the new, modified, and deleted content.
		*/

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/resources",
			type: "POST",
			crossDomain: true,

			data: {
				osis : osis,
				token: token,
				_added 		: item_collector.added,
				_modified 	: item_collector.modified,
				_deleted 	: item_collector.removed
			},

			success: function (data, state, response) {

				console.log("Successfully updated SPONSORS data!");

			},

			error: function (data, state, response) {

				console.log("Failed to update SPONSORS data", data, state, response);
				alert("An error occurred when saving the Resources data. Try again?");

			},


			complete: function(){

				setSaveState(save_state_key, true);

				setTimeout(function() {
					$("#saving-modal").modal("hide");
				}, 1000);

			}

		})

	}

	loadResourceData();

}

// Helper Methods
// ========================================================================================================= //


function getCacheRecord(master_item){

	var inputValues = {};

	master_item.find("input, select, textarea, .cache-check").not(".ignore-cache-check").each(function(index, item){
		inputValues[index] = $(item).hasClass("cache-check") ? $(item).text() : $(item).val();
	});

	console.log(inputValues);

	return inputValues;

}

function compareObjects(obj1, obj2){

	if ((obj1 == null) && (obj2 == null)){
		return true;
	} else if ( ((obj1 == null) || (obj2 == null)) && (obj1 !== obj2) ){
		return false;
	}

	var master_keys = getUniqueArray(Object.keys(obj1).concat(Object.keys(obj2)));
	for (key in master_keys){

		var value_1 = obj1[master_keys[key]];
		var value_2 = obj2[master_keys[key]];

		if (typeof value_1 == "object" && typeof value_2 == "object"){
			if (compareObjects(value_1, value_2) == false){
				return false;
			}
		} else if (value_1 != value_2) {
			return false;
		}
	}

	return true;

}

// Remove duplicate items from an array
function getUniqueArray(array){
    var a = array.concat();
    for(var i=0; i<a.length; ++i) {
        for(var j=i+1; j<a.length; ++j) {
            if(a[i] === a[j])
                a.splice(j--, 1);
        }
    }

    return a;
};

// Generate random string
function generateRandomString(length) {
	length = length ? length : 8;
	var text = "";
	var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
	for(var i = 0; i < length; i++) {
		text += possible.charAt(Math.floor(Math.random() * possible.length));
	}
	return text;
}

// Main.js

// Configuration
// ========================================================================================================= //


let BS_breakpoint_MD = 768; // BootStrap's MD Breakpoint

var user_data;

$(document).ready(function(){
	
	// Handle in order of priority

	var currentPage = getPage();

	console.log("Current Page: ", currentPage);

	handleNavbar(currentPage);
	handleThemeManager();

	switch(currentPage){

		// Account Management
		case "account":
			handleAccountPage();
			break;
		case "signin":
			handleSignInPage();
			break;
		case "signup":
			handleSignUpPage();
			break;
		case "verify":
			handleVerificationPage();
			break;

		// Website Displays
		case "robots":
			handleRobotsPage();
			break;
		case "team":
			handleTeamPage();
			break;
		case "contact":
			handleContactPage();
			break;
		case "sponsors":
			handleSponsorsPage();
			break;

		case "resources":
			handleResourcesPage();
			break;
		case "projects":
			handleProjectsPage();
			break;

		case "countdowntimer":
			handleCountdownPage();
			break;
		default:
			handleGeneric();
	}

	handleTwitchBanner();
	handleNewsletter();
	handleSponsorModal();


	// ACCOUNT AUTHENTICATION

	// Sign in Status on Navbar and Footer
	getSignInStatus(function(){
		// User is signed in
		$(".dashboard-goto").html('My Dashboard<i class="fas fa-home" style="margin-left:6px;font-size:12px"></i><img src="Icons/SubLogo_Blue_Block_1024x1024.png" class="navbar-account-image" />')
		$(".dashboard-goto-footer-outer").html('<a href="#" class="dashboard-goto-footer">My Dashboard<i class="fas fa-home" style="margin-left:6px;font-size:12px"></i></a>');
		$(".dashboard-sign-out-outer").show();
		$(".dashboard-goto, .dashboard-goto-footer").attr("href", "/Account.html");
	}, function(){
		// User not signed in
		$(".dashboard-goto").html('Sign In<i class="fas fa-sign-in-alt" style="margin-left:6px;font-size:12px"></i><img src="Icons/SubLogo_Blue_Block_1024x1024.png" class="navbar-account-image" style="display:none;" />');
		$(".dashboard-goto-footer-outer").html('<a href="#" class="dashboard-goto-footer">Sign In<i class="fas fa-sign-in-alt" style="margin-left:6px;font-size:12px"></i></a>');
		$(".dashboard-sign-out-outer").hide();
		$(".dashboard-goto, .dashboard-goto-footer").attr("href", "/SignIn.html");
	})

	$(".dashboard-goto, .dashboard-goto-footer").click(function(){
		getSignInStatus(function(){
			// Redirect to Account
			goToPage("Account.html");
		}, function(){
			// Redirect to Login
			goToPage("SignIn.html");
		})
	})

	$(".dashboard-sign-out").click(function(e){
		e.preventDefault();
		signOut();
		return false;
	})

	// SOCIAL BUTTONS

	let social_urls = {
		"Facebook" : "https://www.facebook.com/team5599sentinels/",
		"Twitter" : "https://twitter.com/Sentinels5599",
		"Instagram" : "https://www.instagram.com/sentinels_5599/",
		"YouTube" : "https://www.youtube.com/channel/UCALF3caI0F4WJfJisLFSBWQ"
	}

	$(".social-url.social-facebook, .social-url.social-instagram, .social-url.social-twitter, .social-url.social-youtube").attr("target", "blank");
	
	$(".social-url.social-facebook").attr("href", social_urls.Facebook);
	$(".social-url.social-instagram").attr("href", social_urls.Instagram);
	$(".social-url.social-twitter").attr("href", social_urls.Twitter);
	$(".social-url.social-youtube").attr("href", social_urls.YouTube);
	
});

$(window).on("resize", function(){
	configureSliders();
});

// Navbar
// ========================================================================================================= //

function handleNavbar(currentPage){

	scrollUpdate();
	
	$(".nav-item.dropdown").hover(function(){
		if ($(window).width() >= BS_breakpoint_MD){
			$(this).addClass("show");
			$(this).find(".dropdown-menu").addClass("show");
		}
	}, function(){
		if ($(window).width() >= BS_breakpoint_MD){
			$(this).removeClass("show");
			$(this).find(".dropdown-menu").removeClass("show");
		}
	})

	$(".nav-link.active").removeClass("active");
	switch(currentPage){

		// COMMUNITY
		case "projects":
		case "socialmedia":
			console.log("COMMUNITY");
			$(".nav-link#nav-community").addClass("active");
			break;

		// TEAM
		case "account":
		case "signin":
		case "signup":
		case "verify":
		case "database":
		case "calendar":
		case "security":
			console.log("TEAM");
			$(".nav-link#nav-team").addClass("active");
			break;

		// COMMUNITY-TEAM HYRBID
		case "resources":
			console.log("HYRBID");
			$(".nav-link#nav-community, .nav-link#nav-team").addClass("active");
			break;

		// SPONSORS
		case "sponsors":
		case "incentives":
			console.log("SPONSORS");
			$(".nav-link#nav-sponsors").addClass("active");
			break;

		// CONTACT
		case "contact":
			console.log("CONTACT");
			$(".nav-link#nav-contact").addClass("active");
			break;

		// ABOUT
		case "":
		case "home":
		case "index":
		case "team":
		case "robots":
		case "competitions":
			console.log("HOME");
			$(".nav-link#nav-home").addClass("active");
			break;

		// DEFAULT
		default :
			console.log("DEFAULT");
			break;
			
	}

}

$(window).bind("scroll", scrollUpdate);


function scrollUpdate(){

	var window_position_y = $(window).scrollTop();
	var navbarOpacity = ($(window).width() > BS_breakpoint_MD) ? (window_position_y / 50) : 1
	
	if (navbarOpacity > 0.3){
		$(".navbar").addClass("navbar-dropshadow")
	} else {
	   $(".navbar").removeClass("navbar-dropshadow") 
	}

	$('.navbar').css('background-color', 'rgba(33,33,33,' + navbarOpacity + ')');
	$('.NavButton').css('background-color', 'rgba(33,33,33,' + navbarOpacity + ')');

}

// Twitch Banner
function handleTwitchBanner(){
	$.ajax({

		url: "https://api.twitch.tv/kraken/streams/team5599_thesentinels",
		dataType: 'json',
		crossDomain : true,

		headers: {
			'Client-ID': 'qd2a6znhhe3b2pw4i5xp3aspxzwueo'
		},

		success: function(channel) {
			if (channel["stream"] == null) {
				$(".twitch-banner").hide();
			} else {
				console.log("We're live on Twitch!");
				$(".twitch-banner").show();
			}
		}
	});
}

// Newsletter
function handleNewsletter(){

	if ($("#newsletter").length){

		$("#newsletter").find("button").click(function(){

			var input_email = $("#newsletter").find("input").val();

			if (input_email.replace(/ /g, "") == ""){
				alert("Please enter an email.");
			} else {

				$("#newsletter-p").text("An email is being sent to " + input_email + " . . .");
				$("#newsletter-modal").modal();

				// <TODO>
				// AJAX Post to emailer

				$.ajax({

					url: "https://bnchs-robotics-website-server.glitch.me/api/subscribe",
					type: "POST",
					crossDomain: true,

					data: {},

					success: function (data, state, response) {
						$("#newsletter-p").text("An email was successfully sent to " + input_email + "!");
					},

					error: function (xhr) {

						console.log("An error occurred when subscribing to the newsletter.", xhr);
						$("#newsletter-p").text("An error occurred - no email was sent. Our servers may be unavailable. Consider trying again later?");

					},


				})

			}
			
		})
	}
}

// Sponsor Modal
function handleSponsorModal(){

	var sponsorModal = $("#sponsor-modal");

	if (sponsorModal.length == 0){

		sponsorModal = $('\
			<div role="dialog" tabindex="-1" class="modal fade" id="sponsor-modal">\
			    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">\
			        <div class="modal-content">\
			            <div class="modal-header text-center"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button></div>\
			            <div class="modal-body text-center"><a class="btn btn-outline-primary btn-block btn-lg" role="button" href="https://bnchs.ed.co/the-sentinels" target="_blank" style="padding-top: 30px;padding-bottom: 30px;font-size:16px;position:relative;">If you would like to make a <strong><em>monetary donation</em></strong>, you can click here to head over to our EdCo fundraising page.<br /><i class="fa fa-dollar" style="position:absolute;right:10px;bottom:10px;"></i></a>\
			                <a\
			                    class="btn btn-outline-primary btn-block btn-lg" role="button" href="Contact.html" style="padding: 30px;padding-bottom: 30px;font-size:16px;position:relative;">To form a<strong><em> partnership</em></strong> or make a <strong><em>physical donation</em></strong>, click here to head over to our Contact Us page where you can reach out to our Lead Mentor &amp; Marketing Team.<i class="fa fa-gift"\
			                        style="position:absolute;right:10px;bottom:10px;"></i></a>\
			                    <h3 class="display-4 modal-title text-center" style="font-family: \'Allura\';margin: 20px;margin-bottom: 0px;">Thank you for your time</h3>\
			            </div>\
			            <div class="modal-footer"><button class="btn btn-light btn-block" type="button" data-dismiss="modal">Close</button></div>\
			        </div>\
			    </div>\
			</div>\
		');
		sponsorModal.appendTo($("body"));
	}

}

// Theme Manager
// ========================================================================================================= //

function handleThemeManager(){

	$("body").addClass("t--light");
	
	function setDefaultTheme(){
		$(".t--dark").each(function(){
			$(this).removeClass("t--dark");
			$(this).addClass("t--light");
		})
		document.cookie = "darkTheme=false;";
	}
	
	function setDarkTheme(){
		$(".t--light").each
		(function(){
			$(this).removeClass("t--light");
			$(this).addClass("t--dark");
		})
		document.cookie = "darkTheme=true";;
	}
	
	console.log("DarkTheme: ", getCookie("darkTheme"));
	
	if (getCookie("darkTheme") == "true"){
		setDarkTheme();
	}
	
	$("#toggle-contrast").click(function(){
		
		console.log("Modifying Theme");
		
		if ($("body").hasClass("t--dark")){
			setDefaultTheme();
		} else {
			setDarkTheme();
		}      
	   
	})
	
}

// Account Page Managers
// ========================================================================================================= //

// ------// Handle User Account Page
// ------//--------------------------------------------- //

function handleAccountPage(){

	// Get request for { Name, OSIS, Photos [Discord, Facebook] } , Holds [], Permissions [], Authentication [Discord, Facebook]  

	// User

	getSignInStatus(successfulSignIn, function(xhr){
		console.log("User not signed in");
		if (xhr != null && xhr.status !== 403){
			alert("An error occured - the server may be down. Please try again later.\n\nIf you continue to encounter this issue, please send an email to webmaster@team5599.com.");
		}
		signOut();
		return;
	})

	function successfulSignIn(){

		console.log("USERDATA", user_data);

		if (user_data.activated == false){
			signOut(true);
			goToPage("Verify.html?type=reactivate&user=" + response.data.osis + "&email=" + response.data.email);
			return;
		}

		console.log("Successfully signed in");

		$("#accountPage-signOut").click(function(e){
			e.preventDefault();
			signOut();
			return false;
		})

		/*
		var user_data = {
			name : "FIRSTNAME LASTNAME",
			osis : "123456789",
			photos : {
				discord : "",
				facebook : ""
			},
			holds : ["Goggles and Gloves", "Academic Probation"],
			permissions : [],
			activated : true,
			authentication : {
				discord : "",
				facebook : ""
			}

		}
		*/

		$("#account-page-user-info").text(user_data.firstname + " " + user_data.lastname);
		$("#account-page-user-osis").text(user_data.osis);
		$("#breadcrumbs-user").text(user_data.osis);

		var selectedUserPhoto;
		if ("photos" in user_data){
			selectedUserPhoto = (user_data.photos.facebook !== "") ?  user_data.photos.facebook : ((user_data.photos.discord != "") ? user_data.photos.discord : null);
		}
		selectedUserPhoto = (selectedUserPhoto == null) ? "https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/user.png" : selectedUserPhoto;

		$("#account-page-user-photo").attr("src", selectedUserPhoto);

		// <TODO> Sign Out Button

		// Holds

		$(".account-holds-div").empty();

		if (user_data.holds.length == 0){
			$(".account-holds-div").addClass("no-holds");
			$(".account-holds-div").append($('<p class="lead text-monospace text-center text-success account-holds-header">You have no active holds.<i class="fa fa-check-circle-o" style="margin-left:6px;"></i></p>'));
		} else {
			$(".account-holds-div").removeClass("no-holds");
			$(".account-holds-div").append($('<p class="lead text-monospace text-center text-danger account-holds-header">You have the following active hold(s).</p>'));
			user_data.holds.forEach(function(hold){
				$(".account-holds-div").append($('<p class="account-hold-item">' + hold + '</p>'));
			})
		}

		// Unlock buttons based on permissions

		$(".feed-admin-sm").prop("disabled", true);
		$(".feed-admin-sm").addClass("disabled");

		function validateButtonPermission(permission_id, button_selector){
			if ( (user_data.permissions.indexOf("z") != -1) || (user_data.permissions.indexOf(permission_id) != -1)){
				$(button_selector).prop("disabled", false);
				$(button_selector).removeClass("disabled");
			} else {
				$(button_selector).prop("disabled", true);
				$(button_selector).addClass("disabled");
			}
		}

		validateButtonPermission("a", "#action-announcement");
		validateButtonPermission("b", "#action-blog");
		validateButtonPermission("c", "#action-calendar");
		validateButtonPermission("d", "#action-social");
		validateButtonPermission("e", "#action-newsletter");
		validateButtonPermission("f", "#action-website");
		validateButtonPermission("g", "#action-activity");
		validateButtonPermission("h", "#action-accounts");
		validateButtonPermission("z", "#action-permissions");

		// Display connections between Facebook and Discord

		if (user_data.authentication.discord != ""){
			$(".login-btn-discord > .sign-up-verify-discord").hide();
			$(".login-btn-discord").prop("disabled", false);
		} else {
			$(".login-btn-discord > .sign-up-verify-discord").show();
			$(".login-btn-discord").prop("disabled", true);
		}

		if (user_data.authentication.facebook != ""){
			$(".login-btn-facebook > .sign-up-verify-fb").hide();
			$(".login-btn-facebook").prop("disabled", false);
		} else {
			$(".login-btn-facebook > .sign-up-verify-fb").show();
			$(".login-btn-facebook").prop("disabled", true);
		}

		// Attendance Feature

		$("#attendance-modal-select").empty();
		for (var year = new Date().getFullYear(); year >= 2014; year--){
			$("#attendance-modal-select").append($("<option></option>").attr("value", year).text((year - 1) + " - " + year + " Season"));
		}
		$("#attendance-modal-select").val(new Date().getFullYear());

		var current_attendance_data;

		function getAttendanceData(){

			var season = $("#attendance-modal-select").val();

			// AJAX call to get attendance
			var attendance_data = {
				"5/1/2014" : "P",
				"5/2/2014" : "P",
				"5/3/2014" : "A",
				"5/4/2014" : "P",
				"5/5/2014" : "E",
				"5/6/2014" : "P",
				"5/7/2014" : "P",
				"5/8/2014" : "A",
				"5/9/2014" : "P",
				"5/10/2014" : "E",
				"5/11/2014" : "P",
				"5/12/2014" : "P",
				"5/13/2014" : "A",
				"5/14/2014" : "P",
				"5/15/2014" : "E",
				"6/1/2014" : "P",
				"6/2/2014" : "P",
				"6/3/2014" : "A",
				"6/4/2014" : "P",
				"6/5/2014" : "E",
				"6/6/2014" : "P",
				"6/7/2014" : "P",
				"6/8/2014" : "A",
				"6/9/2014" : "P",
				"6/10/2014" : "E",
				"6/11/2014" : "P",
				"6/12/2014" : "P",
				"6/13/2014" : "A",
				"6/14/2014" : "P",
				"6/15/2014" : "E",
				"7/1/2014" : "P",
				"7/2/2014" : "P",
				"7/3/2014" : "A",
				"7/4/2014" : "P",
				"7/5/2014" : "E",
				"7/6/2014" : "P",
				"7/7/2014" : "P",
				"7/8/2014" : "A",
				"7/9/2014" : "P",
				"7/10/2014" : "E",
				"7/11/2014" : "P",
				"7/12/2014" : "P",
				"7/13/2014" : "A",
				"7/14/2014" : "P",
				"7/15/2014" : "E",
			}

			$("#attendance-table tbody").empty();

			var attendance_color_map = {
				"P" : "#b7e1cd",
				"A" : "#ea9999",
				"E" : "#a4c2f4"
			}

			var attendance_counter = {
				"P": 0,
				"A": 0,
				"E": 0,
				date : new Date()
			}


			Object.keys(attendance_data).forEach(function(date){
				$("#attendance-table tbody").append($('<tr><td>' + date + '</td><td style="background-color:' + attendance_color_map[attendance_data[date].toUpperCase()] + ';">' + attendance_data[date] + '</td></tr>'));
				attendance_counter[attendance_data[date].toUpperCase()] = attendance_counter[attendance_data[date].toUpperCase()] + 1;
			})

			current_attendance_data = attendance_counter;
			return attendance_counter;

		}

		$("#attendance-modal-select").change(getAttendanceData);

		$("#attendance-modal-trigger").click(function(){

			getAttendanceData();
			$("#attendance-modal").modal();

		})

		$("#attendance-modal-print-btn").click(function(){

			var season = $("#attendance-modal-select").val();

			var print_div = $('<div class="bg-white" style="min-width:1240px;width:100%;height:100%;color:#000;"></div>');

			print_div.append($('<img style="position:absolute;left:0;top:0;" src="https://i.imgur.com/VGEf0V7.png" width="120" height="120">'));

			print_div.append($('<h2 class="text-center">Attendance Data</h2>'));
			print_div.append($('<h4 class="text-center">' + (season - 1) + ' - ' + season + ' Season</h4><br>'));
			print_div.append($('<h3 class="text-center">' + user_data.name + '</h3>'));
			print_div.append($('<p class="text-center" style="margin:0px">[ID : <em>' + user_data.osis + ' </em>]</p><br>'));
			print_div.append($('<p class="text-center">Present: <b>' + current_attendance_data.P + '</b> | Absent: <b>' + current_attendance_data.E + '</b> | Excused: <b>' + current_attendance_data.E + '</b> | Total: <b>' + (current_attendance_data.P + current_attendance_data.E + current_attendance_data.A) + '</b></p>'));
			print_div.append($('<p class="text-right"><em>Report generated on ' + current_attendance_data.date + '</em></p>'));
			print_div.append($("#attendance-table").clone().addClass("print-super-size"));

			print_div.imagesLoaded().always(function(){
				printElement(print_div[0]);
				window.print();
			})
				
		})

		// Modal actions


		// AJAX
		/*
		$.ajax({

			url: "https://secret-santa-sorter.glitch.me/api",
			type: "POST",

			data: {},

			success: function (data, state, response) {

				
			},

			error: function (data, state, response) {

			}

		})
		
		*/

		$("#account-page").show();
		$("#account-loading").hide();

	}

}


// ------// Handle Sign In Page
// ------//--------------------------------------------- //

function handleSignInPage(){

	getSignInStatus(function(){
		// Redirect to account
		goToPage("Account.html");
	}, function(){

		var isForgot = getUrlParameter("forgot");
		if (isForgot == "true"){
			$("#form-forgot").show();
			$("#form-signin").hide();
		} else {
			$("#form-forgot").hide();
			$("#form-signin").show();
		}

		
		$(".signing-error").hide();

		$("#account-sign-in").click(function(e){

			e.preventDefault();

			// Disable button
			$("#account-sign-in").prop("disable", true);

			var username = $("#input-username").val();
			var password = $("#input-password").val();
			var keep_device = $("#keep-device").val();

			// Client pre-sanitization

			if (username.replace(/ /g, "") == ""){
				failSignIn("Invalid OSIS or Email");
				return;
			}

			if (password.replace(/ /g, "") == ""){
				failSignIn("Invalid Password");
				return;
			}

			$.ajax({

				url: "https://bnchs-robotics-website-server.glitch.me/api/signin",
				type: "POST",
				crossDomain : true,

				data: {user_identifier : username, password : password, keep_device : keep_device},

				success: function (data, state, response) {

					// Check activation status
					console.log("data: ", data);
					console.log("resp: ", response);
					if (data.data.activated == false){
						failSignIn("Your account has not yet been activated.\n\nAn email was sent to " + response.data.email + ". Check your Spam folders if you cannot find this activation email.");
						goToPage("Verify.html?type=reactivate&user=" + response.data.osis + "&email=" + response.data.email);
						return;
					} else {
						// Redirect to Account

						if ("cookies" in data){
							document.cookie = "osis=" + data.cookies.osis + ";";
							document.cookie = "token=" + data.cookies.token + ";";
						}

						var osis = getCookie("osis");
						var token = getCookie("token");

						goToPage("Account.html");
					}

				},

				error: function(xhr) {

					if (xhr.status == 404 || xhr.status == 400){
						failSignIn(xhr.responseJSON.message);
						return;
					} else {
						console.log("An error occurred when attempting to sign in.", xhr);
						console.log("JSONR ", xhr.responseJSON);
						failSignIn("An error occured - the server may be down. Please try again later.\n\nIf you continue to encounter this issue, please send an email to webmaster@team5599.com.");
					}


				}

			})

			return false;

		})

		function failSignIn(reason){
			$(".signing-error").text(reason);
			$(".signing-error").show();
			$("#account-sign-in").prop("disable", false);
		}

		// <TODO>
		// Facebook and Discord Sign In


		// Toggle swap between SIGN IN and FORGOT forms
		$("#sign-in-forgot-btn").click(function(){
			$("#form-forgot").show();
			$("#form-signin").hide();
			$("#error-forgot").hide();
			$("#form-forgot-button").prop("disable", false);
		})

		$("#form-forgot-return-signin").click(function(){
			$("#form-forgot").hide();
			$("#form-signin").show();
		})


		$("#form-forgot-button").click(function(e){

			e.preventDefault();

			$("#form-forgot-button").prop("disable", true);

			var osis = $("#forgot-osis").val();
			var email = $("#forgot-email").val();

			if (osis.replace(/ /g, "") == "" && email.replace(/ /g, "") == ""){
				failReset("You must enter either your OSIS or your email address.");
				return;
			}

			$.ajax({

				url: "https://bnchs-robotics-website-server.glitch.me/api/forgot",
				type: "POST",
				crossDomain : true,

				data: {osis : osis, email : email},

				success: function (data, state, response) {

					$("#error-forget").text("An email to reset your password has been sent to " + data.email + ".\n\nPlease follow its instructions on resetting your password.");
					$("#error-forgot").show();
					$("#form-forgot-button").prop("disable", true);
		
				},

				error: function (xhr) {

					if (xhr.status == 404 || xhr.status == 400){
						failReset(xhr.responseJSON.message);
					} else {
						console.log("An error occurred when attempting to password reset.", xhr);
						failReset("An error occured - The server may be down. Please try again later.\n\nIf you continue to encouner this issue, send an email out to webmaster@team5599.com.");
					}

				}

			})

			return false;

		})

		function failReset(reason){
			$("#error-forget").text(reason);
			$("#error-forgot").show();
			$("#form-forgot-button").prop("disable", false);
		}

	})
	
}


// ------// Handle Sign Up Page
// ------//--------------------------------------------- //

function handleSignUpPage(){

	getSignInStatus(function(){
		// Redirect to account
		goToPage("Account.html");
	}, function(){

		$("#form-activate").hide();
		$("#form-register").show();
		$(".signing-error").hide();

		$("#account-create").click(function(e){

			e.preventDefault();

			// Disable button
			$("#account-create").prop("disable", true);

			$(".signing-error").hide();

			var email = $("#acc-email").val();

			var password = $("#acc-pw").val();
			var password_re = $("#acc-pw-re").val();

			var first_name = $("#acc-fn").val();
			var last_name = $("#acc-ln").val();

			var osis = $("#acc-osis").val();
			var osis_re = $("#acc-osis-re").val();

			// <TODO>
			// Facebook/Discord Linking

			// Client pre-sanitization

			if ((email.replace(/ /g, "") == "") || (validateEmail(email) == false)){
				failSignUp("Invalid Email Address.");
				return;
			}

			if (password.replace(/ /g, "") == ""){
				failSignUp("Invalid Password.");
				return;
			}

			if (password != password_re){
				failSignUp("Passwords do not match.");
				return;
			}

			if (first_name.replace(/ /g, "") == ""){
				failSignUp("Invalid First Name.");
				return;
			}

			if (last_name.replace(/ /g, "") == ""){
				failSignUp("Invalid Last Name.");
				return;
			}

			if (osis.replace(/ /g, "") == ""){
				failSignUp("Invalid Student ID.");
				return;
			}

			if (osis != osis_re){
				failSignUp("Student IDs do not match.");
				return;
			}

			$.ajax({

				url: "https://bnchs-robotics-website-server.glitch.me/api/register",
				type: "POST",
				crossDomain: true,

				data: {

					email: email,

					password : password,
					password_re : password_re,

					firstname : first_name,
					lastname : last_name,

					osis: osis,
					osis_re : osis_re

				},

				success: function (data, state, response) {

					// Display activation page

					$("#activation_msg").text("An activation email was sent to " + email + ".\n\nYou must activate your account before you can login. Check your Spam folder if you are unable to find the email.");
					$("#form-activate").show();
					$("#form-register").hide();
	
				},

				error: function (xhr) {

					if (xhr.status == 400 || xhr.status == 409){
						failSignUp(xhr.responseJSON.message);
					} else {
						failSignUp("An error occured - the server may be down. Please try again later.\n\nIf you continue to encounter this issue, please send an email to webmaster@team5599.com.");
			
					}

				}

			})

			return false;

		})

		function failSignUp(reason){
			$(".signing-error").text(reason);
			$(".signing-error").show();
			$("#account-create").prop("disable", false);
		}

	})

	function validateEmail(email) {
		var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
		return re.test(String(email).toLowerCase());
	}
	
}

// ------// Handle Verification Page
// ------//--------------------------------------------- //

function handleVerificationPage(){

	var verification_type = getUrlParameter("type");

	var user = getUrlParameter("user");
	var authentication_token = getUrlParameter("token");

	console.log("Auth token:", authentication_token);

	$("#form-activate, #form-reactivate").hide();
	$("#form-reset, #form-reset-completed").hide();
	$("#info_message_r, #info_message_a, #info_message_ra").hide();

	if (verification_type == "activate"){
		$("#form-activate").show();
	} else if (verification_type == "reset"){
		$("#form-reset").show();
	} else if (verification_type == "reactivate"){
		$("#form-reactivate").show();
	} else {
		alert("An error has occurred- you may have ended up on this page by mistake. Please contact detailing webmaster@team5599.com with how you got here. If you are trying to activate your account or reset your password, please make sure you have copied the activation URL fully.");
	}

	function issueMessage(message){
		$("#info_message_r, #info_message_a, #info_message_ra").text(message);
		$("#info_message_r, #info_message_a, #info_message_ra").show();
	}

	if (user == null || user.replace(/ /g, "") == ""){
		issueMessage("Failed to activate. Could not find a userID in the activation URL. Did you copy it properly?");
		return;
	}

	if ((verification_type != "reactivate") && (authentication_token == null || authentication_token.replace(/ /g, "") == "")){
		issueMessage("Failed to activate. Could not find an authentication token in the activation URL. Did you copy it properly?");
		return;
	}

	if (verification_type == "activate"){

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/verify",
			type: "POST",
			crossDomain: true,

			data: {osis: user, activationKey : authentication_token},

			success: function (data, state, response) {

				// Successfully authenticated user
				$("#activate-go-to-dashboard").show();
				issueMessage("Your account has been successfully activated, you will be redirected to login shortly.");
				signOut(true);

			},

			error: function (xhr) {

				if (xhr.status == 404 || xhr.status == 400){
					issueMessage(xhr.responseJSON.message);
				} else {
					issueMessage("An error occured - the server may be down. Please try again later.\n\nIf you continue to encounter this issue, please send an email to webmaster@team5599.com.");
				}

			}

		})
	} else if (verification_type == "reactivate"){

		$("#resend-activation").click(function(e){

			e.preventDefault();

			$("#resend-activation").attr("disabled", true);
			$("#info_message_ra").hide();

			var email = getUrlParameter("email");

			if (email == null || email.replace(/ /g, "") == ""){
				issueMessage("Failed to send reactivation email. Could not find an email address in the redirection URL.");
				return;
			}

			$("#info_message_ra_em").text("Your account has not been activated.\n\nPlease check " + email + " for an email from accounts@team599.com.\n\nBe sure to check your spam folder.")

			$.ajax({

				url: "https://bnchs-robotics-website-server.glitch.me/api/register/resend_activation",
				type: "POST",
				crossDomain: true,

				data: {osis: user, email: email},

				success: function (data, state, response) {

					// Successfully authenticated user
					issueMessage("An email was sent to " + data.email);

				},

				error: function (xhr) {

					if (xhr.status == 404 || xhr.status == 400 || xhr.status == 409){
						issueMessage(xhr.responseJSON.message);
					} else {
						issueMessage("An error occured - the server may be down. Please try again later.\n\nIf you continue to encounter this issue, please send an email to webmaster@team5599.com.");
					}

				}

			})

			return false;

		})

	} else if (verification_type == "reset"){

		$("#reset_pointer").text("Enter a new password for the account " + user);

		$("#form-reset-button").click(function(e){

			e.preventDefault();

			$("#form-reset-button").attr("disabled", true);

			var pwd 	= $("#pwd").val();
			var pwd_re 	= $("#pwd-re").val();

			if (pwd.replace(/ /g, "") == ""){
				issueMessage("You must enter a new password.");
				$("#form-reset-button").removeAttr("disabled");
				return;
			}

			if (pwd !== pwd_re){
				issueMessage("Passwords do not match.");
				$("#form-reset-button").removeAttr("disabled");
				return;
			}

			// Ajax to reset password
			$.ajax({

				url: "https://bnchs-robotics-website-server.glitch.me/api/reset",
				type: "POST",
				crossDomain: true,

				data: {osis: user, reset_key : authentication_token, password: pwd, password_re: pwd_re},

				success: function (data, state, response) {

					// Successfully authenticated user

					$("#form-activate").hide();
					$("#form-reset-completed").show();
					issueMessage("Your account has been successfully activated, you will be redirected to login shortly.");

					signOut(true);

				},

				error: function (xhr) {

					if (xhr.status == 404 || xhr.status == 400){
						issueMessage(xhr.responseJSON.message);
					} else {
						issueMessage("An error occured - the server may be down. Please try again later.\n\nIf you continue to encounter this issue, please send an email to webmaster@team5599.com.");
					}

					$("#form-reset-button").removeAttr("disabled");
					return;

				}

			})

			return false;

		})

	}
	
}

// Display Page Managers
// ========================================================================================================= //

// ------// Display Index Page
// ------//--------------------------------------------- //

var SAMPLE_SPONSORS = [
	{
		name : "FIRST Robotics Program",
		url : "www.FirstInspires.org",
		image : "https://upload.wikimedia.org/wikipedia/en/thumb/a/a2/FIRST_Logo.svg/1200px-FIRST_Logo.svg.png"
	},
	{
		name : "Benjamin N. Cardozo High School",
		url : "www.cardozohigh.com",
		image : "https://pbs.twimg.com/profile_images/984203606105604096/0s83LbPq_400x400.jpg"
	},
	{
		name : "SolidWorks",
		url : "https://www.solidworks.com/",
		image : "https://i1.wp.com/www10.mcadcafe.com/blogs/jeffrowe/files/2017/09/icons-solidworks.png?resize=600%2C300&ssl=1"
	},
	{
		name : "GitHub",
		url : "www.GitHub.com",
		image : "http://pluspng.com/img-png/github-octocat-vector-png--1600.png"
	},
	{
		name : "BNCHS Parent-Teacher Association",
		url : "www.cardozohigh.com",
		image : ""
	}
];

function loadSponsorsInSection(){

	$(".sponsors-container").empty();
	$("#sponsors-main-block > #sponsor-load-error").remove();

	$.ajax({

		url: "https://bnchs-robotics-website-server.glitch.me/api/sponsors/current",
		type: "GET",
		crossDomain: true,

		success: function (data, state, response) {

			var sponsors_payload_obj = data.payload;
			var sponsors_payload = Object.values(sponsors_payload_obj);

			console.log("Sponsors: ", sponsors_payload);

			if (sponsors_payload.length !== 0){
				for (var index = 0; index < sponsors_payload.length; index++){
					addSponsorItem(sponsors_payload[index]);
				}
			} else {
				for (var index = 0; index < SAMPLE_SPONSORS.length; index++){
					addSponsorItem(SAMPLE_SPONSORS[index]);
				}
			}

		},

		error: function (xhr) {

			// Failed to load sponsors from database

			$("#sponsors-main-block").prepend($('<p id="sponsor-load-error" class="text-danger" style="margin-bottom:20px"><em>There was an issue fetching sponsors from the database- the following information may not be accurate.</em></p>'));

			for (var index = 0; index < SAMPLE_SPONSORS.length; index++){
				addSponsorItem(SAMPLE_SPONSORS[index]);
			}

		},

		complete : function(){

			$("#loading-container").hide();

			$(".sponsors-container").imagesLoaded(function(){

				console.log("IMAGES LOADED");

				/*
				$(".sponsors-container").find("img").each(function(index){

					var img_height = $(this).height;
					var img_width = $(this).width;

					if (img_height >= img_width){
						$(this).addClass("sponsor-image-height-cap");
					} else {
						$(this).addClass("sponsor-image-width-cap");
					}

				})
				*/

				$(".sponsors-container > .sponsor-block-item").each(function(inex){

					var sponsorImage = $(this).find("img");
					var sponsorDetail = $(this).find(".sponsor-description");

					if (sponsorImage.length !== 0){

						var img_height = sponsorImage.height;
						var img_width = sponsorImage.width;

						if (img_height >= img_width){
							sponsorImage.addClass("sponsor-image-height-cap");
						} else {
							sponsorImage.addClass("sponsor-image-width-cap");
						}

						if (sponsorDetail.length !== 0){

							if (sponsorDetail.width() > sponsorImage.width()){

								sponsorDetail.removeClass("bottom");
								sponsorDetail.addClass("right");
							}
						}

					}

				})

				console.log("SIZE CHANGED");

				/*
				$(".sponsors-container").masonry({
					// options
					itemSelector: ".sponsor-block-item",
					fitWidth: true
				});
				*/

				var sponsor_packery = new Packery($('.sponsors-container')[0], {
					// options...
					itemSelector: '.sponsor-block-item'
				});

				console.log("PACKERY CONSTRUCTED");

				setTimeout(function(){
					sponsor_packery.layout();
					console.log("LAYOUT CALLED");
				}, 2000)

			})
		}

	})


	function addSponsorItem(sponsorObj){

		// Properties
		var name = sponsorObj.name;
		var url = ("url" in sponsorObj) ? sponsorObj.url : null;
		var image = ("image" in sponsorObj) ? (sponsorObj.image !== "" ? sponsorObj.image : null) : null;

		// DOM
		var sponsorItem = $('<div class="sponsor-block-item"></div>');

		var sponsorLink = $('<a class="stretched-link"></a>');
		sponsorLink.attr("href", url ? url : "");
		sponsorItem.append(sponsorLink);

		if (image != null){

			var sponsorImage = new Image();
			sponsorImage.src = image;
			sponsorLink.append($(sponsorImage));

			var sponsorDetail = $('<div class="sponsor-description bottom"><p>' + name + '</p></div>');
			sponsorItem.append(sponsorDetail);

		} else {
			sponsorLink.text(name);
			sponsorItem.addClass("text-padding");
		}

		$(".sponsors-container").append(sponsorItem);

	}

}

function handleGeneric(){
	
	// $("#nazifa-champs").modal();

	//
	// Load Sponsors
	//

	if ($(".sponsors-container").length > 0){

		loadSponsorsInSection();

	}

	// 
	// Load Blog Posts
	//

	

	if ($("#blog-post-display").length !== 0){

		$("#blog-post-display").empty();
		
		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/blog",
			type: "GET",
			crossDomain: true,

			success: function (data, state, response) {

				var blog_payload = data.payload;

				if (blog_payload.length !== 0){
					for (var index = 0; index < blog_payload.length; index++){

						var blog_data = {
							title : blog_payload[index].title,
							url : blog_payload[index].url,
							author : blog_payload[index].author.displayName,
							date : new Date(blog_payload[index].published)
						}

						var post_content = blog_payload[index].content;

						// Assume post contains HTML markup . . .					
						if ((post_content.indexOf("<") !== -1) && (post_content.indexOf(">") !== -1 )){
							var content_dom = $(post_content);
							post_content = content_dom.text();
						}

						blog_data.content = post_content;

						buildBlogPost(blog_data);

					}
				} else {

					var info_block = $('<div class="text-center info-block"><div></div></div>');
					info_block.find("div").append($('<p class="lead text-center">No content available on the blog at this time!<br>You can subscribe to our Newsletter for notifcations and future updates!</p>'));
					$("#blog-post-display").append(info_block);

					
				}

			},

			error: function (xhr) {

				// Failed to load blog data

				var info_block = $('<div class="text-center info-block"><div></div></div>');
				info_block.find("div").append($('<p class="text-danger d-block" style="margin-top:20px;margin-bottom:20px; text-align:center"><em>There was an issue fetching blog data from the database- the following information may not be accurate.</em></p><br>'));
				info_block.find("div").append($('<p class="lead text-center">No content available on the blog at this time!<br>You can subscribe to our Newsletter for notifcations and future updates!</p>'));
				$("#blog-post-display").append(info_block);

			},

			complete : function(){

				var blog_div_height = $("#blog-post-display").height();
				$("#google-calendar-agenda").attr("height", (blog_div_height > 260) ? ((blog_div_height - 110) + "px") : "auto");
			}

		})

		function buildBlogPost(blog_data){

			var blogItem = $('<div class="clearfix"></div>');

			var content_preview = blog_data.content;

			if (content_preview.length > 280){
				var nextSpace = content_preview.substring(280, content_preview.length).indexOf(" ");

				if (nextSpace == -1){
					// No valid space was found to cut the string, so we'll have to cut it at the word!
					// If there's just an extra 10 characters, let it be.
					nextSpace = (content_preview.length < 290) ? 10 : 0;
				}

				content_preview = content_preview.substring(0, 280 + nextSpace) + " . . .";

			}

			var author_string = "By " + blog_data.author + " on " + date_helpers.format_day[blog_data.date.getDay()] + ", " + date_helpers.format_month[blog_data.date.getMonth()] + " " + date_helpers.date_suffix(blog_data.date.getDate()) + ", " + blog_data.date.getFullYear(); 

			var post_title = $('<a class="blogembed-title"></a>');
			post_title.attr("href", blog_data.url);
			post_title.text("» " + blog_data.title);

			var post_author = $('<p class="blogembed-author"</p>');
			post_author.text(author_string);

			var post_content = $('<p class="text-muted blogembed-content"></p>');
			post_content.text(content_preview);

			var post_link = $('<a style="font-size:12px;float:right"></a>');
			post_link.attr("target", "blank");
			post_link.attr("href", blog_data.url);
			post_link.text("Read More »");

			blogItem.append(post_title);
			blogItem.append(post_author);
			blogItem.append(post_content);
			blogItem.append(post_link);

			$("#blog-post-display").append(blogItem);
			$("#blog-post-display").append($('<div class="divider blog"></div>'));

		}

	}

	// Sliders

	configureSliders();

}

function configureSliders(){

	if ($("#flickr-slider").length !== 0){

		var window_width = $(this).width();
		if (window_width >= 770){
			$("#flickr-slider").css("height", "420px");
		} else {
			$("#flickr-slider").css("height", "320px");
		}

	}

	if ($(".overlay-blur-slide").length !== 0){

		var carousel_height = $(".overlay-blur-slide").parent().parent().height();
		console.log("CAROUSEL HEIGHT", carousel_height);
		$(".overlay-blur-slide").each(function(index){
			$(this).height(carousel_height);
			$(this).find(".overlay-blur-img").height(carousel_height);
		})

	}
	
}

// ------// Display Robots Page
// ------//--------------------------------------------- //

function handleRobotsPage(){

	$("#loading-container").show();
	$("#robots-container").hide();
	
	$.ajax({

		url: "https://bnchs-robotics-website-server.glitch.me/api/robots",
		type: "GET",
		crossDomain: true,

		// data: {},

		success: function (data, state, response) {

			console.log("Robots Data ", data.payload);

			buildRobotsPage(data.payload)			
		},

		error: function (xhr) {

			console.log("An error occurred when fetching from the Robots data.", xhr);

			$("#robot-fail-alert").show();
			$("#robot-display-container").hide();

		},

		complete: function(){
			$("#loading-container").hide();
			$("#robots-container").show();
		}

	})


	var competition_type_color = {
		"FRC" 		: "primary",
		"SeaPerch" 	: "info"
	}

	function buildRobotsPage(robotsData){

		var requested_robot = getUrlParameter("robot");

		$(".robot-item-btn-container").empty();

		robotsData.sort(function(a, b){
			return parseInt(b.season) - parseInt(a.season);
		})

		var mostRecentRobot = robotsData[0]["_id"];

		if ($(document).width() <= BS_breakpoint_MD){

			var dropdown_groupings = {};

			var robotSelect = $('<select class="form-control-lg" style="width:100%;margin-bottom:20px;"></select>');

			for (var i = 0; i < robotsData.length; i++){

				var robotItem = robotsData[i];

				if (!(robotItem.type in dropdown_groupings)){
					var dropdown_grouping = $('<optgroup label="' + robotItem.type + '"></optgroup>');
					dropdown_groupings[robotItem.type] = dropdown_grouping;
					robotSelect.append(dropdown_grouping);
				} 

				var robotSelectItem = $('<option value="' + robotItem._id + '" selected>' + robotItem.season + ' - ' + robotItem.name + '</option>');
				dropdown_groupings[robotItem.type].append(robotSelectItem);

				if ((requested_robot !== null) && (requested_robot !== '') && (robotItem.season == requested_robot)){
					requested_robot = robotItem._id;
				}

			}

			$(".robot-item-btn-container").append(robotSelect);

			robotSelect.change(function(){
				displayRobotInformation( $(this).val() );
			})

		} else {
			
			for (var i = 0; i < robotsData.length; i++){

				var robotItem = robotsData[i];

				var competition_type = (competition_type_color[robotItem.type] != null) ? competition_type_color[robotItem.type] : "secondary";
				
				var robotButton = $('<button class="btn btn-' + competition_type + ' robot-item-btn" type="button">' + robotItem.name + '<span class="bg-' + competition_type + ' robot-item-btn-competition-label">' +robotItem.type + ' ' + robotItem.season + '</span></button>');
				robotButton.attr("robot_id", robotItem._id);


				$(".robot-item-btn-container").append(robotButton);

				if ((requested_robot !== null) && (requested_robot !== '') && (robotItem.season == requested_robot)){
					requested_robot = robotItem._id;
				}

			}

		}

		$(".robot-item-btn").click(function(){
			displayRobotInformation( $(this).attr("robot_id") );
		})


		robotsData = mapArrayToObject(robotsData);

		function displayRobotInformation(robot_id){

			// Buttons
			$(".robot-item-btn").removeClass("active");
			$('.robot-item-btn[robot_id="' + robot_id + '"').addClass("active");

			// Information Display

			var robotInformation = robotsData[robot_id];

			$("#robot-info-title").text(robotInformation.name);
			$("#robot-info-season").text(robotInformation.type + " " + robotInformation.season);
			$("#robot-info-bio").text(robotInformation.biography);

			$("#robot-competitions-container").empty();

			var competitions = Object.values(robotInformation.competitions);
			if (competitions.length > 0){
				for (var competition_index in competitions){
					competition_button = $('<a class="btn btn-primary text-left robot-info-competitions-btn" role="button">' + competitions[competition_index].name + '</a>');
					if (competitions[competition_index]["url"] !== "" && competitions[competition_index]["url"] !== null){
						competition_button.attr("href", competitions[competition_index].url);
						competition_button.append($('<i class="fa fa-film float-right"></i>'));
					}
					$("#robot-competitions-container").append(competition_button);
				}
			} else {
				$("#robot-competitions-container").append($('<p style="padding:10px;background-color:#eee;margin-top:20px;font-size:14px;color:#000;border-radius:4px;text-align:center"><em>No competitions recorded</em></p>'))
			}

			$("#robot-info-carousel-slide-container").empty();

			if (Object.keys(robotInformation.media).length > 0){
				for (var media_index in robotInformation.media){

					var media_url = robotInformation.media[media_index];

					// Drop any parameters as converting to an embed willbreak the URL
					if (media_url.indexOf("\&") !== -1){
						media_url = media_url.substring(0, media_url.indexOf("\&"));
					}

					media_url = media_url.replace("watch?v=", "embed/");

					console.log(media_url);

					var carousel_item = $('<div class="carousel-item' + (($(".carousel-item").length == 0) ? ' active' : '') + '"><iframe width="560" height="415" allowfullscreen frameborder="0" src="' + media_url + '" class="robot-info-video"></iframe></div>');
					$("#robot-info-carousel-slide-container").append(carousel_item);
				}
				$("#robot-info-carousel-container").show();
			} else {
				$("#robot-info-carousel-container").hide();
			}

		}

		var robotToDisplay = (requested_robot == null || requested_robot == '') ? mostRecentRobot : ((robotsData[requested_robot] == null) ? mostRecentRobot : requested_robot);
		displayRobotInformation(robotToDisplay);

	}

}


// ------// Display Team Page
// ------//--------------------------------------------- //

function handleTeamPage(){
	
	// Set up the years
	$("#about-team-select").empty();

	var dateObject = new Date();

	var queryYear = getUrlParameter("season");
	if (queryYear == '' || queryYear == null){
		queryYear = dateObject.getMonth() > 8 ? dateObject.getFullYear() + 1: dateObject.getFullYear();
	}

	for (var year = dateObject.getMonth() > 8 ? dateObject.getFullYear() + 1: dateObject.getFullYear(); year >= 2015; year--){
		$("#about-team-select").append($("<option></option>").val(year).html("Season " + (year - 1) + " - " + year));
	}

	$("#loading-container").show();
	$("#team-page-container").hide();

	$("#about-team-select").val(queryYear);

	// Handle

	var psuedoButton = $("<button>").css("display","none").appendTo($(document.body));
	
	psuedoButton.click(function(e){
		e.preventDefault();

		var selectedYear = $("#about-team-select").val();
		setUrlParameter("season", selectedYear);
		loadTeamHistory(selectedYear);

		return false;
	})

	$("#about-team-select").change(function(e){
		e.preventDefault();
		psuedoButton.click();
		return false;
	});


	loadTeamHistory($("#about-team-select").val());

	function loadTeamHistory(season){

		console.log("Loading team data for the " + (season - 1) + " - " + season + " season");

		$("#about-team-select").attr("disabled", true);
		$("#team-page-container").hide();
		$("#loading-container").show();

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/team/" + season,
			type: "GET",
			crossDomain: true,

			// data: {},

			success: function (data, state, response) {

				console.log("Team Data ", data.payload);

				
				buildTeamPage(data.payload, season);


				if (season == $("#about-team-select").val()){
					$("#team-page-container").show();
					$("#loading-container").hide();
				}

			},

			error: function (xhr) {

				console.log("An error occurred when fetching from the Team data.", xhr);

				$("#team-page-container").after($('<p style="margin-top:20px;margin-bottom:20px;text-align:center;"><em>An error occured when loading team data for this season. Please check back at a later time!</em></p>'));

				$("#team-page-container").show();
				$("#loading-container").hide();
				

			},

			complete: function(){
				$("#about-team-select").attr("disabled", false);
			}

		})

		return false;
	}

	function buildTeamPage(payload, season){

		$("#team-leadership-container").empty();

		for (var i = 0; i < payload.leadership.length; i++){
			createPersonCard(payload.leadership[i], i, "Leader");
		}

		$("#team-mentors-container > div").empty();
		for (var i = 0; i < payload.mentors.length; i++){
			createPersonCard(payload.mentors[i], i, "Mentor");
		}

		if (("url" in payload.media) && (payload.media.url.replace(/ /g, "") !== "")){

			$(".team-group-container > img").attr("src", payload.media.url);
			$(".parallax-img > div").css("background-image", `url("${payload.media.url}") !important`);
			$(".team-group-container").show();

			if (("caption" in payload.media) && (payload.media.caption.replace(/ /g, "") !== "")){
				$(".team-group-container > div > p").text(payload.media.caption);
				$(".team-group-container > div").show();
			} else {
				$(".team-group-container > div").hide();
			}

		} else {

			$(".parallax-img > div").css("background-image", "");
			$(".team-group-container").hide();

		}

		$("#team-roster-container").empty();
		if (payload.roster.length > 0){
			for (var i = 0; i < payload.roster.length; i++){
				$('<p class="team-person-item"></p>').text(payload.roster[i]).appendTo($("#team-roster-container"));
			}
		} else {
			$('<p class="team-person-item"></p>').text("No roster data found for this season").appendTo($("#team-roster-container"));
		}

		//

		function createPersonCard(personObject, iteration, type){

			var card = $('<div class="team-person-card"></div>');

			if (personObject.image.replace(/ /g, "") !== ""){
				$('<img class="team-person-image" />').attr("src", personObject.image).appendTo(card);
			}
			
			$('<h5 class="text-center team-person-name"></h5>').text(personObject.name).appendTo(card);

			for (var roleId in personObject.roles){

				var roleItem = personObject.roles[roleId];

				var condition_a = (roleItem.season_first <= season && roleItem.season_last >= season);
				var condition_b = (type == "Leader") ? (roleItem.title.toLowerCase().indexOf("mentor") == -1 && roleItem.title.toLowerCase().indexOf("coach") == -1) : (roleItem.title.toLowerCase().indexOf("mentor") !== -1 || roleItem.title.toLowerCase().indexOf("coach") !== -1);
				var condition_c = (roleItem["ignore"] !== "true" && roleItem["ignore"] !== true);

				if (condition_a){
					// Role is more prominent to the season
					$('<p class="text-center team-person-title"></p>').html("<strong>" + personObject.roles[roleId].title + " [" + (parseInt(personObject.roles[roleId].season_first) - 1) + " - " + personObject.roles[roleId].season_last + "]</strong>").appendTo(card);
				}


				/*
				// ONLY THE ROLES OF THAT TIME PERIOD SHOULD BE SHOWN
				if (roleItem.title.toLowerCase().indexOf("mentor") == -1 && roleItem.title.toLowerCase().indexOf("coach") == -1){
					if (roleItem.season_first <= season && roleItem.season_last >= season){
						// Role is more prominent to the season
						console.log("STRONG");
						$('<p class="text-center team-person-title"></p>').html("<strong>" + personObject.roles[roleId].title + " [" + personObject.roles[roleId].season_first + " - " + personObject.roles[roleId].season_last + "]</strong>").appendTo(card);
					} else {
						// Role is not as prominent
						$('<p class="text-center team-person-title"></p>').text(personObject.roles[roleId].title + " [" + personObject.roles[roleId].season_first + " - " + personObject.roles[roleId].season_last + "]").appendTo(card);
					}
				}
				*/
			}

			var bio_char_limit = (type == "Leader") ? 400 : 300;
			console.log(type, bio_char_limit);

			// personObject.biography = "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.";
			
			if ((personObject.biography.replace(/ /g) !== "") || true){
				var bio = $('<p class="text-justify team-person-bio"></p>').text((personObject.biography.length > bio_char_limit) ? (personObject.biography.substring(0, parseInt(bio_char_limit)) + " . . .") : (personObject.biography)).appendTo(card);
			} 
			
			var bio_button = $('<a class="text-center" style="margin-top:20px;font-size:12px;" href=""><em>Read Full Biography</em></a>').appendTo(card);

			bio_button.click(function(event){
				event.preventDefault();
				displayPersonModal(personObject);
			})


			if (type == "Leader"){
				card.appendTo($("#team-leadership-container"));
			} else {
				var nth_child = (iteration % $("#team-mentors-container > div").length) + 1;
				card.appendTo($("#team-mentors-container > div:nth-child(" + nth_child + ")"));
			}

		}


		
		function displayPersonModal(personObject){

			$("#personModal_img").attr("src", personObject.image);
			$("#personModal_name").text(personObject.name);
			$("#personModal_season").html("<em>" + personObject.season_first + " - " + personObject.season_graduated + "</em>");


			$("#personModal_roles > .team-person-title").remove();
			for (var roleId in personObject.roles){
				var roleItem = personObject.roles[roleId];
				$('<p class="text-right team-person-title"></p>').text(roleItem.title + " [" + ((roleItem.season_first == roleItem.season_last) ? ((parseInt(roleItem.season_first) - 1) + "-" + roleItem.season_last + " Season]") : ( (parseInt(roleItem.season_first) - 1) + "-" + roleItem.season_first.substring(2,4) + "  to " + (parseInt(roleItem.season_last) - 1) + "-" + roleItem.season_last.substring(2,4) + " Seasons]"))).appendTo($("#personModal_roles"));
			}

			if (personObject.biography.replace(/ /g, "") == ""){
				// $("#personModal_biography").text("At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat.");
				var auto_bio = personObject.name.split(" ")[0] + " joined the team during its " + (parseInt(personObject.season_first) - 1) + "-" + personObject.season_first + " season and graduated after the " + (parseInt(personObject.season_graduated) - 1) + "-" + personObject.season_graduated + " season. Throughout their time on the team, they held (" + Object.keys(personObject.roles).length + ") diverse titles and various other responsibilities.";

				$("#personModal_biography").html('<span style="font-size:10px"><em>No bio available - autogenerating</em></span><br>' + auto_bio);
			} else {
				$("#personModal_biography").text(personObject.biography);
			}
			
			

			$("#personModal").modal();
		}

	}
	
}

// ------// Display Contact Us Page
// ------//--------------------------------------------- //


function handleContactPage(){

	$("#loading-container").show();
	$("#contacts-container").hide();
	
	$.ajax({

		url: "https://bnchs-robotics-website-server.glitch.me/api/contacts",
		type: "GET",
		crossDomain: true,

		// data: {},

		success: function (data, state, response) {

			console.log("Contacts Data ", data.payload);

			$("#contacts_div").empty();
			for (var i = 0; i < data.payload.length; i++){
				addContact(data.payload[i].name, data.payload[i].contact);
			}

		},

		error: function (xhr) {

			console.log("An error occurred when fetching from the Contacts data.", xhr);

			$("#contacts_div").empty();
			$("#contacts_div").append($('<p style="margin-bottom:20px;text-align:center;"><em>An error occured when loading contacts data, information may not be accurate.</em></p>'));

			addContact("General Marketing", "sentinels@team5599.com");
		},

		complete: function(){
			$("#loading-container").hide();
			$("#contacts-container").show();
		}

	})


	function addContact(name, contact){
		console.log("Adding Item <" + name + "> <" + contact + ">");
		$("#contacts_div").append($('<div class="contact-item"><p class="text-center" style="font-size:18px;margin:5px;"><strong>' + name + '</strong></p><p class="text-center" style="font-size:16px;margin:10px;">' + contact + '</p></div>'));
	}

}


// ------// Display Contact Us Page
// ------//--------------------------------------------- //


function handleSponsorsPage(){

	var sponsors_builder = {};

	$("#sponsors-container-inner").empty();

	$("#loading-container").show();
	$("#sponsors-container").hide();

	console.log("Sponsors page");


	/*
	
	$.ajax({

		url: "https://bnchs-robotics-website-server.glitch.me/api/sponsors",
		type: "GET",
		crossDomain: true,

		// data: {},

		success: function (data, state, response) {

			console.log("Sponsors Data ", data.payload);

			for (var i = 0; i < data.payload.length; i++){
				addSponsorItem(data.payload[i]);
			}

		},

		error: function (xhr) {

			console.log("An error occurred when fetching from the Sponsors data.", xhr);

			$("#sponsors-container-inner").append($('<p style="margin-bottom:20px;text-align:center;"><em>An error occured when loading sponsors data! The following information may not be up to date, but you can check back at a later time!</em></p>'));

			for (var index = 0; index < SAMPLE_SPONSORS.length; index++){
				addSponsorItem(SAMPLE_SPONSORS[index]);
			}
		},

		complete: function(){
			console.log(sponsors_builder);
			buildSponsorItems();
			$("#loading-container").hide();
			$("#sponsors-container").show();
		}

	})


	function addSponsorItem(sponsorObj){

		// Properties
		var name = sponsorObj.name;
		var url = ("url" in sponsorObj) ? sponsorObj.url : null;
		var image = ("image" in sponsorObj) ? (sponsorObj.image !== "" ? sponsorObj.image : null) : null;

		// DOM
		var sponsorItem = $('<div class="sponsor-block-item sm"></div>');

		var sponsorLink = $('<a class="stretched-link"></a>');
		sponsorLink.attr("href", url ? url : "");
		sponsorItem.append(sponsorLink);

		if (image != null){

			var sponsorImage = new Image();
			sponsorImage.src = image;
			sponsorLink.append($(sponsorImage));

			var sponsorDetail = $('<div class="sponsor-description sm bottom"><p>' + name + '</p></div>');
			sponsorItem.append(sponsorDetail);

		} else {
			sponsorLink.text(name);
			sponsorItem.addClass("text-padding");
		}

		for (var season = 0; season < sponsorObj.seasons.length; season++){

			if (Array.isArray(sponsors_builder[sponsorObj.seasons[season] + ""]) == false) {
				sponsors_builder[sponsorObj.seasons[season] + ""] = [];
			}

			sponsors_builder[sponsorObj.seasons[season] + ""].push(sponsorItem);
		}

	}

	function buildSponsorItems(){

		var build_order = Object.keys(sponsors_builder).sort(function(a,b){
			return b - a;
		});

		var remainderPushLeft = (build_order[0] % 2)

		build_order.forEach(function(season){

			console.log("Building " + season);

			var sp_div = $('<div class="clearfix" style="margin-bottom:40px; width:100%;"><h1 class="d-block">' + (season - 1) + ' - ' + season + '</h1></div>');
			var sp_container = $('<div class="sponsors-display-inner"></div>');
			sp_div.append(sp_container);

			if (season % 2 == remainderPushLeft){
				sp_div.addClass("pack-left");
				sp_div.find("h1").css("text-align", "left");
			} else {
				sp_div.addClass("pack-right");
				sp_div.find("h1").css("text-align", "right");
			}

			sponsors_builder[season].forEach(function(sponsorObj){
				sponsorObj.clone().appendTo(sp_container);
			})

			$("#sponsors-container-inner").append('<div class="divider sponsor"></div>');
			sp_div.appendTo($("#sponsors-container-inner"));
			

		})

		$(".sponsors-display-inner > .sponsor-block-item").imagesLoaded(function(){

			$(".sponsors-display-inner > .sponsor-block-item").each(function(index){

				var sponsorImage = $(this).find("img");
				var sponsorDetail = $(this).find(".sponsor-description");

				if (sponsorImage.length !== 0){

					var img_height = sponsorImage.height;
					var img_width = sponsorImage.width;

					if (img_height >= img_width){
						sponsorImage.addClass("sponsor-image-height-cap");
					} else {
						sponsorImage.addClass("sponsor-image-width-cap");
					}
					sponsorImage.addClass("sm");

					if (sponsorDetail.length !== 0){

						if (sponsorDetail.width() > sponsorImage.width()){

							sponsorDetail.removeClass("bottom");
							sponsorDetail.addClass("right");
						}
					}

				}

			})

			var packery_blocks = [];

			$('.pack-left > .sponsors-display-inner, .pack-right > .sponsors-display-inner').each(function(){

				var originLeft = $(this).parent().hasClass("pack-left") ? true : false;

				var packery_block = new Packery($(this)[0], {
					itemSelector: '.sponsor-block-item',
					originLeft : originLeft
				});

				packery_blocks.push(packery_block);

			})

			

			setTimeout(function(){
				$.each(packery_blocks, function(index, value){
					value.layout();
				})
				console.log("LAYOUT")
			}, 1000);


			/*
			var packery_sponsor_left = $('.pack-left > .sponsors-display-inner').packery({
				// options...
				itemSelector: '.sponsor-block-item',
				originLeft: true
			});

			var packery_sponsor_right = $('.pack-right > .sponsors-display-inner').packery({
				// options...
				itemSelector: '.sponsor-block-item',
				originLeft: false
			});

			setTimeout(function(){
				packery_sponsor_right.layout();
				packery_sponsor_left.layout();	
			}, 1000);
			* /

		})

	}

	*/

	loadSponsorsInSection();

}


// ------// Display Count Timer Page
// ------//--------------------------------------------- //


function handleCountdownPage(){

	class CountDownClock {

		clock;
		endTime;

		spans = {
			days 	: null,
			hours 	: null,
			minutes : null,
			seconds : null
		};

		updateInterval;

		constructor(clockId, endTime){

			this.clock = document.getElementById(clockId);
			this.endTime = endTime;

			this.spans.days 	= this.clock.querySelector(".days > div > span");
			this.spans.hours 	= this.clock.querySelector(".hours > div > span");
			this.spans.minutes 	= this.clock.querySelector(".minutes > div > span");
			this.spans.seconds 	= this.clock.querySelector(".seconds > div > span");
		
			var clockObjectReference = this;

			this.updateClock(clockObjectReference);
			this.updateInterval = setInterval(function(){
				clockObjectReference.updateClock(clockObjectReference)
			}, 1000);
		}

		getTimeRemaining(endTime){

			var total = Date.parse(endTime) - Date.parse(new Date());
			
			var timeRemaining = {
				seconds : Math.floor((total / 1000) % 60),
				minutes : Math.floor((total / 1000 / 60) % 60),
				hours : Math.floor((total / (1000 * 60 * 60)) % 24),
				days : Math.floor(total / (1000 * 60 * 60 * 24)),
			}

			timeRemaining.total = total;

			return timeRemaining;
		}

		updateClock(clockObjectReference){

			var timeRemaining = clockObjectReference.getTimeRemaining(clockObjectReference.endTime);

			clockObjectReference.spans.days.innerHTML = timeRemaining.days;
			clockObjectReference.spans.hours.innerHTML = ("0" + timeRemaining.hours).slice(-2);
			clockObjectReference.spans.minutes.innerHTML = ("0" + timeRemaining.minutes).slice(-2);
			clockObjectReference.spans.seconds.innerHTML = ("0" + timeRemaining.seconds).slice(-2);
		
			if ((timeRemaining.total <= 0) && (typeof clockObjectReference["updateInterval"] !== "undefined")){
				clockObjectReference.clearInterval(clockObjectReference.updateInterval);
			}

		}

	}

	var timer_kickoff = new CountDownClock("clock-kickoff", new Date(2020, 1, 4));
	// var timer_nyc = new CountDownClock("clock-nyc", new Date(2019, 3, 5));
	// var timer_sbpli = new CountDownClock("clock-sbpli", new Date(2019, 2, 27));

}

// Helper Methods
// ========================================================================================================= //

function getPage(){
	return (location.pathname.substring(location.pathname.lastIndexOf("/") + 1)).toString().toLowerCase().replace(".html", "");
}

// SignIn Status
function getSignInStatus(callback_success, callback_failure){
	if (user_data){
		callback_success(user_data);
	} else {

		var osis = getCookie("osis");
		var token = getCookie("token");

		if (osis == null || osis == '' || token == null || token == ''){
			callback_failure();
			return;
		}

		$.ajax({

			url: "https://bnchs-robotics-website-server.glitch.me/api/users/" + osis,
			type: "GET",
			crossDomain: true,

			xhrFields : {
				withCredentials : true
			},

			data: {"osis": osis, "token": token},

			success: function (data, state, response) {

				user_data = data.data;
				if (callback_success){
					callback_success(data);
				}

			},

			error: function (xhr) {

				if (callback_failure){
					callback_failure(xhr);
				}

			}

		})
	}
}

// Do Sign Out
function signOut(skip_redirect){

	user_data = null;

	// Make Sign Out Request

	// <TODO> Delete token cookie from client browser

	$.ajax({

		url: "https://bnchs-robotics-website-server.glitch.me/api/signout",
		type: "POST",
		crossDomain: true,

		// data: {},

		success: function (data, state, response) {

			user_data = null;

		},

		error: function (xhr) {

			console.log("An error occurred when signing out.", xhr);
		
			// Failed to sign user out
			// Clear authentication cookies on client side

		},

		complete: function(){
			// Redirect to sign in page

			deleteCookie("osis");
			deleteCookie("token");


			if (skip_redirect != true){
				goToPage("SignIn.html");
			}
		}

	})

}

// Url Parameters
function getUrlParameter(sParam) {

    var sPageURL = window.location.search.substring(1),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');

        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
        }
    }

    return null;
};

function setUrlParameter(key, value) {

	var url = window.location.href;

	var baseUrl = url.split('?')[0],
		urlQueryString = '?' + url.split('?')[1],
		newParam = key + '=' + value,
		params = '?' + newParam;

	// If the "search" string exists, then build params from it
	if (urlQueryString) {
		var updateRegex = new RegExp('([\?&])' + key + '[^&]*');
		var removeRegex = new RegExp('([\?&])' + key + '=[^&;]+[&;]?');

		if (typeof value === 'undefined' || value === null || value === '') { // Remove param if value is empty
			params = urlQueryString.replace(removeRegex, "$1");
			params = params.replace(/[&;]$/, "");

		} else if (urlQueryString.match(updateRegex) !== null) { // If param exists already, update it
			params = urlQueryString.replace(updateRegex, "$1" + newParam);

		} else { // Otherwise, add it to end of query string
			params = urlQueryString + '&' + newParam;
		}
	}

	// no parameter was set so we don't need the question mark
	params = params === '?' ? '' : params;

	params = params.replace("?undefined&", "?");

	window.location.href = baseUrl + params;
}

// Cookies

function getCookie(a) {
	var b = document.cookie.match('(^|;)\\s*' + a + '\\s*=\\s*([^;]+)');
	return b ? b.pop() : '';
}

function deleteCookie( name ) {
	document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
}

// Array-Object conversion

function mapArrayToObject(array, key){

	key = key ? key : "_id";
	var map = {};

	array.forEach(function(item){
		map[item[key]] = item;
	})

	return map;
}

// Quick page redirection
function goToPage(pageName){
	window.location.href = "/" + pageName;
	return false;
}

// Date Formatting
var date_helpers = {

	format_day : ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],

	format_month : ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
	
	date_suffix : function(date_num){

		date_num = date_num.toString();
		var lastDigit = date_num[date_num.length - 1];

		switch(lastDigit){
			case "1":
				// 1st 11th 21st 31st
				return date_num + ((date_num == "11") ? "th" : "st");
			case "2":
				// 2nd 12th 22nd 32nd
				return date_num + ((date_num == "12") ? "th" : "nd");
			case "3":
				// 3rd, 13th, 23rd
				return date_num + ((date_num == "12") ? "th" : "rd");
			default :
				return date_num + "th";
		}


	},
	
	compare : function(d1, d2){
		return ((d1.getFullYear() == d2.getFullYear()) && (d1.getMonth() == d2.getMonth()) && (d1.getDate() == d2.getDate()))
	}
}

// Printing
function printElement(elem, append, delimiter) {

	var domClone = elem.cloneNode(true);

	var $printSection = document.getElementById("printSection");

	if (!$printSection) {
		$printSection = document.createElement("div");
		$printSection.id = "printSection";
		document.body.appendChild($printSection);
	}

	if (append !== true) {
		$printSection.innerHTML = "";
	} else if (append === true) {
		if (typeof (delimiter) === "string") {
			$printSection.innerHTML += delimiter;
		}
		else if (typeof (delimiter) === "object") {
			$printSection.appendChild(delimiter);
		}
	}

	$printSection.appendChild(domClone);

}
